

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 09 22:00:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F882
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 22/03/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F882 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     000E                     	;# 
   162     000F                     	;# 
   163     0010                     	;# 
   164     0011                     	;# 
   165     0012                     	;# 
   166     0013                     	;# 
   167     0014                     	;# 
   168     0015                     	;# 
   169     0015                     	;# 
   170     0016                     	;# 
   171     0017                     	;# 
   172     0018                     	;# 
   173     0019                     	;# 
   174     001A                     	;# 
   175     001B                     	;# 
   176     001B                     	;# 
   177     001C                     	;# 
   178     001D                     	;# 
   179     001E                     	;# 
   180     001F                     	;# 
   181     0081                     	;# 
   182     0085                     	;# 
   183     0086                     	;# 
   184     0087                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0089                     	;# 
   338     008C                     	;# 
   339     008D                     	;# 
   340     008E                     	;# 
   341     008F                     	;# 
   342     0090                     	;# 
   343     0091                     	;# 
   344     0092                     	;# 
   345     0093                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0094                     	;# 
   349     0095                     	;# 
   350     0096                     	;# 
   351     0097                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009A                     	;# 
   355     009B                     	;# 
   356     009C                     	;# 
   357     009D                     	;# 
   358     009E                     	;# 
   359     009F                     	;# 
   360     0105                     	;# 
   361     0107                     	;# 
   362     0108                     	;# 
   363     0109                     	;# 
   364     010C                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     0185                     	;# 
   370     0187                     	;# 
   371     0188                     	;# 
   372     0189                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0000                     	;# 
   376     0001                     	;# 
   377     0002                     	;# 
   378     0003                     	;# 
   379     0004                     	;# 
   380     0005                     	;# 
   381     0006                     	;# 
   382     0007                     	;# 
   383     0009                     	;# 
   384     000A                     	;# 
   385     000B                     	;# 
   386     000C                     	;# 
   387     000D                     	;# 
   388     000E                     	;# 
   389     000E                     	;# 
   390     000F                     	;# 
   391     0010                     	;# 
   392     0011                     	;# 
   393     0012                     	;# 
   394     0013                     	;# 
   395     0014                     	;# 
   396     0015                     	;# 
   397     0015                     	;# 
   398     0016                     	;# 
   399     0017                     	;# 
   400     0018                     	;# 
   401     0019                     	;# 
   402     001A                     	;# 
   403     001B                     	;# 
   404     001B                     	;# 
   405     001C                     	;# 
   406     001D                     	;# 
   407     001E                     	;# 
   408     001F                     	;# 
   409     0081                     	;# 
   410     0085                     	;# 
   411     0086                     	;# 
   412     0087                     	;# 
   413     0089                     	;# 
   414     008C                     	;# 
   415     008D                     	;# 
   416     008E                     	;# 
   417     008F                     	;# 
   418     0090                     	;# 
   419     0091                     	;# 
   420     0092                     	;# 
   421     0093                     	;# 
   422     0093                     	;# 
   423     0093                     	;# 
   424     0094                     	;# 
   425     0095                     	;# 
   426     0096                     	;# 
   427     0097                     	;# 
   428     0098                     	;# 
   429     0099                     	;# 
   430     009A                     	;# 
   431     009B                     	;# 
   432     009C                     	;# 
   433     009D                     	;# 
   434     009E                     	;# 
   435     009F                     	;# 
   436     0105                     	;# 
   437     0107                     	;# 
   438     0108                     	;# 
   439     0109                     	;# 
   440     010C                     	;# 
   441     010C                     	;# 
   442     010D                     	;# 
   443     010E                     	;# 
   444     010F                     	;# 
   445     0185                     	;# 
   446     0187                     	;# 
   447     0188                     	;# 
   448     0189                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451     0000                     	;# 
   452     0001                     	;# 
   453     0002                     	;# 
   454     0003                     	;# 
   455     0004                     	;# 
   456     0005                     	;# 
   457     0006                     	;# 
   458     0007                     	;# 
   459     0009                     	;# 
   460     000A                     	;# 
   461     000B                     	;# 
   462     000C                     	;# 
   463     000D                     	;# 
   464     000E                     	;# 
   465     000E                     	;# 
   466     000F                     	;# 
   467     0010                     	;# 
   468     0011                     	;# 
   469     0012                     	;# 
   470     0013                     	;# 
   471     0014                     	;# 
   472     0015                     	;# 
   473     0015                     	;# 
   474     0016                     	;# 
   475     0017                     	;# 
   476     0018                     	;# 
   477     0019                     	;# 
   478     001A                     	;# 
   479     001B                     	;# 
   480     001B                     	;# 
   481     001C                     	;# 
   482     001D                     	;# 
   483     001E                     	;# 
   484     001F                     	;# 
   485     0081                     	;# 
   486     0085                     	;# 
   487     0086                     	;# 
   488     0087                     	;# 
   489     0089                     	;# 
   490     008C                     	;# 
   491     008D                     	;# 
   492     008E                     	;# 
   493     008F                     	;# 
   494     0090                     	;# 
   495     0091                     	;# 
   496     0092                     	;# 
   497     0093                     	;# 
   498     0093                     	;# 
   499     0093                     	;# 
   500     0094                     	;# 
   501     0095                     	;# 
   502     0096                     	;# 
   503     0097                     	;# 
   504     0098                     	;# 
   505     0099                     	;# 
   506     009A                     	;# 
   507     009B                     	;# 
   508     009C                     	;# 
   509     009D                     	;# 
   510     009E                     	;# 
   511     009F                     	;# 
   512     0105                     	;# 
   513     0107                     	;# 
   514     0108                     	;# 
   515     0109                     	;# 
   516     010C                     	;# 
   517     010C                     	;# 
   518     010D                     	;# 
   519     010E                     	;# 
   520     010F                     	;# 
   521     0185                     	;# 
   522     0187                     	;# 
   523     0188                     	;# 
   524     0189                     	;# 
   525     018C                     	;# 
   526     018D                     	;# 
   527                           
   528                           	psect	idataBANK0
   529     00F9                     __pidataBANK0:
   530                           
   531                           ;initializer for VM_Init@F1329
   532     00F9  3407               	retlw	7
   533     00FA  3400               	retlw	0
   534     00FB  3418               	retlw	24
   535     00FC  342C               	retlw	44
   536     00FD  343E               	retlw	62
   537                           
   538                           ;initializer for _gCurrentState
   539     00FE  34C8               	retlw	200
   540     000E                     _TMR1	set	14
   541     0006                     _PORTBbits	set	6
   542     0010                     _T1CON	set	16
   543     0011                     _TMR2	set	17
   544     000C                     _PIR1bits	set	12
   545     0012                     _T2CONbits	set	18
   546     001E                     _ADRESH	set	30
   547     001F                     _ADCON0bits	set	31
   548     001F                     _ADCON0	set	31
   549     000B                     _INTCONbits	set	11
   550     0006                     _PORTB	set	6
   551     0005                     _PORTA	set	5
   552     0007                     _PORTC	set	7
   553     0081                     _OPTION_REGbits	set	129
   554     0092                     _PR2	set	146
   555     008C                     _PIE1bits	set	140
   556     009E                     _ADRESL	set	158
   557     009F                     _ADCON1	set	159
   558     0096                     _IOCB	set	150
   559     0087                     _TRISC	set	135
   560     0086                     _TRISB	set	134
   561     0085                     _TRISA	set	133
   562     0189                     _ANSELH	set	393
   563     0188                     _ANSEL	set	392
   564                           
   565                           	psect	strings
   566     0100                     __pstrings:
   567     0100                     stringtab:
   568     0100                     __stringtab:
   569                           
   570                           ;	String table - string pointers are 1 byte each
   571     0100  1BFF               	btfsc	btemp+1,7
   572     0101  290A               	ljmp	stringcode
   573     0102  1383               	bcf	3,7
   574     0103  187F               	btfsc	btemp+1,0
   575     0104  1783               	bsf	3,7
   576     0105  0800               	movf	0,w
   577     0106  0A84               	incf	4,f
   578     0107  1903               	skipnz
   579     0108  0AFF               	incf	btemp+1,f
   580     0109  0008               	return
   581     010A                     stringcode:
   582     010A                     stringdir:
   583     010A  3001               	movlw	high stringdir
   584     010B  008A               	movwf	10
   585     010C  0804               	movf	4,w
   586     010D  0A84               	incf	4,f
   587     010E  0782               	addwf	2,f
   588     010F                     __stringbase:
   589     010F  3400               	retlw	0
   590     0110                     __end_of__stringtab:
   591     0110                     STR_2:
   592     0110  3450               	retlw	80	;'P'
   593     0111  346C               	retlw	108	;'l'
   594     0112  3465               	retlw	101	;'e'
   595     0113  3461               	retlw	97	;'a'
   596     0114  3473               	retlw	115	;'s'
   597     0115  3465               	retlw	101	;'e'
   598     0116  3420               	retlw	32	;' '
   599     0117  3443               	retlw	67	;'C'
   600     0118  346F               	retlw	111	;'o'
   601     0119  346C               	retlw	108	;'l'
   602     011A  346C               	retlw	108	;'l'
   603     011B  3465               	retlw	101	;'e'
   604     011C  3463               	retlw	99	;'c'
   605     011D  3474               	retlw	116	;'t'
   606     011E  3420               	retlw	32	;' '
   607     011F  3420               	retlw	32	;' '
   608     0120  3420               	retlw	32	;' '
   609     0121  3420               	retlw	32	;' '
   610     0122  3400               	retlw	0
   611     0123                     STR_3:
   612     0123  3459               	retlw	89	;'Y'
   613     0124  346F               	retlw	111	;'o'
   614     0125  3475               	retlw	117	;'u'
   615     0126  3472               	retlw	114	;'r'
   616     0127  3420               	retlw	32	;' '
   617     0128  3444               	retlw	68	;'D'
   618     0129  3472               	retlw	114	;'r'
   619     012A  3469               	retlw	105	;'i'
   620     012B  346E               	retlw	110	;'n'
   621     012C  346B               	retlw	107	;'k'
   622     012D  3421               	retlw	33	;'!'
   623     012E  3420               	retlw	32	;' '
   624     012F  3420               	retlw	32	;' '
   625     0130  3420               	retlw	32	;' '
   626     0131  3420               	retlw	32	;' '
   627     0132  3420               	retlw	32	;' '
   628     0133  3400               	retlw	0
   629     0134                     STR_16:
   630     0134  3443               	retlw	67	;'C'
   631     0135  3468               	retlw	104	;'h'
   632     0136  3461               	retlw	97	;'a'
   633     0137  346E               	retlw	110	;'n'
   634     0138  3467               	retlw	103	;'g'
   635     0139  3465               	retlw	101	;'e'
   636     013A  3420               	retlw	32	;' '
   637     013B  3464               	retlw	100	;'d'
   638     013C  3475               	retlw	117	;'u'
   639     013D  3465               	retlw	101	;'e'
   640     013E  343A               	retlw	58	;':'
   641     013F  3420               	retlw	32	;' '
   642     0140  3420               	retlw	32	;' '
   643     0141  3420               	retlw	32	;' '
   644     0142  3420               	retlw	32	;' '
   645     0143  3420               	retlw	32	;' '
   646     0144  3400               	retlw	0
   647     0145                     STR_10:
   648     0145  3444               	retlw	68	;'D'
   649     0146  3472               	retlw	114	;'r'
   650     0147  3469               	retlw	105	;'i'
   651     0148  346E               	retlw	110	;'n'
   652     0149  346B               	retlw	107	;'k'
   653     014A  3420               	retlw	32	;' '
   654     014B  3444               	retlw	68	;'D'
   655     014C  3469               	retlw	105	;'i'
   656     014D  3473               	retlw	115	;'s'
   657     014E  3470               	retlw	112	;'p'
   658     014F  3465               	retlw	101	;'e'
   659     0150  346E               	retlw	110	;'n'
   660     0151  3473               	retlw	115	;'s'
   661     0152  3469               	retlw	105	;'i'
   662     0153  346E               	retlw	110	;'n'
   663     0154  3467               	retlw	103	;'g'
   664     0155  3400               	retlw	0
   665     0156                     STR_9:
   666     0156  3430               	retlw	48	;'0'
   667     0157  3420               	retlw	32	;' '
   668     0158  3420               	retlw	32	;' '
   669     0159  3420               	retlw	32	;' '
   670     015A  3420               	retlw	32	;' '
   671     015B  3420               	retlw	32	;' '
   672     015C  3420               	retlw	32	;' '
   673     015D  3420               	retlw	32	;' '
   674     015E  3420               	retlw	32	;' '
   675     015F  3420               	retlw	32	;' '
   676     0160  3420               	retlw	32	;' '
   677     0161  3420               	retlw	32	;' '
   678     0162  3420               	retlw	32	;' '
   679     0163  3420               	retlw	32	;' '
   680     0164  3420               	retlw	32	;' '
   681     0165  3400               	retlw	0
   682     0166                     STR_8:
   683     0166  3449               	retlw	73	;'I'
   684     0167  346E               	retlw	110	;'n'
   685     0168  3473               	retlw	115	;'s'
   686     0169  3465               	retlw	101	;'e'
   687     016A  3472               	retlw	114	;'r'
   688     016B  3474               	retlw	116	;'t'
   689     016C  3420               	retlw	32	;' '
   690     016D  3443               	retlw	67	;'C'
   691     016E  346F               	retlw	111	;'o'
   692     016F  3469               	retlw	105	;'i'
   693     0170  346E               	retlw	110	;'n'
   694     0171  3473               	retlw	115	;'s'
   695     0172  343A               	retlw	58	;':'
   696     0173  3420               	retlw	32	;' '
   697     0174  3420               	retlw	32	;' '
   698     0175  3400               	retlw	0
   699     0176                     STR_4:
   700     0176  3443               	retlw	67	;'C'
   701     0177  346F               	retlw	111	;'o'
   702     0178  346C               	retlw	108	;'l'
   703     0179  3461               	retlw	97	;'a'
   704     017A  3420               	retlw	32	;' '
   705     017B  3438               	retlw	56	;'8'
   706     017C  3430               	retlw	48	;'0'
   707     017D  3470               	retlw	112	;'p'
   708     017E  3420               	retlw	32	;' '
   709     017F  3420               	retlw	32	;' '
   710     0180  3420               	retlw	32	;' '
   711     0181  3420               	retlw	32	;' '
   712     0182  3420               	retlw	32	;' '
   713     0183  3420               	retlw	32	;' '
   714     0184  3400               	retlw	0
   715     0185                     STR_7:
   716     0185  3457               	retlw	87	;'W'
   717     0186  3461               	retlw	97	;'a'
   718     0187  3474               	retlw	116	;'t'
   719     0188  3465               	retlw	101	;'e'
   720     0189  3472               	retlw	114	;'r'
   721     018A  3420               	retlw	32	;' '
   722     018B  3435               	retlw	53	;'5'
   723     018C  3430               	retlw	48	;'0'
   724     018D  3470               	retlw	112	;'p'
   725     018E  3420               	retlw	32	;' '
   726     018F  3420               	retlw	32	;' '
   727     0190  3420               	retlw	32	;' '
   728     0191  3420               	retlw	32	;' '
   729     0192  3420               	retlw	32	;' '
   730     0193  3400               	retlw	0
   731     0194                     STR_6:
   732     0194  344F               	retlw	79	;'O'
   733     0195  3472               	retlw	114	;'r'
   734     0196  3461               	retlw	97	;'a'
   735     0197  346E               	retlw	110	;'n'
   736     0198  3467               	retlw	103	;'g'
   737     0199  3465               	retlw	101	;'e'
   738     019A  3420               	retlw	32	;' '
   739     019B  3436               	retlw	54	;'6'
   740     019C  3430               	retlw	48	;'0'
   741     019D  3470               	retlw	112	;'p'
   742     019E  3420               	retlw	32	;' '
   743     019F  3420               	retlw	32	;' '
   744     01A0  3420               	retlw	32	;' '
   745     01A1  3420               	retlw	32	;' '
   746     01A2  3400               	retlw	0
   747     01A3                     STR_1:
   748     01A3  3453               	retlw	83	;'S'
   749     01A4  3465               	retlw	101	;'e'
   750     01A5  346C               	retlw	108	;'l'
   751     01A6  3465               	retlw	101	;'e'
   752     01A7  3463               	retlw	99	;'c'
   753     01A8  3474               	retlw	116	;'t'
   754     01A9  3420               	retlw	32	;' '
   755     01AA  3444               	retlw	68	;'D'
   756     01AB  3472               	retlw	114	;'r'
   757     01AC  3469               	retlw	105	;'i'
   758     01AD  346E               	retlw	110	;'n'
   759     01AE  346B               	retlw	107	;'k'
   760     01AF  343A               	retlw	58	;':'
   761     01B0  3400               	retlw	0
   762     01B1                     STR_5:
   763     01B1  344C               	retlw	76	;'L'
   764     01B2  3465               	retlw	101	;'e'
   765     01B3  346D               	retlw	109	;'m'
   766     01B4  346F               	retlw	111	;'o'
   767     01B5  346E               	retlw	110	;'n'
   768     01B6  3461               	retlw	97	;'a'
   769     01B7  3464               	retlw	100	;'d'
   770     01B8  3465               	retlw	101	;'e'
   771     01B9  3420               	retlw	32	;' '
   772     01BA  3438               	retlw	56	;'8'
   773     01BB  3430               	retlw	48	;'0'
   774     01BC  3470               	retlw	112	;'p'
   775     01BD  3400               	retlw	0
   776     01BE                     STR_12:
   777     01BE  342E               	retlw	46	;'.'
   778     01BF  342E               	retlw	46	;'.'
   779     01C0  342E               	retlw	46	;'.'
   780     01C1  342E               	retlw	46	;'.'
   781     01C2  3400               	retlw	0
   782     015B                     
   783                           	psect	cinit
   784     000F                     start_initialization:	
   785                           ; #config settings
   786                           
   787     000F                     __initialization:
   788                           
   789                           ; Initialize objects allocated to BANK0
   790     000F  20F9               	fcall	__pidataBANK0	;fetch initializer
   791     0010  00BF               	movwf	__pdataBANK0& (0+127)
   792     0011  20FA               	fcall	__pidataBANK0+1	;fetch initializer
   793     0012  00C0               	movwf	(__pdataBANK0+1)& (0+127)
   794     0013  20FB               	fcall	__pidataBANK0+2	;fetch initializer
   795     0014  00C1               	movwf	(__pdataBANK0+2)& (0+127)
   796     0015  20FC               	fcall	__pidataBANK0+3	;fetch initializer
   797     0016  00C2               	movwf	(__pdataBANK0+3)& (0+127)
   798     0017  20FD               	fcall	__pidataBANK0+4	;fetch initializer
   799     0018  00C3               	movwf	(__pdataBANK0+4)& (0+127)
   800     0019  20FE               	fcall	__pidataBANK0+5	;fetch initializer
   801     001A  00C4               	movwf	(__pdataBANK0+5)& (0+127)
   802                           
   803                           ; Clear objects allocated to BANK0
   804     001B  01B4               	clrf	__pbssBANK0& (0+127)
   805     001C  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   806     001D  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   807     001E  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   808     001F  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   809     0020  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   810     0021  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   811     0022  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   812     0023  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   813     0024  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   814     0025  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   815                           
   816                           ; Clear objects allocated to COMMON
   817     0026  01FC               	clrf	__pbssCOMMON& (0+127)
   818     0027                     end_of_initialization:	
   819                           ;End of C runtime variable initialization code
   820                           
   821     0027                     __end_of__initialization:
   822     0027  0183               	clrf	3
   823     0028  2801               	ljmp	_main	;jump to C main() function
   824                           
   825                           	psect	bssCOMMON
   826     007C                     __pbssCOMMON:
   827     007C                     myISR@timer_count:
   828     007C                     	ds	1
   829                           
   830                           	psect	bssBANK0
   831     0034                     __pbssBANK0:
   832     0034                     _lcd:
   833     0034                     	ds	5
   834     0039                     _adc_val:
   835     0039                     	ds	2
   836     003B                     _gCurrentDrinkPrice:
   837     003B                     	ds	1
   838     003C                     _gCurrentDrink:
   839     003C                     	ds	1
   840     003D                     _temp:
   841     003D                     	ds	2
   842                           
   843                           	psect	dataBANK0
   844     003F                     __pdataBANK0:
   845     003F                     VM_Init@F1329:
   846     003F                     	ds	5
   847     0044                     _gCurrentState:
   848     0044                     	ds	1
   849                           
   850                           	psect	cstackCOMMON
   851     0070                     __pcstackCOMMON:
   852     0070                     ?_VM_Init:
   853     0070                     ?_VM_Running:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     ?_VM_Mode_DrinkSelection:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0070                     ?_VM_Mode_CoinInsertion:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0070                     ?_VM_Mode_DispenseDrink:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0070                     ?_TIMR1_Delay5s:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_VM_Mode_DispenseChange:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_main:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_LCD_Out:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_LCD_Write:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_LCD_PutChar:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_ADC_Init:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_myISR:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?i1_DIO_setPinValue:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_ADC_Read:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     i1DIO_setPinValue@pin:	
   896                           ; 2 bytes @ 0x0
   897                           
   898                           
   899                           ; 1 bytes @ 0x0
   900     0070                     	ds	1
   901     0071                     i1DIO_setPinValue@value:
   902                           
   903                           ; 1 bytes @ 0x1
   904     0071                     	ds	1
   905     0072                     ??_ADC_Read:
   906     0072                     ??i1_DIO_setPinValue:	
   907                           ; 1 bytes @ 0x2
   908                           
   909                           
   910                           ; 1 bytes @ 0x2
   911     0072                     	ds	1
   912     0073                     ADC_Read@result:
   913                           
   914                           ; 2 bytes @ 0x3
   915     0073                     	ds	1
   916     0074                     i1DIO_setPinValue@port:
   917                           
   918                           ; 1 bytes @ 0x4
   919     0074                     	ds	1
   920     0075                     ADC_Read@channel:
   921                           
   922                           ; 1 bytes @ 0x5
   923     0075                     	ds	1
   924     0076                     ??_myISR:
   925                           
   926                           ; 1 bytes @ 0x6
   927     0076                     	ds	6
   928                           
   929                           	psect	cstackBANK0
   930     0020                     __pcstackBANK0:
   931     0020                     ??_TIMR1_Delay5s:
   932     0020                     ??_LCD_Out:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0020                     ?_DIO_setPinDir:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0020                     ?_DIO_setPinValue:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0020                     ??_ADC_Init:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0020                     DIO_setPinDir@pin:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0020                     DIO_setPinValue@pin:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0020                     TIMR1_Delay5s@i:	
   951                           ; 1 bytes @ 0x0
   952                           
   953                           
   954                           ; 1 bytes @ 0x0
   955     0020                     	ds	1
   956     0021                     DIO_setPinDir@direction:
   957     0021                     DIO_setPinValue@value:	
   958                           ; 1 bytes @ 0x1
   959                           
   960                           
   961                           ; 1 bytes @ 0x1
   962     0021                     	ds	1
   963     0022                     ??_DIO_setPinDir:
   964     0022                     ??_DIO_setPinValue:	
   965                           ; 1 bytes @ 0x2
   966                           
   967     0022                     LCD_Out@c:	
   968                           ; 1 bytes @ 0x2
   969                           
   970                           
   971                           ; 1 bytes @ 0x2
   972     0022                     	ds	1
   973     0023                     ??_LCD_Write:
   974     0023                     ??_LCD_PutChar:	
   975                           ; 1 bytes @ 0x3
   976                           
   977                           
   978                           ; 1 bytes @ 0x3
   979     0023                     	ds	1
   980     0024                     DIO_setPinDir@port:
   981     0024                     DIO_setPinValue@port:	
   982                           ; 1 bytes @ 0x4
   983                           
   984                           
   985                           ; 1 bytes @ 0x4
   986     0024                     	ds	1
   987     0025                     ?_DIO_setPinMode:
   988     0025                     LCD_Write@c:	
   989                           ; 1 bytes @ 0x5
   990                           
   991     0025                     LCD_PutChar@c:	
   992                           ; 1 bytes @ 0x5
   993                           
   994     0025                     DIO_setPinMode@pin:	
   995                           ; 1 bytes @ 0x5
   996                           
   997                           
   998                           ; 1 bytes @ 0x5
   999     0025                     	ds	1
  1000     0026                     ?_LCD_Init:
  1001     0026                     ?_LCD_PutString:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004     0026                     DIO_setPinMode@mode:	
  1005                           ; 1 bytes @ 0x6
  1006                           
  1007     0026                     LCD_PutString@a:	
  1008                           ; 1 bytes @ 0x6
  1009                           
  1010     0026                     LCD_Init@display:	
  1011                           ; 2 bytes @ 0x6
  1012                           
  1013                           
  1014                           ; 5 bytes @ 0x6
  1015     0026                     	ds	1
  1016     0027                     ??_DIO_setPinMode:
  1017                           
  1018                           ; 1 bytes @ 0x7
  1019     0027                     	ds	1
  1020     0028                     ??_LCD_PutString:
  1021                           
  1022                           ; 1 bytes @ 0x8
  1023     0028                     	ds	1
  1024     0029                     DIO_setPinMode@port:
  1025                           
  1026                           ; 1 bytes @ 0x9
  1027     0029                     	ds	2
  1028     002B                     ??_LCD_Init:
  1029     002B                     LCD_PutString@i:	
  1030                           ; 1 bytes @ 0xB
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0xB
  1034     002B                     	ds	2
  1035     002D                     ??_VM_Init:
  1036     002D                     ??_VM_Mode_DrinkSelection:	
  1037                           ; 1 bytes @ 0xD
  1038                           
  1039     002D                     ??_VM_Mode_CoinInsertion:	
  1040                           ; 1 bytes @ 0xD
  1041                           
  1042     002D                     ??_VM_Mode_DispenseDrink:	
  1043                           ; 1 bytes @ 0xD
  1044                           
  1045     002D                     ??_VM_Mode_DispenseChange:	
  1046                           ; 1 bytes @ 0xD
  1047                           
  1048     002D                     VM_Mode_DispenseDrink@i:	
  1049                           ; 1 bytes @ 0xD
  1050                           
  1051     002D                     VM_Mode_DispenseChange@change_count:	
  1052                           ; 1 bytes @ 0xD
  1053                           
  1054     002D                     VM_Init@lcd:	
  1055                           ; 1 bytes @ 0xD
  1056                           
  1057                           
  1058                           ; 5 bytes @ 0xD
  1059     002D                     	ds	5
  1060     0032                     ??_VM_Running:
  1061                           
  1062                           ; 1 bytes @ 0x12
  1063     0032                     	ds	2
  1064     0034                     ??_main:
  1065                           
  1066                           	psect	maintext
  1067     0001                     __pmaintext:	
  1068                           ; 1 bytes @ 0x14
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 35 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B00/0
  1085 ;;		On exit  : 300/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1
  1088 ;;      Params:         0       0       0
  1089 ;;      Locals:         0       0       0
  1090 ;;      Temps:          0       0       0
  1091 ;;      Totals:         0       0       0
  1092 ;;Total ram usage:        0 bytes
  1093 ;; Hardware stack levels required when called: 7
  1094 ;; This function calls:
  1095 ;;		_VM_Init
  1096 ;;		_VM_Running
  1097 ;; This function is called by:
  1098 ;;		Startup code after reset
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102     0001                     _main:	
  1103                           ;psect for function _main
  1104                           
  1105                           
  1106                           ;main.c: 38:     VM_Init();
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110     0001  23B6               	fcall	_VM_Init
  1111     0002                     l9:	
  1112                           ;main.c: 41:     while(1)
  1113                           
  1114                           
  1115                           ;main.c: 42:     {;main.c: 43:         VM_Running();
  1116     0002  26EC               	fcall	_VM_Running
  1117     0003  2802               	goto	l9
  1118     0004                     __end_of_main:
  1119                           
  1120                           	psect	text1
  1121     06EC                     __ptext1:	
  1122 ;; *************** function _VM_Running *****************
  1123 ;; Defined at:
  1124 ;;		line 124 in file "source/VendingMachine/VM.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 300/0
  1135 ;;		On exit  : 300/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1
  1138 ;;      Params:         0       0       0
  1139 ;;      Locals:         0       0       0
  1140 ;;      Temps:          0       2       0
  1141 ;;      Totals:         0       2       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 6
  1145 ;; This function calls:
  1146 ;;		_LCD_PutString
  1147 ;;		_LCD_Write
  1148 ;;		_TIMR1_Delay5s
  1149 ;;		_VM_Init
  1150 ;;		_VM_Mode_CoinInsertion
  1151 ;;		_VM_Mode_DispenseChange
  1152 ;;		_VM_Mode_DispenseDrink
  1153 ;;		_VM_Mode_DrinkSelection
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     06EC                     _VM_Running:	
  1160                           ;psect for function _VM_Running
  1161                           
  1162                           
  1163                           ;source/VendingMachine/VM.c: 127:     if(gCurrentState == VM_STATE_INITIAL)
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _VM_Running: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1167     06EC  30C8               	movlw	200
  1168     06ED  0644               	xorwf	_gCurrentState,w	;volatile
  1169     06EE  1D03               	btfss	3,2
  1170     06EF  2F10               	goto	l2450
  1171                           
  1172                           ;source/VendingMachine/VM.c: 128:         VM_Init();
  1173     06F0  23B6               	fcall	_VM_Init
  1174     06F1  2F10               	goto	l2450
  1175     06F2                     l2420:
  1176                           
  1177                           ;source/VendingMachine/VM.c: 134:         VM_Mode_DrinkSelection();
  1178     06F2  2760               	fcall	_VM_Mode_DrinkSelection
  1179                           
  1180                           ;source/VendingMachine/VM.c: 135:         break;
  1181     06F3  0008               	return
  1182     06F4                     l2422:
  1183                           
  1184                           ;source/VendingMachine/VM.c: 137:         VM_Mode_CoinInsertion();
  1185     06F4  27C5               	fcall	_VM_Mode_CoinInsertion
  1186                           
  1187                           ;source/VendingMachine/VM.c: 138:         break;
  1188     06F5  0008               	return
  1189     06F6                     l2424:
  1190                           
  1191                           ;source/VendingMachine/VM.c: 140:         VM_Mode_DispenseDrink();
  1192     06F6  2654               	fcall	_VM_Mode_DispenseDrink
  1193                           
  1194                           ;source/VendingMachine/VM.c: 141:         break;
  1195     06F7  0008               	return
  1196     06F8                     l2426:
  1197     06F8  3008               	movlw	8
  1198     06F9  25FE               	fcall	_LCD_Write
  1199     06FA  3000               	movlw	0
  1200     06FB  25FE               	fcall	_LCD_Write
  1201                           
  1202                           ;source/VendingMachine/VM.c: 144:         LCD_PutString("Please Collect    ");
  1203     06FC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1204     06FD  00A6               	movwf	LCD_PutString@a
  1205     06FE  3080               	movlw	128
  1206     06FF  00A7               	movwf	LCD_PutString@a+1
  1207     0700  2794               	fcall	_LCD_PutString
  1208     0701  300C               	movlw	12
  1209     0702  25FE               	fcall	_LCD_Write
  1210     0703  3000               	movlw	0
  1211     0704  25FE               	fcall	_LCD_Write
  1212                           
  1213                           ;source/VendingMachine/VM.c: 146:         LCD_PutString("Your Drink!     ");
  1214     0705  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1215     0706  00A6               	movwf	LCD_PutString@a
  1216     0707  3080               	movlw	128
  1217     0708  00A7               	movwf	LCD_PutString@a+1
  1218     0709  2794               	fcall	_LCD_PutString
  1219                           
  1220                           ;source/VendingMachine/VM.c: 148:         TIMR1_Delay5s();
  1221     070A  27ED               	fcall	_TIMR1_Delay5s
  1222                           
  1223                           ;source/VendingMachine/VM.c: 149:         gCurrentState = VM_STATE_INITIAL;
  1224     070B  30C8               	movlw	200
  1225     070C  00C4               	movwf	_gCurrentState	;volatile
  1226                           
  1227                           ;source/VendingMachine/VM.c: 150:         break;
  1228     070D  0008               	return
  1229     070E                     l2446:
  1230                           
  1231                           ;source/VendingMachine/VM.c: 152:         VM_Mode_DispenseChange();
  1232     070E  272A               	fcall	_VM_Mode_DispenseChange
  1233                           
  1234                           ;source/VendingMachine/VM.c: 153:         break;
  1235     070F  0008               	return
  1236     0710                     l2450:
  1237     0710  0844               	movf	_gCurrentState,w	;volatile
  1238     0711  00B2               	movwf	??_VM_Running
  1239     0712  01B3               	clrf	??_VM_Running+1
  1240                           
  1241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 1, Range of values is 0 to 0
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            4     3 (average)
  1247                           ; direct_byte            7     6 (fixed)
  1248                           ; jumptable            260     6 (fixed)
  1249                           ;	Chosen strategy is simple_byte
  1250     0713  0833               	movf	??_VM_Running+1,w
  1251     0714  3A00               	xorlw	0	; case 0
  1252     0715  1903               	skipnz
  1253     0716  2F18               	goto	l2840
  1254     0717  2F29               	goto	l269
  1255     0718                     l2840:
  1256                           
  1257                           ; Switch size 1, requested type "simple"
  1258                           ; Number of cases is 5, Range of values is 201 to 205
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; direct_byte           14     9 (fixed)
  1262                           ; simple_byte           16     9 (average)
  1263                           ; jumptable            263     9 (fixed)
  1264                           ;	Chosen strategy is simple_byte
  1265     0718  0832               	movf	??_VM_Running,w
  1266     0719  3AC9               	xorlw	201	; case 201
  1267     071A  1903               	skipnz
  1268     071B  2EF2               	goto	l2420
  1269     071C  3A03               	xorlw	3	; case 202
  1270     071D  1903               	skipnz
  1271     071E  2EF4               	goto	l2422
  1272     071F  3A01               	xorlw	1	; case 203
  1273     0720  1903               	skipnz
  1274     0721  2EF6               	goto	l2424
  1275     0722  3A07               	xorlw	7	; case 204
  1276     0723  1903               	skipnz
  1277     0724  2EF8               	goto	l2426
  1278     0725  3A01               	xorlw	1	; case 205
  1279     0726  1903               	skipnz
  1280     0727  2F0E               	goto	l2446
  1281     0728  2F29               	goto	l269
  1282     0729                     l269:
  1283     0729  0008               	return
  1284     072A                     __end_of_VM_Running:
  1285                           
  1286                           	psect	text2
  1287     0760                     __ptext2:	
  1288 ;; *************** function _VM_Mode_DrinkSelection *****************
  1289 ;; Defined at:
  1290 ;;		line 166 in file "source/VendingMachine/VM.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 300/0
  1301 ;;		On exit  : 300/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1
  1304 ;;      Params:         0       0       0
  1305 ;;      Locals:         0       0       0
  1306 ;;      Temps:          0       2       0
  1307 ;;      Totals:         0       2       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 5
  1311 ;; This function calls:
  1312 ;;		_LCD_PutString
  1313 ;;		_LCD_Write
  1314 ;; This function is called by:
  1315 ;;		_VM_Running
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     0760                     _VM_Mode_DrinkSelection:	
  1320                           ;psect for function _VM_Mode_DrinkSelection
  1321                           
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _VM_Mode_DrinkSelection: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1325                           ;source/VendingMachine/VM.c: 169:     do { if ( 1 == 0 ) { LCD_Write( (0x80 + 0 & 0xF0) 
      +                          >> 4 ); LCD_Write( 0x80 + 0 & 0x0F);; } else if ( 1 == 1 ) { LCD_Write( (0xC0 + 0 & 0xF0
      +                          ) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F);; } else if ( 1 == 2 ) { LCD_Write( (0x94 + 0 & 0x
      +                          F0) >> 4 ); LCD_Write( 0x94 + 0 & 0x0F);; } else if ( 1 == 3 ) { LCD_Write( (0xD4 + 0 & 
      +                          0xF0) >> 4 ); LCD_Write( 0xD4 + 0 & 0x0F);; } } while ( 0 );
  1326     0760  300C               	movlw	12
  1327     0761  25FE               	fcall	_LCD_Write
  1328     0762  3000               	movlw	0
  1329     0763  25FE               	fcall	_LCD_Write
  1330     0764  2F7D               	goto	l2284
  1331     0765                     l2274:
  1332                           
  1333                           ;source/VendingMachine/VM.c: 173:             LCD_PutString("Cola 80p      ");
  1334     0765  3067               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1335     0766  00A6               	movwf	LCD_PutString@a
  1336     0767  3080               	movlw	128
  1337     0768  00A7               	movwf	LCD_PutString@a+1
  1338     0769  2794               	fcall	_LCD_PutString
  1339                           
  1340                           ;source/VendingMachine/VM.c: 174:             break;
  1341     076A  0008               	return
  1342     076B                     l2276:
  1343                           
  1344                           ;source/VendingMachine/VM.c: 176:             LCD_PutString("Lemonade 80p");
  1345     076B  30A2               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1346     076C  00A6               	movwf	LCD_PutString@a
  1347     076D  3080               	movlw	128
  1348     076E  00A7               	movwf	LCD_PutString@a+1
  1349     076F  2794               	fcall	_LCD_PutString
  1350                           
  1351                           ;source/VendingMachine/VM.c: 177:             break;
  1352     0770  0008               	return
  1353     0771                     l2278:
  1354                           
  1355                           ;source/VendingMachine/VM.c: 179:             LCD_PutString("Orange 60p    ");
  1356     0771  3085               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1357     0772  00A6               	movwf	LCD_PutString@a
  1358     0773  3080               	movlw	128
  1359     0774  00A7               	movwf	LCD_PutString@a+1
  1360     0775  2794               	fcall	_LCD_PutString
  1361                           
  1362                           ;source/VendingMachine/VM.c: 180:             break;
  1363     0776  0008               	return
  1364     0777                     l2280:
  1365                           
  1366                           ;source/VendingMachine/VM.c: 182:             LCD_PutString("Water 50p     ");
  1367     0777  3076               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1368     0778  00A6               	movwf	LCD_PutString@a
  1369     0779  3080               	movlw	128
  1370     077A  00A7               	movwf	LCD_PutString@a+1
  1371     077B  2794               	fcall	_LCD_PutString
  1372                           
  1373                           ;source/VendingMachine/VM.c: 183:             break;
  1374     077C  0008               	return
  1375     077D                     l2284:
  1376     077D  083C               	movf	_gCurrentDrink,w	;volatile
  1377     077E  00AD               	movwf	??_VM_Mode_DrinkSelection
  1378     077F  01AE               	clrf	??_VM_Mode_DrinkSelection+1
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ; direct_byte            7     6 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389     0780  082E               	movf	??_VM_Mode_DrinkSelection+1,w
  1390     0781  3A00               	xorlw	0	; case 0
  1391     0782  1903               	skipnz
  1392     0783  2F85               	goto	l2842
  1393     0784  2F93               	goto	l287
  1394     0785                     l2842:
  1395                           
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 4, Range of values is 0 to 3
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; direct_byte           10     6 (fixed)
  1401                           ; simple_byte           13     7 (average)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404     0785  082D               	movf	??_VM_Mode_DrinkSelection,w
  1405     0786  3A00               	xorlw	0	; case 0
  1406     0787  1903               	skipnz
  1407     0788  2F65               	goto	l2274
  1408     0789  3A01               	xorlw	1	; case 1
  1409     078A  1903               	skipnz
  1410     078B  2F6B               	goto	l2276
  1411     078C  3A03               	xorlw	3	; case 2
  1412     078D  1903               	skipnz
  1413     078E  2F71               	goto	l2278
  1414     078F  3A01               	xorlw	1	; case 3
  1415     0790  1903               	skipnz
  1416     0791  2F77               	goto	l2280
  1417     0792  2F93               	goto	l287
  1418     0793                     l287:
  1419     0793  0008               	return
  1420     0794                     __end_of_VM_Mode_DrinkSelection:
  1421                           
  1422                           	psect	text3
  1423     0654                     __ptext3:	
  1424 ;; *************** function _VM_Mode_DispenseDrink *****************
  1425 ;; Defined at:
  1426 ;;		line 217 in file "source/VendingMachine/VM.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  i               1   13[BANK0 ] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 300/0
  1437 ;;		On exit  : 300/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1
  1440 ;;      Params:         0       0       0
  1441 ;;      Locals:         0       1       0
  1442 ;;      Temps:          0       0       0
  1443 ;;      Totals:         0       1       0
  1444 ;;Total ram usage:        1 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 5
  1447 ;; This function calls:
  1448 ;;		_DIO_setPinValue
  1449 ;;		_LCD_PutString
  1450 ;;		_LCD_Write
  1451 ;; This function is called by:
  1452 ;;		_VM_Running
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456     0654                     _VM_Mode_DispenseDrink:	
  1457                           ;psect for function _VM_Mode_DispenseDrink
  1458                           
  1459                           
  1460                           ;source/VendingMachine/VM.c: 219:         DIO_setPinValue(DIO_PORTA, DIO_PIN0, 1);
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _VM_Mode_DispenseDrink: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1464     0654  01A0               	clrf	DIO_setPinValue@pin
  1465     0655  01A1               	clrf	DIO_setPinValue@value
  1466     0656  0AA1               	incf	DIO_setPinValue@value,f
  1467     0657  3000               	movlw	0
  1468     0658  24AF               	fcall	_DIO_setPinValue
  1469                           
  1470                           ;source/VendingMachine/VM.c: 221:         do { if ( 0 == 0 ) { LCD_Write( (0x80 + 0 & 0x
      +                          F0) >> 4 ); LCD_Write( 0x80 + 0 & 0x0F);; } else if ( 0 == 1 ) { LCD_Write( (0xC0 + 0 & 
      +                          0xF0) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F);; } else if ( 0 == 2 ) { LCD_Write( (0x94 + 0 
      +                          & 0xF0) >> 4 ); LCD_Write( 0x94 + 0 & 0x0F);; } else if ( 0 == 3 ) { LCD_Write( (0xD4 + 
      +                          0 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 0 & 0x0F);; } } while ( 0 );
  1471     0659  3008               	movlw	8
  1472     065A  25FE               	fcall	_LCD_Write
  1473     065B  3000               	movlw	0
  1474     065C  25FE               	fcall	_LCD_Write
  1475                           
  1476                           ;source/VendingMachine/VM.c: 222:         LCD_PutString("Drink Dispensing");
  1477     065D  3036               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1478     065E  00A6               	movwf	LCD_PutString@a
  1479     065F  3080               	movlw	128
  1480     0660  00A7               	movwf	LCD_PutString@a+1
  1481     0661  2794               	fcall	_LCD_PutString
  1482     0662  300C               	movlw	12
  1483     0663  25FE               	fcall	_LCD_Write
  1484     0664  3000               	movlw	0
  1485     0665  25FE               	fcall	_LCD_Write
  1486                           
  1487                           ;source/VendingMachine/VM.c: 224:         ( LCD_PutString("          "));
  1488     0666  304C               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1489     0667  00A6               	movwf	LCD_PutString@a
  1490     0668  3080               	movlw	128
  1491     0669  00A7               	movwf	LCD_PutString@a+1
  1492     066A  2794               	fcall	_LCD_PutString
  1493     066B  300C               	movlw	12
  1494     066C  25FE               	fcall	_LCD_Write
  1495     066D  3000               	movlw	0
  1496     066E  25FE               	fcall	_LCD_Write
  1497                           
  1498                           ;source/VendingMachine/VM.c: 227:         OPTION_REGbits.T0CS = 0;
  1499     066F  1683               	bsf	3,5	;RP0=1, select bank1
  1500     0670  1281               	bcf	1,5	;volatile
  1501                           
  1502                           ;source/VendingMachine/VM.c: 228:         OPTION_REGbits.PSA = 0;
  1503     0671  1181               	bcf	1,3	;volatile
  1504                           
  1505                           ;source/VendingMachine/VM.c: 229:         OPTION_REGbits.PS = 7;
  1506     0672  3007               	movlw	7
  1507     0673  0481               	iorwf	1,f	;volatile
  1508                           
  1509                           ;source/VendingMachine/VM.c: 230:         for(unsigned char i=0 ; i<76 ; i++)
  1510     0674  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0675  01AD               	clrf	VM_Mode_DispenseDrink@i
  1512     0676                     l343:
  1513     0676  1D0B               	btfss	11,2	;volatile
  1514     0677  2E76               	goto	l343
  1515                           
  1516                           ;source/VendingMachine/VM.c: 233:             if(i == 1)
  1517     0678  032D               	decf	VM_Mode_DispenseDrink@i,w
  1518     0679  1903               	btfsc	3,2
  1519     067A  2E87               	goto	l2366
  1520                           
  1521                           ;source/VendingMachine/VM.c: 234:                     (LCD_PutString("...."));
  1522     067B  3014               	movlw	20
  1523     067C  062D               	xorwf	VM_Mode_DispenseDrink@i,w
  1524     067D  1903               	btfsc	3,2
  1525     067E  2E87               	goto	l2366
  1526                           
  1527                           ;source/VendingMachine/VM.c: 236:                     (LCD_PutString("...."));
  1528     067F  3028               	movlw	40
  1529     0680  062D               	xorwf	VM_Mode_DispenseDrink@i,w
  1530     0681  1903               	btfsc	3,2
  1531     0682  2E87               	goto	l2366
  1532                           
  1533                           ;source/VendingMachine/VM.c: 238:                     (LCD_PutString("...."));
  1534     0683  3046               	movlw	70
  1535     0684  062D               	xorwf	VM_Mode_DispenseDrink@i,w
  1536     0685  1D03               	btfss	3,2
  1537     0686  2E8C               	goto	l2368
  1538     0687                     l2366:
  1539                           
  1540                           ;source/VendingMachine/VM.c: 240:                     (LCD_PutString("...."));
  1541     0687  30AF               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1542     0688  00A6               	movwf	LCD_PutString@a
  1543     0689  3080               	movlw	128
  1544     068A  00A7               	movwf	LCD_PutString@a+1
  1545     068B  2794               	fcall	_LCD_PutString
  1546     068C                     l2368:
  1547                           
  1548                           ;source/VendingMachine/VM.c: 241:             INTCONbits.TMR0IF = 0;
  1549     068C  110B               	bcf	11,2	;volatile
  1550                           
  1551                           ;source/VendingMachine/VM.c: 242:         }
  1552     068D  3001               	movlw	1
  1553     068E  00FF               	movwf	127
  1554     068F  087F               	movf	127,w
  1555     0690  07AD               	addwf	VM_Mode_DispenseDrink@i,f
  1556     0691  304C               	movlw	76
  1557     0692  022D               	subwf	VM_Mode_DispenseDrink@i,w
  1558     0693  1C03               	skipc
  1559     0694  2E76               	goto	l343
  1560                           
  1561                           ;source/VendingMachine/VM.c: 243:         DIO_setPinValue(DIO_PORTA, DIO_PIN0, 0);
  1562     0695  01A0               	clrf	DIO_setPinValue@pin
  1563     0696  01A1               	clrf	DIO_setPinValue@value
  1564     0697  3000               	movlw	0
  1565     0698  24AF               	fcall	_DIO_setPinValue
  1566                           
  1567                           ;source/VendingMachine/VM.c: 244:         if(gCurrentDrinkPrice == 0)
  1568     0699  083B               	movf	_gCurrentDrinkPrice,w	;volatile
  1569     069A  1D03               	btfss	3,2
  1570     069B  2E9F               	goto	l2380
  1571                           
  1572                           ;source/VendingMachine/VM.c: 245:             gCurrentState = VM_STATE_DRINK_READY;
  1573     069C  30CC               	movlw	204
  1574     069D  00C4               	movwf	_gCurrentState	;volatile
  1575     069E  0008               	return
  1576     069F                     l2380:
  1577                           
  1578                           ;source/VendingMachine/VM.c: 247:             gCurrentState = VM_STATE_DISPENSE_CHANGE;
  1579     069F  30CD               	movlw	205
  1580     06A0  00C4               	movwf	_gCurrentState	;volatile
  1581     06A1  0008               	return
  1582     06A2                     __end_of_VM_Mode_DispenseDrink:
  1583                           
  1584                           	psect	text4
  1585     072A                     __ptext4:	
  1586 ;; *************** function _VM_Mode_DispenseChange *****************
  1587 ;; Defined at:
  1588 ;;		line 255 in file "source/VendingMachine/VM.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  change_count    1   13[BANK0 ] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 300/0
  1599 ;;		On exit  : 300/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1
  1602 ;;      Params:         0       0       0
  1603 ;;      Locals:         0       1       0
  1604 ;;      Temps:          0       0       0
  1605 ;;      Totals:         0       1       0
  1606 ;;Total ram usage:        1 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; Hardware stack levels required when called: 5
  1609 ;; This function calls:
  1610 ;;		_DIO_setPinValue
  1611 ;;		_LCD_PutString
  1612 ;;		_LCD_Write
  1613 ;;		_TIMR1_Delay5s
  1614 ;; This function is called by:
  1615 ;;		_VM_Running
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     072A                     _VM_Mode_DispenseChange:	
  1620                           ;psect for function _VM_Mode_DispenseChange
  1621                           
  1622                           
  1623                           ;source/VendingMachine/VM.c: 258:     char change_count = 0;
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _VM_Mode_DispenseChange: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1627     072A  01AD               	clrf	VM_Mode_DispenseChange@change_count
  1628     072B                     l2386:	
  1629                           ;source/VendingMachine/VM.c: 259:     while(gCurrentDrinkPrice != 0)
  1630                           
  1631                           
  1632                           ;source/VendingMachine/VM.c: 259:     while(gCurrentDrinkPrice != 0)
  1633     072B  083B               	movf	_gCurrentDrinkPrice,w	;volatile
  1634     072C  1903               	btfsc	3,2
  1635     072D  2F37               	goto	l2388
  1636                           
  1637                           ;source/VendingMachine/VM.c: 260:         {;source/VendingMachine/VM.c: 261:            
      +                           gCurrentDrinkPrice++;
  1638     072E  3001               	movlw	1
  1639     072F  00FF               	movwf	127
  1640     0730  087F               	movf	127,w
  1641     0731  07BB               	addwf	_gCurrentDrinkPrice,f	;volatile
  1642                           
  1643                           ;source/VendingMachine/VM.c: 262:             change_count++;
  1644     0732  3001               	movlw	1
  1645     0733  00FF               	movwf	127
  1646     0734  087F               	movf	127,w
  1647     0735  07AD               	addwf	VM_Mode_DispenseChange@change_count,f
  1648     0736  2F2B               	goto	l2386
  1649     0737                     l2388:
  1650                           
  1651                           ;source/VendingMachine/VM.c: 265:         temp[0] = '0' + (change_count);
  1652     0737  082D               	movf	VM_Mode_DispenseChange@change_count,w
  1653     0738  3E30               	addlw	48
  1654     0739  00BD               	movwf	_temp
  1655                           
  1656                           ;source/VendingMachine/VM.c: 267:         DIO_setPinValue(DIO_PORTA, DIO_PIN1, 1);
  1657     073A  01A0               	clrf	DIO_setPinValue@pin
  1658     073B  0AA0               	incf	DIO_setPinValue@pin,f
  1659     073C  01A1               	clrf	DIO_setPinValue@value
  1660     073D  0AA1               	incf	DIO_setPinValue@value,f
  1661     073E  3000               	movlw	0
  1662     073F  24AF               	fcall	_DIO_setPinValue
  1663     0740  3008               	movlw	8
  1664     0741  25FE               	fcall	_LCD_Write
  1665     0742  3000               	movlw	0
  1666     0743  25FE               	fcall	_LCD_Write
  1667                           
  1668                           ;source/VendingMachine/VM.c: 269:         LCD_PutString("Change due:     ");
  1669     0744  3025               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1670     0745  00A6               	movwf	LCD_PutString@a
  1671     0746  3080               	movlw	128
  1672     0747  00A7               	movwf	LCD_PutString@a+1
  1673     0748  2794               	fcall	_LCD_PutString
  1674     0749  300C               	movlw	12
  1675     074A  25FE               	fcall	_LCD_Write
  1676     074B  3000               	movlw	0
  1677     074C  25FE               	fcall	_LCD_Write
  1678                           
  1679                           ;source/VendingMachine/VM.c: 271:         LCD_PutString(temp);
  1680     074D  303D               	movlw	(low (_temp| 0))& (0+255)
  1681     074E  00A6               	movwf	LCD_PutString@a
  1682     074F  3000               	movlw	0
  1683     0750  00A7               	movwf	LCD_PutString@a+1
  1684     0751  2794               	fcall	_LCD_PutString
  1685                           
  1686                           ;source/VendingMachine/VM.c: 272:         ( LCD_PutString("0              "));
  1687     0752  3047               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1688     0753  00A6               	movwf	LCD_PutString@a
  1689     0754  3080               	movlw	128
  1690     0755  00A7               	movwf	LCD_PutString@a+1
  1691     0756  2794               	fcall	_LCD_PutString
  1692                           
  1693                           ;source/VendingMachine/VM.c: 274:         TIMR1_Delay5s();
  1694     0757  27ED               	fcall	_TIMR1_Delay5s
  1695                           
  1696                           ;source/VendingMachine/VM.c: 275:         DIO_setPinValue(DIO_PORTA, DIO_PIN1, 0);
  1697     0758  01A0               	clrf	DIO_setPinValue@pin
  1698     0759  0AA0               	incf	DIO_setPinValue@pin,f
  1699     075A  01A1               	clrf	DIO_setPinValue@value
  1700     075B  3000               	movlw	0
  1701     075C  24AF               	fcall	_DIO_setPinValue
  1702                           
  1703                           ;source/VendingMachine/VM.c: 276:         gCurrentState = VM_STATE_DRINK_READY;
  1704     075D  30CC               	movlw	204
  1705     075E  00C4               	movwf	_gCurrentState	;volatile
  1706     075F  0008               	return
  1707     0760                     __end_of_VM_Mode_DispenseChange:
  1708                           
  1709                           	psect	text5
  1710     07ED                     __ptext5:	
  1711 ;; *************** function _TIMR1_Delay5s *****************
  1712 ;; Defined at:
  1713 ;;		line 284 in file "source/VendingMachine/VM.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  i               1    0[BANK0 ] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, btemp+1
  1722 ;; Tracked objects:
  1723 ;;		On entry : 300/0
  1724 ;;		On exit  : 300/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1
  1727 ;;      Params:         0       0       0
  1728 ;;      Locals:         0       1       0
  1729 ;;      Temps:          0       0       0
  1730 ;;      Totals:         0       1       0
  1731 ;;Total ram usage:        1 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 2
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_VM_Running
  1738 ;;		_VM_Mode_DispenseChange
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742     07ED                     _TIMR1_Delay5s:	
  1743                           ;psect for function _TIMR1_Delay5s
  1744                           
  1745                           
  1746                           ;source/VendingMachine/VM.c: 286:     T1CON= 0x31;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _TIMR1_Delay5s: [wreg+status,2+status,0+btemp+1]
  1750     07ED  3031               	movlw	49
  1751     07EE  0090               	movwf	16	;volatile
  1752                           
  1753                           ;source/VendingMachine/VM.c: 287:     TMR1 = 0x76C8;
  1754     07EF  3076               	movlw	118
  1755     07F0  008F               	movwf	15	;volatile
  1756     07F1  30C8               	movlw	200
  1757     07F2  008E               	movwf	14	;volatile
  1758                           
  1759                           ;source/VendingMachine/VM.c: 288:     for(unsigned char i=0 ; i<10 ; i++)
  1760     07F3  01A0               	clrf	TIMR1_Delay5s@i
  1761     07F4                     l384:
  1762     07F4  1C0C               	btfss	12,0	;volatile
  1763     07F5  2FF4               	goto	l384
  1764                           
  1765                           ;source/VendingMachine/VM.c: 291:         PIR1bits.TMR1IF = 0;
  1766     07F6  100C               	bcf	12,0	;volatile
  1767                           
  1768                           ;source/VendingMachine/VM.c: 292:     }
  1769     07F7  3001               	movlw	1
  1770     07F8  00FF               	movwf	127
  1771     07F9  087F               	movf	127,w
  1772     07FA  07A0               	addwf	TIMR1_Delay5s@i,f
  1773     07FB  300A               	movlw	10
  1774     07FC  0220               	subwf	TIMR1_Delay5s@i,w
  1775     07FD  1803               	btfsc	3,0
  1776     07FE  0008               	return
  1777     07FF  2FF4               	goto	l384
  1778     0800                     __end_of_TIMR1_Delay5s:
  1779                           
  1780                           	psect	text6
  1781     07C5                     __ptext6:	
  1782 ;; *************** function _VM_Mode_CoinInsertion *****************
  1783 ;; Defined at:
  1784 ;;		line 193 in file "source/VendingMachine/VM.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 300/0
  1795 ;;		On exit  : 300/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1
  1798 ;;      Params:         0       0       0
  1799 ;;      Locals:         0       0       0
  1800 ;;      Temps:          0       0       0
  1801 ;;      Totals:         0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 5
  1805 ;; This function calls:
  1806 ;;		_LCD_PutString
  1807 ;;		_LCD_Write
  1808 ;; This function is called by:
  1809 ;;		_VM_Running
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813     07C5                     _VM_Mode_CoinInsertion:	
  1814                           ;psect for function _VM_Mode_CoinInsertion
  1815                           
  1816                           
  1817                           ;source/VendingMachine/VM.c: 196:     if(gCurrentDrinkPrice > 0)
  1818                           
  1819                           ;incstack = 0
  1820                           ; Regs used in _VM_Mode_CoinInsertion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1821     07C5  083B               	movf	_gCurrentDrinkPrice,w	;volatile
  1822     07C6  3A80               	xorlw	128
  1823     07C7  3E7F               	addlw	-129
  1824     07C8  1C03               	skipc
  1825     07C9  2FE5               	goto	l2312
  1826                           
  1827                           ;source/VendingMachine/VM.c: 197:     {;source/VendingMachine/VM.c: 199:         temp[0]
      +                           = '0' + (gCurrentDrinkPrice);
  1828     07CA  083B               	movf	_gCurrentDrinkPrice,w	;volatile
  1829     07CB  3E30               	addlw	48
  1830     07CC  00BD               	movwf	_temp
  1831     07CD  3008               	movlw	8
  1832     07CE  25FE               	fcall	_LCD_Write
  1833     07CF  3000               	movlw	0
  1834     07D0  25FE               	fcall	_LCD_Write
  1835                           
  1836                           ;source/VendingMachine/VM.c: 203:         LCD_PutString("Insert Coins:  ");
  1837     07D1  3057               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1838     07D2  00A6               	movwf	LCD_PutString@a
  1839     07D3  3080               	movlw	128
  1840     07D4  00A7               	movwf	LCD_PutString@a+1
  1841     07D5  2794               	fcall	_LCD_PutString
  1842     07D6  300C               	movlw	12
  1843     07D7  25FE               	fcall	_LCD_Write
  1844     07D8  3000               	movlw	0
  1845     07D9  25FE               	fcall	_LCD_Write
  1846                           
  1847                           ;source/VendingMachine/VM.c: 205:         LCD_PutString(temp);
  1848     07DA  303D               	movlw	(low (_temp| 0))& (0+255)
  1849     07DB  00A6               	movwf	LCD_PutString@a
  1850     07DC  3000               	movlw	0
  1851     07DD  00A7               	movwf	LCD_PutString@a+1
  1852     07DE  2794               	fcall	_LCD_PutString
  1853                           
  1854                           ;source/VendingMachine/VM.c: 206:         ( LCD_PutString("0              "));
  1855     07DF  3047               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1856     07E0  00A6               	movwf	LCD_PutString@a
  1857     07E1  3080               	movlw	128
  1858     07E2  00A7               	movwf	LCD_PutString@a+1
  1859     07E3  2794               	fcall	_LCD_PutString
  1860                           
  1861                           ;source/VendingMachine/VM.c: 207:     }
  1862     07E4  0008               	return
  1863     07E5                     l2312:
  1864     07E5  083B               	movf	_gCurrentDrinkPrice,w	;volatile
  1865     07E6  3A80               	xorlw	128
  1866     07E7  3E7F               	addlw	-129
  1867     07E8  1803               	skipnc
  1868     07E9  0008               	return
  1869                           
  1870                           ;source/VendingMachine/VM.c: 209:         gCurrentState = VM_STATE_DRINK_DISPENSE;
  1871     07EA  30CB               	movlw	203
  1872     07EB  00C4               	movwf	_gCurrentState	;volatile
  1873     07EC  0008               	return
  1874     07ED                     __end_of_VM_Mode_CoinInsertion:
  1875                           
  1876                           	psect	text7
  1877     03B6                     __ptext7:	
  1878 ;; *************** function _VM_Init *****************
  1879 ;; Defined at:
  1880 ;;		line 71 in file "source/VendingMachine/VM.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  lcd             5   13[BANK0 ] struct .
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 300/0
  1891 ;;		On exit  : 300/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1
  1894 ;;      Params:         0       0       0
  1895 ;;      Locals:         0       5       0
  1896 ;;      Temps:          0       0       0
  1897 ;;      Totals:         0       5       0
  1898 ;;Total ram usage:        5 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 5
  1901 ;; This function calls:
  1902 ;;		_ADC_Init
  1903 ;;		_DIO_setPinMode
  1904 ;;		_DIO_setPinValue
  1905 ;;		_LCD_Init
  1906 ;;		_LCD_PutString
  1907 ;;		_LCD_Write
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;;		_VM_Running
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914     03B6                     _VM_Init:	
  1915                           ;psect for function _VM_Init
  1916                           
  1917                           
  1918                           ;source/VendingMachine/VM.c: 74:     gCurrentState = VM_STATE_INITIAL;
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _VM_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1922     03B6  30C8               	movlw	200
  1923     03B7  00C4               	movwf	_gCurrentState	;volatile
  1924                           
  1925                           ;source/VendingMachine/VM.c: 77:     DIO_setPinMode(DIO_PORTA, DIO_PIN0, DIO_OUTPUT_MODE
      +                          );
  1926     03B8  01A5               	clrf	DIO_setPinMode@pin
  1927     03B9  300A               	movlw	10
  1928     03BA  00A6               	movwf	DIO_setPinMode@mode
  1929     03BB  3000               	movlw	0
  1930     03BC  2029               	fcall	_DIO_setPinMode
  1931                           
  1932                           ;source/VendingMachine/VM.c: 78:     DIO_setPinMode(DIO_PORTA, DIO_PIN1, DIO_OUTPUT_MODE
      +                          );
  1933     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1934     03BE  01A5               	clrf	DIO_setPinMode@pin
  1935     03BF  0AA5               	incf	DIO_setPinMode@pin,f
  1936     03C0  300A               	movlw	10
  1937     03C1  00A6               	movwf	DIO_setPinMode@mode
  1938     03C2  3000               	movlw	0
  1939     03C3  2029               	fcall	_DIO_setPinMode
  1940                           
  1941                           ;source/VendingMachine/VM.c: 79:     DIO_setPinValue(DIO_PORTA, DIO_PIN0, 0);
  1942     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1943     03C5  01A0               	clrf	DIO_setPinValue@pin
  1944     03C6  01A1               	clrf	DIO_setPinValue@value
  1945     03C7  3000               	movlw	0
  1946     03C8  24AF               	fcall	_DIO_setPinValue
  1947                           
  1948                           ;source/VendingMachine/VM.c: 80:     DIO_setPinValue(DIO_PORTA, DIO_PIN1, 0);
  1949     03C9  01A0               	clrf	DIO_setPinValue@pin
  1950     03CA  0AA0               	incf	DIO_setPinValue@pin,f
  1951     03CB  01A1               	clrf	DIO_setPinValue@value
  1952     03CC  3000               	movlw	0
  1953     03CD  24AF               	fcall	_DIO_setPinValue
  1954                           
  1955                           ;source/VendingMachine/VM.c: 82:     DIO_setPinMode(DIO_PORTA, DIO_PIN2, DIO_OUTPUT_MODE
      +                          );
  1956     03CE  3002               	movlw	2
  1957     03CF  00A5               	movwf	DIO_setPinMode@pin
  1958     03D0  300A               	movlw	10
  1959     03D1  00A6               	movwf	DIO_setPinMode@mode
  1960     03D2  3000               	movlw	0
  1961     03D3  2029               	fcall	_DIO_setPinMode
  1962                           
  1963                           ;source/VendingMachine/VM.c: 83:     DIO_setPinValue(DIO_PORTA, DIO_PIN0, 0);
  1964     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1965     03D5  01A0               	clrf	DIO_setPinValue@pin
  1966     03D6  01A1               	clrf	DIO_setPinValue@value
  1967     03D7  3000               	movlw	0
  1968     03D8  24AF               	fcall	_DIO_setPinValue
  1969                           
  1970                           ;source/VendingMachine/VM.c: 85:     DIO_setPinMode(DIO_PORTB, DIO_PIN0, DIO_INTERRUPT_C
      +                          HANGE_MODE);
  1971     03D9  01A5               	clrf	DIO_setPinMode@pin
  1972     03DA  300C               	movlw	12
  1973     03DB  00A6               	movwf	DIO_setPinMode@mode
  1974     03DC  3001               	movlw	1
  1975     03DD  2029               	fcall	_DIO_setPinMode
  1976                           
  1977                           ;source/VendingMachine/VM.c: 86:     DIO_setPinMode(DIO_PORTB, DIO_PIN1, DIO_INTERRUPT_C
      +                          HANGE_MODE);
  1978     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1979     03DF  01A5               	clrf	DIO_setPinMode@pin
  1980     03E0  0AA5               	incf	DIO_setPinMode@pin,f
  1981     03E1  300C               	movlw	12
  1982     03E2  00A6               	movwf	DIO_setPinMode@mode
  1983     03E3  3001               	movlw	1
  1984     03E4  2029               	fcall	_DIO_setPinMode
  1985                           
  1986                           ;source/VendingMachine/VM.c: 87:     DIO_setPinMode(DIO_PORTB, DIO_PIN2, DIO_INTERRUPT_C
      +                          HANGE_MODE);
  1987     03E5  3002               	movlw	2
  1988     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1989     03E7  00A5               	movwf	DIO_setPinMode@pin
  1990     03E8  300C               	movlw	12
  1991     03E9  00A6               	movwf	DIO_setPinMode@mode
  1992     03EA  3001               	movlw	1
  1993     03EB  2029               	fcall	_DIO_setPinMode
  1994                           
  1995                           ;source/VendingMachine/VM.c: 90:     ADC_Init();
  1996     03EC  20ED               	fcall	_ADC_Init
  1997                           
  1998                           ;source/VendingMachine/VM.c: 93:     T2CONbits.TMR2ON = 0;
  1999     03ED  1112               	bcf	18,2	;volatile
  2000                           
  2001                           ;source/VendingMachine/VM.c: 94:     T2CONbits.T2CKPS = 3;
  2002     03EE  3003               	movlw	3
  2003     03EF  0492               	iorwf	18,f	;volatile
  2004                           
  2005                           ;source/VendingMachine/VM.c: 95:     T2CONbits.TOUTPS = 0x9;
  2006     03F0  0812               	movf	18,w	;volatile
  2007     03F1  3987               	andlw	-121
  2008     03F2  3848               	iorlw	72
  2009     03F3  0092               	movwf	18	;volatile
  2010                           
  2011                           ;source/VendingMachine/VM.c: 96:     PIE1bits.TMR2IE = 1;
  2012     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2013     03F5  148C               	bsf	12,1	;volatile
  2014                           
  2015                           ;source/VendingMachine/VM.c: 97:     PIR1bits.TMR2IF = 0;
  2016     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2017     03F7  108C               	bcf	12,1	;volatile
  2018                           
  2019                           ;source/VendingMachine/VM.c: 98:     PR2 = 0x8E;
  2020     03F8  308E               	movlw	142
  2021     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2022     03FA  0092               	movwf	18	;volatile
  2023                           
  2024                           ;source/VendingMachine/VM.c: 99:     T2CONbits.TMR2ON = 1;
  2025     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2026     03FC  1512               	bsf	18,2	;volatile
  2027                           
  2028                           ;source/VendingMachine/VM.c: 100:     TMR2 = 0;
  2029     03FD  0191               	clrf	17	;volatile
  2030                           
  2031                           ;source/VendingMachine/VM.c: 103:     LCD lcd = { &PORTC, 0, 3, 4, 5, 6, 7 };
  2032     03FE  302D               	movlw	VM_Init@lcd& (0+255)
  2033     03FF  0084               	movwf	4
  2034     0400  083F               	movf	VM_Init@F1329,w
  2035     0401  1383               	bcf	3,7	;select IRP bank0
  2036     0402  0080               	movwf	0
  2037     0403  0A84               	incf	4,f
  2038     0404  0840               	movf	VM_Init@F1329+1,w
  2039     0405  0080               	movwf	0
  2040     0406  0A84               	incf	4,f
  2041     0407  0841               	movf	VM_Init@F1329+2,w
  2042     0408  0080               	movwf	0
  2043     0409  0A84               	incf	4,f
  2044     040A  0842               	movf	VM_Init@F1329+3,w
  2045     040B  0080               	movwf	0
  2046     040C  0A84               	incf	4,f
  2047     040D  0843               	movf	VM_Init@F1329+4,w
  2048     040E  0080               	movwf	0
  2049                           
  2050                           ;source/VendingMachine/VM.c: 104:     LCD_Init(lcd);
  2051     040F  3026               	movlw	LCD_Init@display& (0+255)
  2052     0410  0084               	movwf	4
  2053     0411  082D               	movf	VM_Init@lcd,w
  2054     0412  0080               	movwf	0
  2055     0413  0A84               	incf	4,f
  2056     0414  082E               	movf	VM_Init@lcd+1,w
  2057     0415  0080               	movwf	0
  2058     0416  0A84               	incf	4,f
  2059     0417  082F               	movf	VM_Init@lcd+2,w
  2060     0418  0080               	movwf	0
  2061     0419  0A84               	incf	4,f
  2062     041A  0830               	movf	VM_Init@lcd+3,w
  2063     041B  0080               	movwf	0
  2064     041C  0A84               	incf	4,f
  2065     041D  0831               	movf	VM_Init@lcd+4,w
  2066     041E  0080               	movwf	0
  2067     041F  259B               	fcall	_LCD_Init
  2068                           
  2069                           ;source/VendingMachine/VM.c: 105:     LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 &
      +                           0x0F);;
  2070     0420  3000               	movlw	0
  2071     0421  25FE               	fcall	_LCD_Write
  2072     0422  3001               	movlw	1
  2073     0423  25FE               	fcall	_LCD_Write
  2074                           
  2075                           ;source/VendingMachine/VM.c: 107:     (INTCONbits.GIE = 1);
  2076     0424  178B               	bsf	11,7	;volatile
  2077                           
  2078                           ;source/VendingMachine/VM.c: 108:     (INTCONbits.PEIE = 1);
  2079     0425  170B               	bsf	11,6	;volatile
  2080                           
  2081                           ;source/VendingMachine/VM.c: 112:     gCurrentState = VM_STATE_DRINK_SELECTION;
  2082     0426  30C9               	movlw	201
  2083     0427  00C4               	movwf	_gCurrentState	;volatile
  2084                           
  2085                           ;source/VendingMachine/VM.c: 114:     gCurrentDrink = VM_DRINK_COLA;
  2086     0428  01BC               	clrf	_gCurrentDrink	;volatile
  2087     0429  3008               	movlw	8
  2088     042A  25FE               	fcall	_LCD_Write
  2089     042B  3000               	movlw	0
  2090     042C  25FE               	fcall	_LCD_Write
  2091                           
  2092                           ;source/VendingMachine/VM.c: 117:     LCD_PutString("Select Drink:");
  2093     042D  3094               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2094     042E  00A6               	movwf	LCD_PutString@a
  2095     042F  3080               	movlw	128
  2096     0430  00A7               	movwf	LCD_PutString@a+1
  2097     0431  2794               	fcall	_LCD_PutString
  2098     0432  0008               	return
  2099     0433                     __end_of_VM_Init:
  2100                           
  2101                           	psect	text8
  2102     0794                     __ptext8:	
  2103 ;; *************** function _LCD_PutString *****************
  2104 ;; Defined at:
  2105 ;;		line 147 in file "source/LCD/LCD.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  a               2    6[BANK0 ] PTR unsigned char 
  2108 ;;		 -> STR_17(16), STR_16(17), STR_15(5), STR_14(5), 
  2109 ;;		 -> STR_13(5), STR_12(5), STR_11(11), STR_10(17), 
  2110 ;;		 -> STR_9(16), STR_8(16), temp(2), STR_7(15), 
  2111 ;;		 -> STR_6(15), STR_5(13), STR_4(15), STR_3(17), 
  2112 ;;		 -> STR_2(19), STR_1(14), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  i               2   11[BANK0 ] int 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 300/0
  2121 ;;		On exit  : 300/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1
  2124 ;;      Params:         0       2       0
  2125 ;;      Locals:         0       2       0
  2126 ;;      Temps:          0       3       0
  2127 ;;      Totals:         0       7       0
  2128 ;;Total ram usage:        7 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 4
  2131 ;; This function calls:
  2132 ;;		_LCD_PutChar
  2133 ;; This function is called by:
  2134 ;;		_VM_Init
  2135 ;;		_VM_Running
  2136 ;;		_VM_Mode_DrinkSelection
  2137 ;;		_VM_Mode_CoinInsertion
  2138 ;;		_VM_Mode_DispenseDrink
  2139 ;;		_VM_Mode_DispenseChange
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143     0794                     _LCD_PutString:	
  2144                           ;psect for function _LCD_PutString
  2145                           
  2146                           
  2147                           ;source/LCD/LCD.c: 149:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _LCD_PutString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2151     0794  01AB               	clrf	LCD_PutString@i
  2152     0795  01AC               	clrf	LCD_PutString@i+1
  2153     0796                     l2068:
  2154     0796  082B               	movf	LCD_PutString@i,w
  2155     0797  0726               	addwf	LCD_PutString@a,w
  2156     0798  00A9               	movwf	??_LCD_PutString+1
  2157     0799  0827               	movf	LCD_PutString@a+1,w
  2158     079A  00A8               	movwf	??_LCD_PutString
  2159     079B  1803               	skipnc
  2160     079C  0AA8               	incf	??_LCD_PutString,f
  2161     079D  1BAB               	btfsc	LCD_PutString@i,7
  2162     079E  03A8               	decf	??_LCD_PutString,f
  2163     079F  1283               	bcf	3,5	;RP0=0, select bank0
  2164     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2165     07A1  0828               	movf	??_LCD_PutString,w
  2166     07A2  00AA               	movwf	??_LCD_PutString+2
  2167     07A3  082A               	movf	??_LCD_PutString+2,w
  2168     07A4  00FF               	movwf	127
  2169     07A5  0829               	movf	??_LCD_PutString+1,w
  2170     07A6  0084               	movwf	4
  2171     07A7  2100               	fcall	stringtab
  2172     07A8  3A00               	xorlw	0
  2173     07A9  1903               	btfsc	3,2
  2174     07AA  0008               	return
  2175                           
  2176                           ;source/LCD/LCD.c: 150:         LCD_PutChar(a[i]);
  2177     07AB  082B               	movf	LCD_PutString@i,w
  2178     07AC  0726               	addwf	LCD_PutString@a,w
  2179     07AD  00A9               	movwf	??_LCD_PutString+1
  2180     07AE  0827               	movf	LCD_PutString@a+1,w
  2181     07AF  00A8               	movwf	??_LCD_PutString
  2182     07B0  1803               	skipnc
  2183     07B1  0AA8               	incf	??_LCD_PutString,f
  2184     07B2  1BAB               	btfsc	LCD_PutString@i,7
  2185     07B3  03A8               	decf	??_LCD_PutString,f
  2186     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  2187     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  2188     07B6  0828               	movf	??_LCD_PutString,w
  2189     07B7  00AA               	movwf	??_LCD_PutString+2
  2190     07B8  082A               	movf	??_LCD_PutString+2,w
  2191     07B9  00FF               	movwf	127
  2192     07BA  0829               	movf	??_LCD_PutString+1,w
  2193     07BB  0084               	movwf	4
  2194     07BC  2100               	fcall	stringtab
  2195     07BD  2322               	fcall	_LCD_PutChar
  2196                           
  2197                           ;source/LCD/LCD.c: 151:     }
  2198     07BE  3001               	movlw	1
  2199     07BF  07AB               	addwf	LCD_PutString@i,f
  2200     07C0  1803               	skipnc
  2201     07C1  0AAC               	incf	LCD_PutString@i+1,f
  2202     07C2  3000               	movlw	0
  2203     07C3  07AC               	addwf	LCD_PutString@i+1,f
  2204     07C4  2F96               	goto	l2068
  2205     07C5                     __end_of_LCD_PutString:
  2206                           
  2207                           	psect	text9
  2208     0322                     __ptext9:	
  2209 ;; *************** function _LCD_PutChar *****************
  2210 ;; Defined at:
  2211 ;;		line 127 in file "source/LCD/LCD.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  c               1    wreg     unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  c               1    5[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 300/0
  2222 ;;		On exit  : 300/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1
  2225 ;;      Params:         0       0       0
  2226 ;;      Locals:         0       1       0
  2227 ;;      Temps:          0       2       0
  2228 ;;      Totals:         0       3       0
  2229 ;;Total ram usage:        3 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 3
  2232 ;; This function calls:
  2233 ;;		_LCD_Out
  2234 ;; This function is called by:
  2235 ;;		_LCD_PutString
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     0322                     _LCD_PutChar:	
  2240                           ;psect for function _LCD_PutChar
  2241                           
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _LCD_PutChar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2245                           ;LCD_PutChar@c stored from wreg
  2246     0322  00A5               	movwf	LCD_PutChar@c
  2247                           
  2248                           ;source/LCD/LCD.c: 129:    *(lcd.PORT) |= 1 << lcd.RS;
  2249     0323  3001               	movlw	1
  2250     0324  00A3               	movwf	??_LCD_PutChar
  2251     0325  0836               	movf	_lcd+2,w
  2252     0326  3907               	andlw	7
  2253     0327  3E01               	addlw	1
  2254     0328  2B2B               	goto	u1054
  2255     0329                     u1055:
  2256     0329  1003               	clrc
  2257     032A  0DA3               	rlf	??_LCD_PutChar,f
  2258     032B                     u1054:
  2259     032B  3EFF               	addlw	-1
  2260     032C  1D03               	skipz
  2261     032D  2B29               	goto	u1055
  2262     032E  0823               	movf	??_LCD_PutChar,w
  2263     032F  00FF               	movwf	127
  2264     0330  0834               	movf	_lcd,w
  2265     0331  0084               	movwf	4
  2266     0332  1783               	bsf	3,7
  2267     0333  1C35               	btfss	_lcd+1,0
  2268     0334  1383               	bcf	3,7
  2269     0335  087F               	movf	127,w
  2270     0336  0480               	iorwf	0,f
  2271                           
  2272                           ;source/LCD/LCD.c: 130:     LCD_Out((c & 0xF0) >> 4);
  2273     0337  0825               	movf	LCD_PutChar@c,w
  2274     0338  00A3               	movwf	??_LCD_PutChar
  2275     0339  3004               	movlw	4
  2276     033A                     u1065:
  2277     033A  1003               	clrc
  2278     033B  0CA3               	rrf	??_LCD_PutChar,f
  2279     033C  3EFF               	addlw	-1
  2280     033D  1D03               	skipz
  2281     033E  2B3A               	goto	u1065
  2282     033F  0823               	movf	??_LCD_PutChar,w
  2283     0340  390F               	andlw	15
  2284     0341  21C3               	fcall	_LCD_Out
  2285                           
  2286                           ;source/LCD/LCD.c: 132:     *(lcd.PORT) |= 1 << lcd.EN;
  2287     0342  3001               	movlw	1
  2288     0343  00A3               	movwf	??_LCD_PutChar
  2289     0344  0C36               	rrf	_lcd+2,w
  2290     0345  00A4               	movwf	??_LCD_PutChar+1
  2291     0346  0CA4               	rrf	??_LCD_PutChar+1,f
  2292     0347  0C24               	rrf	??_LCD_PutChar+1,w
  2293     0348  3907               	andlw	7
  2294     0349  3E01               	addlw	1
  2295     034A  2B4D               	goto	u1074
  2296     034B                     u1075:
  2297     034B  1003               	clrc
  2298     034C  0DA3               	rlf	??_LCD_PutChar,f
  2299     034D                     u1074:
  2300     034D  3EFF               	addlw	-1
  2301     034E  1D03               	skipz
  2302     034F  2B4B               	goto	u1075
  2303     0350  0823               	movf	??_LCD_PutChar,w
  2304     0351  00FF               	movwf	127
  2305     0352  0834               	movf	_lcd,w
  2306     0353  0084               	movwf	4
  2307     0354  1783               	bsf	3,7
  2308     0355  1C35               	btfss	_lcd+1,0
  2309     0356  1383               	bcf	3,7
  2310     0357  087F               	movf	127,w
  2311     0358  0480               	iorwf	0,f
  2312                           
  2313                           ;source/LCD/LCD.c: 133:     _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  2314     0359  300C               	movlw	12
  2315     035A  1283               	bcf	3,5	;RP0=0, select bank0
  2316     035B  1303               	bcf	3,6	;RP1=0, select bank0
  2317     035C  00A3               	movwf	??_LCD_PutChar
  2318     035D                     u1797:
  2319     035D  0BA3               	decfsz	??_LCD_PutChar,f
  2320     035E  2B5D               	goto	u1797
  2321     035F  2B60               	nop2
  2322                           
  2323                           ;source/LCD/LCD.c: 134:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2324     0360  3001               	movlw	1
  2325     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2326     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2327     0363  00A3               	movwf	??_LCD_PutChar
  2328     0364  0C36               	rrf	_lcd+2,w
  2329     0365  00A4               	movwf	??_LCD_PutChar+1
  2330     0366  0CA4               	rrf	??_LCD_PutChar+1,f
  2331     0367  0C24               	rrf	??_LCD_PutChar+1,w
  2332     0368  3907               	andlw	7
  2333     0369  3E01               	addlw	1
  2334     036A  2B6D               	goto	u1084
  2335     036B                     u1085:
  2336     036B  1003               	clrc
  2337     036C  0DA3               	rlf	??_LCD_PutChar,f
  2338     036D                     u1084:
  2339     036D  3EFF               	addlw	-1
  2340     036E  1D03               	skipz
  2341     036F  2B6B               	goto	u1085
  2342     0370  0823               	movf	??_LCD_PutChar,w
  2343     0371  3AFF               	xorlw	255
  2344     0372  00FF               	movwf	127
  2345     0373  0834               	movf	_lcd,w
  2346     0374  0084               	movwf	4
  2347     0375  1783               	bsf	3,7
  2348     0376  1C35               	btfss	_lcd+1,0
  2349     0377  1383               	bcf	3,7
  2350     0378  087F               	movf	127,w
  2351     0379  0580               	andwf	0,f
  2352                           
  2353                           ;source/LCD/LCD.c: 136:     LCD_Out(c & 0x0F);
  2354     037A  0825               	movf	LCD_PutChar@c,w
  2355     037B  390F               	andlw	15
  2356     037C  21C3               	fcall	_LCD_Out
  2357                           
  2358                           ;source/LCD/LCD.c: 138:     *(lcd.PORT) |= 1 << lcd.EN;
  2359     037D  3001               	movlw	1
  2360     037E  00A3               	movwf	??_LCD_PutChar
  2361     037F  0C36               	rrf	_lcd+2,w
  2362     0380  00A4               	movwf	??_LCD_PutChar+1
  2363     0381  0CA4               	rrf	??_LCD_PutChar+1,f
  2364     0382  0C24               	rrf	??_LCD_PutChar+1,w
  2365     0383  3907               	andlw	7
  2366     0384  3E01               	addlw	1
  2367     0385  2B88               	goto	u1094
  2368     0386                     u1095:
  2369     0386  1003               	clrc
  2370     0387  0DA3               	rlf	??_LCD_PutChar,f
  2371     0388                     u1094:
  2372     0388  3EFF               	addlw	-1
  2373     0389  1D03               	skipz
  2374     038A  2B86               	goto	u1095
  2375     038B  0823               	movf	??_LCD_PutChar,w
  2376     038C  00FF               	movwf	127
  2377     038D  0834               	movf	_lcd,w
  2378     038E  0084               	movwf	4
  2379     038F  1783               	bsf	3,7
  2380     0390  1C35               	btfss	_lcd+1,0
  2381     0391  1383               	bcf	3,7
  2382     0392  087F               	movf	127,w
  2383     0393  0480               	iorwf	0,f
  2384                           
  2385                           ;source/LCD/LCD.c: 139:     _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  2386     0394  300C               	movlw	12
  2387     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2388     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2389     0397  00A3               	movwf	??_LCD_PutChar
  2390     0398                     u1807:
  2391     0398  0BA3               	decfsz	??_LCD_PutChar,f
  2392     0399  2B98               	goto	u1807
  2393     039A  2B9B               	nop2
  2394                           
  2395                           ;source/LCD/LCD.c: 140:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2396     039B  3001               	movlw	1
  2397     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2398     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2399     039E  00A3               	movwf	??_LCD_PutChar
  2400     039F  0C36               	rrf	_lcd+2,w
  2401     03A0  00A4               	movwf	??_LCD_PutChar+1
  2402     03A1  0CA4               	rrf	??_LCD_PutChar+1,f
  2403     03A2  0C24               	rrf	??_LCD_PutChar+1,w
  2404     03A3  3907               	andlw	7
  2405     03A4  3E01               	addlw	1
  2406     03A5  2BA8               	goto	u1104
  2407     03A6                     u1105:
  2408     03A6  1003               	clrc
  2409     03A7  0DA3               	rlf	??_LCD_PutChar,f
  2410     03A8                     u1104:
  2411     03A8  3EFF               	addlw	-1
  2412     03A9  1D03               	skipz
  2413     03AA  2BA6               	goto	u1105
  2414     03AB  0823               	movf	??_LCD_PutChar,w
  2415     03AC  3AFF               	xorlw	255
  2416     03AD  00FF               	movwf	127
  2417     03AE  0834               	movf	_lcd,w
  2418     03AF  0084               	movwf	4
  2419     03B0  1783               	bsf	3,7
  2420     03B1  1C35               	btfss	_lcd+1,0
  2421     03B2  1383               	bcf	3,7
  2422     03B3  087F               	movf	127,w
  2423     03B4  0580               	andwf	0,f
  2424     03B5  0008               	return
  2425     03B6                     __end_of_LCD_PutChar:
  2426                           
  2427                           	psect	text10
  2428     059B                     __ptext10:	
  2429 ;; *************** function _LCD_Init *****************
  2430 ;; Defined at:
  2431 ;;		line 85 in file "source/LCD/LCD.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  display         5    6[BANK0 ] struct .
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : B00/0
  2442 ;;		On exit  : 300/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1
  2445 ;;      Params:         0       5       0
  2446 ;;      Locals:         0       0       0
  2447 ;;      Temps:          0       2       0
  2448 ;;      Totals:         0       7       0
  2449 ;;Total ram usage:        7 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 4
  2452 ;; This function calls:
  2453 ;;		_LCD_Write
  2454 ;; This function is called by:
  2455 ;;		_VM_Init
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     059B                     _LCD_Init:	
  2460                           ;psect for function _LCD_Init
  2461                           
  2462                           
  2463                           ;source/LCD/LCD.c: 87:     lcd = display;
  2464                           
  2465                           ;incstack = 0
  2466                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2467     059B  3034               	movlw	_lcd& (0+255)
  2468     059C  0084               	movwf	4
  2469     059D  0826               	movf	LCD_Init@display,w
  2470     059E  0080               	movwf	0
  2471     059F  0A84               	incf	4,f
  2472     05A0  0827               	movf	LCD_Init@display+1,w
  2473     05A1  0080               	movwf	0
  2474     05A2  0A84               	incf	4,f
  2475     05A3  0828               	movf	LCD_Init@display+2,w
  2476     05A4  0080               	movwf	0
  2477     05A5  0A84               	incf	4,f
  2478     05A6  0829               	movf	LCD_Init@display+3,w
  2479     05A7  0080               	movwf	0
  2480     05A8  0A84               	incf	4,f
  2481     05A9  082A               	movf	LCD_Init@display+4,w
  2482     05AA  0080               	movwf	0
  2483                           
  2484                           ;source/LCD/LCD.c: 90:     if ( lcd.PORT == &PORTA ) {
  2485     05AB  3000               	movlw	0
  2486     05AC  0635               	xorwf	_lcd+1,w
  2487     05AD  1D03               	skipz
  2488     05AE  2DB1               	goto	u1205
  2489     05AF  3005               	movlw	5
  2490     05B0  0634               	xorwf	_lcd,w
  2491     05B1                     u1205:
  2492     05B1  1D03               	skipz
  2493     05B2  2DB6               	goto	l2028
  2494                           
  2495                           ;source/LCD/LCD.c: 91:         TRISA = 0x00;
  2496     05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2497     05B4  0185               	clrf	5	;volatile
  2498                           
  2499                           ;source/LCD/LCD.c: 92:     }
  2500     05B5  2DCA               	goto	l2036
  2501     05B6                     l2028:
  2502     05B6  3000               	movlw	0
  2503     05B7  0635               	xorwf	_lcd+1,w
  2504     05B8  1D03               	skipz
  2505     05B9  2DBC               	goto	u1215
  2506     05BA  3006               	movlw	6
  2507     05BB  0634               	xorwf	_lcd,w
  2508     05BC                     u1215:
  2509     05BC  1D03               	skipz
  2510     05BD  2DC1               	goto	l2032
  2511                           
  2512                           ;source/LCD/LCD.c: 94:         TRISB = 0x00;
  2513     05BE  1683               	bsf	3,5	;RP0=1, select bank1
  2514     05BF  0186               	clrf	6	;volatile
  2515                           
  2516                           ;source/LCD/LCD.c: 95:     }
  2517     05C0  2DCA               	goto	l2036
  2518     05C1                     l2032:
  2519     05C1  3000               	movlw	0
  2520     05C2  0635               	xorwf	_lcd+1,w
  2521     05C3  1D03               	skipz
  2522     05C4  2DC7               	goto	u1225
  2523     05C5  3007               	movlw	7
  2524     05C6  0634               	xorwf	_lcd,w
  2525     05C7                     u1225:
  2526                           
  2527                           ;source/LCD/LCD.c: 97:         TRISC = 0x00;
  2528     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2529     05C8  1903               	btfsc	3,2
  2530     05C9  0187               	clrf	7	;volatile
  2531     05CA                     l2036:
  2532                           
  2533                           ;source/LCD/LCD.c: 101:     _delay((unsigned long)((20)*(4000000UL/4000.0)));
  2534     05CA  301A               	movlw	26
  2535     05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2536     05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2537     05CD  00AC               	movwf	??_LCD_Init+1
  2538     05CE  30F8               	movlw	248
  2539     05CF  00AB               	movwf	??_LCD_Init
  2540     05D0                     u1817:
  2541     05D0  0BAB               	decfsz	??_LCD_Init,f
  2542     05D1  2DD0               	goto	u1817
  2543     05D2  0BAC               	decfsz	??_LCD_Init+1,f
  2544     05D3  2DD0               	goto	u1817
  2545                           
  2546                           ;source/LCD/LCD.c: 104:     LCD_Write(0x03);
  2547     05D4  3003               	movlw	3
  2548     05D5  25FE               	fcall	_LCD_Write
  2549                           
  2550                           ;source/LCD/LCD.c: 105:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2551     05D6  3007               	movlw	7
  2552     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2553     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2554     05D9  00AC               	movwf	??_LCD_Init+1
  2555     05DA  307C               	movlw	124
  2556     05DB  00AB               	movwf	??_LCD_Init
  2557     05DC                     u1827:
  2558     05DC  0BAB               	decfsz	??_LCD_Init,f
  2559     05DD  2DDC               	goto	u1827
  2560     05DE  0BAC               	decfsz	??_LCD_Init+1,f
  2561     05DF  2DDC               	goto	u1827
  2562     05E0  2DE1               	nop2
  2563                           
  2564                           ;source/LCD/LCD.c: 106:     LCD_Write(0x03);
  2565     05E1  3003               	movlw	3
  2566     05E2  25FE               	fcall	_LCD_Write
  2567                           
  2568                           ;source/LCD/LCD.c: 107:     _delay((unsigned long)((16)*(4000000UL/4000.0)));
  2569     05E3  3015               	movlw	21
  2570     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2571     05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2572     05E6  00AC               	movwf	??_LCD_Init+1
  2573     05E7  30C6               	movlw	198
  2574     05E8  00AB               	movwf	??_LCD_Init
  2575     05E9                     u1837:
  2576     05E9  0BAB               	decfsz	??_LCD_Init,f
  2577     05EA  2DE9               	goto	u1837
  2578     05EB  0BAC               	decfsz	??_LCD_Init+1,f
  2579     05EC  2DE9               	goto	u1837
  2580                           
  2581                           ;source/LCD/LCD.c: 108:     LCD_Write(0x03);
  2582     05ED  3003               	movlw	3
  2583     05EE  25FE               	fcall	_LCD_Write
  2584                           
  2585                           ;source/LCD/LCD.c: 111:     LCD_Write(0x02);
  2586     05EF  3002               	movlw	2
  2587     05F0  25FE               	fcall	_LCD_Write
  2588                           
  2589                           ;source/LCD/LCD.c: 114:     LCD_Write( (0x28 & 0xF0) >> 4 ); LCD_Write( 0x28 & 0x0F);;
  2590     05F1  3002               	movlw	2
  2591     05F2  25FE               	fcall	_LCD_Write
  2592     05F3  3008               	movlw	8
  2593     05F4  25FE               	fcall	_LCD_Write
  2594                           
  2595                           ;source/LCD/LCD.c: 117:     LCD_Write( (0x06 & 0xF0) >> 4 ); LCD_Write( 0x06 & 0x0F);;
  2596     05F5  3000               	movlw	0
  2597     05F6  25FE               	fcall	_LCD_Write
  2598     05F7  3006               	movlw	6
  2599     05F8  25FE               	fcall	_LCD_Write
  2600                           
  2601                           ;source/LCD/LCD.c: 120:     LCD_Write( (0x0C & 0xF0) >> 4 ); LCD_Write( 0x0C & 0x0F);;
  2602     05F9  3000               	movlw	0
  2603     05FA  25FE               	fcall	_LCD_Write
  2604     05FB  300C               	movlw	12
  2605     05FC  25FE               	fcall	_LCD_Write
  2606     05FD  0008               	return
  2607     05FE                     __end_of_LCD_Init:
  2608                           
  2609                           	psect	text11
  2610     05FE                     __ptext11:	
  2611 ;; *************** function _LCD_Write *****************
  2612 ;; Defined at:
  2613 ;;		line 71 in file "source/LCD/LCD.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  c               1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  c               1    5[BANK0 ] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 300/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1
  2627 ;;      Params:         0       0       0
  2628 ;;      Locals:         0       1       0
  2629 ;;      Temps:          0       2       0
  2630 ;;      Totals:         0       3       0
  2631 ;;Total ram usage:        3 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 3
  2634 ;; This function calls:
  2635 ;;		_LCD_Out
  2636 ;; This function is called by:
  2637 ;;		_LCD_Init
  2638 ;;		_VM_Init
  2639 ;;		_VM_Running
  2640 ;;		_VM_Mode_DrinkSelection
  2641 ;;		_VM_Mode_CoinInsertion
  2642 ;;		_VM_Mode_DispenseDrink
  2643 ;;		_VM_Mode_DispenseChange
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647     05FE                     _LCD_Write:	
  2648                           ;psect for function _LCD_Write
  2649                           
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2653                           ;LCD_Write@c stored from wreg
  2654     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2655     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2656     0600  00A5               	movwf	LCD_Write@c
  2657                           
  2658                           ;source/LCD/LCD.c: 73:     *(lcd.PORT) &= ~(1 << lcd.RS);
  2659     0601  3001               	movlw	1
  2660     0602  00A3               	movwf	??_LCD_Write
  2661     0603  0836               	movf	_lcd+2,w
  2662     0604  3907               	andlw	7
  2663     0605  3E01               	addlw	1
  2664     0606  2E09               	goto	u1024
  2665     0607                     u1025:
  2666     0607  1003               	clrc
  2667     0608  0DA3               	rlf	??_LCD_Write,f
  2668     0609                     u1024:
  2669     0609  3EFF               	addlw	-1
  2670     060A  1D03               	skipz
  2671     060B  2E07               	goto	u1025
  2672     060C  0823               	movf	??_LCD_Write,w
  2673     060D  3AFF               	xorlw	255
  2674     060E  00FF               	movwf	127
  2675     060F  0834               	movf	_lcd,w
  2676     0610  0084               	movwf	4
  2677     0611  1783               	bsf	3,7
  2678     0612  1C35               	btfss	_lcd+1,0
  2679     0613  1383               	bcf	3,7
  2680     0614  087F               	movf	127,w
  2681     0615  0580               	andwf	0,f
  2682                           
  2683                           ;source/LCD/LCD.c: 74:     LCD_Out(c);
  2684     0616  0825               	movf	LCD_Write@c,w
  2685     0617  21C3               	fcall	_LCD_Out
  2686                           
  2687                           ;source/LCD/LCD.c: 76:     *(lcd.PORT) |= 1 << lcd.EN;
  2688     0618  3001               	movlw	1
  2689     0619  00A3               	movwf	??_LCD_Write
  2690     061A  0C36               	rrf	_lcd+2,w
  2691     061B  00A4               	movwf	??_LCD_Write+1
  2692     061C  0CA4               	rrf	??_LCD_Write+1,f
  2693     061D  0C24               	rrf	??_LCD_Write+1,w
  2694     061E  3907               	andlw	7
  2695     061F  3E01               	addlw	1
  2696     0620  2E23               	goto	u1034
  2697     0621                     u1035:
  2698     0621  1003               	clrc
  2699     0622  0DA3               	rlf	??_LCD_Write,f
  2700     0623                     u1034:
  2701     0623  3EFF               	addlw	-1
  2702     0624  1D03               	skipz
  2703     0625  2E21               	goto	u1035
  2704     0626  0823               	movf	??_LCD_Write,w
  2705     0627  00FF               	movwf	127
  2706     0628  0834               	movf	_lcd,w
  2707     0629  0084               	movwf	4
  2708     062A  1783               	bsf	3,7
  2709     062B  1C35               	btfss	_lcd+1,0
  2710     062C  1383               	bcf	3,7
  2711     062D  087F               	movf	127,w
  2712     062E  0480               	iorwf	0,f
  2713                           
  2714                           ;source/LCD/LCD.c: 77:     _delay((unsigned long)((4)*(4000000UL/4000.0)));
  2715     062F  3006               	movlw	6
  2716     0630  1283               	bcf	3,5	;RP0=0, select bank0
  2717     0631  1303               	bcf	3,6	;RP1=0, select bank0
  2718     0632  00A4               	movwf	??_LCD_Write+1
  2719     0633  3030               	movlw	48
  2720     0634  00A3               	movwf	??_LCD_Write
  2721     0635                     u1847:
  2722     0635  0BA3               	decfsz	??_LCD_Write,f
  2723     0636  2E35               	goto	u1847
  2724     0637  0BA4               	decfsz	??_LCD_Write+1,f
  2725     0638  2E35               	goto	u1847
  2726                           
  2727                           ;source/LCD/LCD.c: 78:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2728     0639  3001               	movlw	1
  2729     063A  1283               	bcf	3,5	;RP0=0, select bank0
  2730     063B  1303               	bcf	3,6	;RP1=0, select bank0
  2731     063C  00A3               	movwf	??_LCD_Write
  2732     063D  0C36               	rrf	_lcd+2,w
  2733     063E  00A4               	movwf	??_LCD_Write+1
  2734     063F  0CA4               	rrf	??_LCD_Write+1,f
  2735     0640  0C24               	rrf	??_LCD_Write+1,w
  2736     0641  3907               	andlw	7
  2737     0642  3E01               	addlw	1
  2738     0643  2E46               	goto	u1044
  2739     0644                     u1045:
  2740     0644  1003               	clrc
  2741     0645  0DA3               	rlf	??_LCD_Write,f
  2742     0646                     u1044:
  2743     0646  3EFF               	addlw	-1
  2744     0647  1D03               	skipz
  2745     0648  2E44               	goto	u1045
  2746     0649  0823               	movf	??_LCD_Write,w
  2747     064A  3AFF               	xorlw	255
  2748     064B  00FF               	movwf	127
  2749     064C  0834               	movf	_lcd,w
  2750     064D  0084               	movwf	4
  2751     064E  1783               	bsf	3,7
  2752     064F  1C35               	btfss	_lcd+1,0
  2753     0650  1383               	bcf	3,7
  2754     0651  087F               	movf	127,w
  2755     0652  0580               	andwf	0,f
  2756     0653  0008               	return
  2757     0654                     __end_of_LCD_Write:
  2758                           
  2759                           	psect	text12
  2760     01C3                     __ptext12:	
  2761 ;; *************** function _LCD_Out *****************
  2762 ;; Defined at:
  2763 ;;		line 36 in file "source/LCD/LCD.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  c               1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  c               1    2[BANK0 ] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2772 ;; Tracked objects:
  2773 ;;		On entry : 300/0
  2774 ;;		On exit  : 300/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1
  2777 ;;      Params:         0       0       0
  2778 ;;      Locals:         0       1       0
  2779 ;;      Temps:          0       2       0
  2780 ;;      Totals:         0       3       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 2
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_LCD_Write
  2788 ;;		_LCD_PutChar
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792     01C3                     _LCD_Out:	
  2793                           ;psect for function _LCD_Out
  2794                           
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0+btemp+1]
  2798                           ;LCD_Out@c stored from wreg
  2799     01C3  00A2               	movwf	LCD_Out@c
  2800                           
  2801                           ;source/LCD/LCD.c: 38:     if ( c & 1 ){
  2802     01C4  1C22               	btfss	LCD_Out@c,0
  2803     01C5  29DB               	goto	l1948
  2804                           
  2805                           ;source/LCD/LCD.c: 39:         *(lcd.PORT) |= 1 << lcd.D4;
  2806     01C6  3001               	movlw	1
  2807     01C7  00A0               	movwf	??_LCD_Out
  2808     01C8  0837               	movf	_lcd+3,w
  2809     01C9  3907               	andlw	7
  2810     01CA  3E01               	addlw	1
  2811     01CB  29CE               	goto	u914
  2812     01CC                     u915:
  2813     01CC  1003               	clrc
  2814     01CD  0DA0               	rlf	??_LCD_Out,f
  2815     01CE                     u914:
  2816     01CE  3EFF               	addlw	-1
  2817     01CF  1D03               	skipz
  2818     01D0  29CC               	goto	u915
  2819     01D1  0820               	movf	??_LCD_Out,w
  2820     01D2  00FF               	movwf	127
  2821     01D3  0834               	movf	_lcd,w
  2822     01D4  0084               	movwf	4
  2823     01D5  1783               	bsf	3,7
  2824     01D6  1C35               	btfss	_lcd+1,0
  2825     01D7  1383               	bcf	3,7
  2826     01D8  087F               	movf	127,w
  2827     01D9  0480               	iorwf	0,f
  2828                           
  2829                           ;source/LCD/LCD.c: 40:     }
  2830     01DA  29F0               	goto	l1950
  2831     01DB                     l1948:
  2832                           
  2833                           ;source/LCD/LCD.c: 42:          *(lcd.PORT) &= ~(1 << lcd.D4);
  2834     01DB  3001               	movlw	1
  2835     01DC  00A0               	movwf	??_LCD_Out
  2836     01DD  0837               	movf	_lcd+3,w
  2837     01DE  3907               	andlw	7
  2838     01DF  3E01               	addlw	1
  2839     01E0  29E3               	goto	u924
  2840     01E1                     u925:
  2841     01E1  1003               	clrc
  2842     01E2  0DA0               	rlf	??_LCD_Out,f
  2843     01E3                     u924:
  2844     01E3  3EFF               	addlw	-1
  2845     01E4  1D03               	skipz
  2846     01E5  29E1               	goto	u925
  2847     01E6  0820               	movf	??_LCD_Out,w
  2848     01E7  3AFF               	xorlw	255
  2849     01E8  00FF               	movwf	127
  2850     01E9  0834               	movf	_lcd,w
  2851     01EA  0084               	movwf	4
  2852     01EB  1783               	bsf	3,7
  2853     01EC  1C35               	btfss	_lcd+1,0
  2854     01ED  1383               	bcf	3,7
  2855     01EE  087F               	movf	127,w
  2856     01EF  0580               	andwf	0,f
  2857     01F0                     l1950:
  2858                           
  2859                           ;source/LCD/LCD.c: 45:     if ( c & 2 ) {
  2860     01F0  1CA2               	btfss	LCD_Out@c,1
  2861     01F1  2A0A               	goto	l1954
  2862                           
  2863                           ;source/LCD/LCD.c: 46:         *(lcd.PORT) |= 1 << lcd.D5;
  2864     01F2  3001               	movlw	1
  2865     01F3  00A0               	movwf	??_LCD_Out
  2866     01F4  0C37               	rrf	_lcd+3,w
  2867     01F5  00A1               	movwf	??_LCD_Out+1
  2868     01F6  0CA1               	rrf	??_LCD_Out+1,f
  2869     01F7  0C21               	rrf	??_LCD_Out+1,w
  2870     01F8  3907               	andlw	7
  2871     01F9  3E01               	addlw	1
  2872     01FA  29FD               	goto	u944
  2873     01FB                     u945:
  2874     01FB  1003               	clrc
  2875     01FC  0DA0               	rlf	??_LCD_Out,f
  2876     01FD                     u944:
  2877     01FD  3EFF               	addlw	-1
  2878     01FE  1D03               	skipz
  2879     01FF  29FB               	goto	u945
  2880     0200  0820               	movf	??_LCD_Out,w
  2881     0201  00FF               	movwf	127
  2882     0202  0834               	movf	_lcd,w
  2883     0203  0084               	movwf	4
  2884     0204  1783               	bsf	3,7
  2885     0205  1C35               	btfss	_lcd+1,0
  2886     0206  1383               	bcf	3,7
  2887     0207  087F               	movf	127,w
  2888     0208  0480               	iorwf	0,f
  2889                           
  2890                           ;source/LCD/LCD.c: 47:     }
  2891     0209  2A22               	goto	l1956
  2892     020A                     l1954:
  2893                           
  2894                           ;source/LCD/LCD.c: 49:         *(lcd.PORT) &= ~(1 << lcd.D5);
  2895     020A  3001               	movlw	1
  2896     020B  00A0               	movwf	??_LCD_Out
  2897     020C  0C37               	rrf	_lcd+3,w
  2898     020D  00A1               	movwf	??_LCD_Out+1
  2899     020E  0CA1               	rrf	??_LCD_Out+1,f
  2900     020F  0C21               	rrf	??_LCD_Out+1,w
  2901     0210  3907               	andlw	7
  2902     0211  3E01               	addlw	1
  2903     0212  2A15               	goto	u954
  2904     0213                     u955:
  2905     0213  1003               	clrc
  2906     0214  0DA0               	rlf	??_LCD_Out,f
  2907     0215                     u954:
  2908     0215  3EFF               	addlw	-1
  2909     0216  1D03               	skipz
  2910     0217  2A13               	goto	u955
  2911     0218  0820               	movf	??_LCD_Out,w
  2912     0219  3AFF               	xorlw	255
  2913     021A  00FF               	movwf	127
  2914     021B  0834               	movf	_lcd,w
  2915     021C  0084               	movwf	4
  2916     021D  1783               	bsf	3,7
  2917     021E  1C35               	btfss	_lcd+1,0
  2918     021F  1383               	bcf	3,7
  2919     0220  087F               	movf	127,w
  2920     0221  0580               	andwf	0,f
  2921     0222                     l1956:
  2922                           
  2923                           ;source/LCD/LCD.c: 52:     if ( c & 4 ) {
  2924     0222  1D22               	btfss	LCD_Out@c,2
  2925     0223  2A39               	goto	l1960
  2926                           
  2927                           ;source/LCD/LCD.c: 53:         *(lcd.PORT) |= 1 << lcd.D6;
  2928     0224  3001               	movlw	1
  2929     0225  00A0               	movwf	??_LCD_Out
  2930     0226  0838               	movf	_lcd+4,w
  2931     0227  3907               	andlw	7
  2932     0228  3E01               	addlw	1
  2933     0229  2A2C               	goto	u974
  2934     022A                     u975:
  2935     022A  1003               	clrc
  2936     022B  0DA0               	rlf	??_LCD_Out,f
  2937     022C                     u974:
  2938     022C  3EFF               	addlw	-1
  2939     022D  1D03               	skipz
  2940     022E  2A2A               	goto	u975
  2941     022F  0820               	movf	??_LCD_Out,w
  2942     0230  00FF               	movwf	127
  2943     0231  0834               	movf	_lcd,w
  2944     0232  0084               	movwf	4
  2945     0233  1783               	bsf	3,7
  2946     0234  1C35               	btfss	_lcd+1,0
  2947     0235  1383               	bcf	3,7
  2948     0236  087F               	movf	127,w
  2949     0237  0480               	iorwf	0,f
  2950                           
  2951                           ;source/LCD/LCD.c: 54:     }
  2952     0238  2A4E               	goto	l1962
  2953     0239                     l1960:
  2954                           
  2955                           ;source/LCD/LCD.c: 56:         *(lcd.PORT) &= ~(1 << lcd.D6);
  2956     0239  3001               	movlw	1
  2957     023A  00A0               	movwf	??_LCD_Out
  2958     023B  0838               	movf	_lcd+4,w
  2959     023C  3907               	andlw	7
  2960     023D  3E01               	addlw	1
  2961     023E  2A41               	goto	u984
  2962     023F                     u985:
  2963     023F  1003               	clrc
  2964     0240  0DA0               	rlf	??_LCD_Out,f
  2965     0241                     u984:
  2966     0241  3EFF               	addlw	-1
  2967     0242  1D03               	skipz
  2968     0243  2A3F               	goto	u985
  2969     0244  0820               	movf	??_LCD_Out,w
  2970     0245  3AFF               	xorlw	255
  2971     0246  00FF               	movwf	127
  2972     0247  0834               	movf	_lcd,w
  2973     0248  0084               	movwf	4
  2974     0249  1783               	bsf	3,7
  2975     024A  1C35               	btfss	_lcd+1,0
  2976     024B  1383               	bcf	3,7
  2977     024C  087F               	movf	127,w
  2978     024D  0580               	andwf	0,f
  2979     024E                     l1962:
  2980                           
  2981                           ;source/LCD/LCD.c: 59:     if ( c & 8 ) {
  2982     024E  1DA2               	btfss	LCD_Out@c,3
  2983     024F  2A68               	goto	l1966
  2984                           
  2985                           ;source/LCD/LCD.c: 60:          *(lcd.PORT) |= 1 << lcd.D7;
  2986     0250  3001               	movlw	1
  2987     0251  00A0               	movwf	??_LCD_Out
  2988     0252  0C38               	rrf	_lcd+4,w
  2989     0253  00A1               	movwf	??_LCD_Out+1
  2990     0254  0CA1               	rrf	??_LCD_Out+1,f
  2991     0255  0C21               	rrf	??_LCD_Out+1,w
  2992     0256  3907               	andlw	7
  2993     0257  3E01               	addlw	1
  2994     0258  2A5B               	goto	u1004
  2995     0259                     u1005:
  2996     0259  1003               	clrc
  2997     025A  0DA0               	rlf	??_LCD_Out,f
  2998     025B                     u1004:
  2999     025B  3EFF               	addlw	-1
  3000     025C  1D03               	skipz
  3001     025D  2A59               	goto	u1005
  3002     025E  0820               	movf	??_LCD_Out,w
  3003     025F  00FF               	movwf	127
  3004     0260  0834               	movf	_lcd,w
  3005     0261  0084               	movwf	4
  3006     0262  1783               	bsf	3,7
  3007     0263  1C35               	btfss	_lcd+1,0
  3008     0264  1383               	bcf	3,7
  3009     0265  087F               	movf	127,w
  3010     0266  0480               	iorwf	0,f
  3011                           
  3012                           ;source/LCD/LCD.c: 61:     }
  3013     0267  0008               	return
  3014     0268                     l1966:
  3015                           
  3016                           ;source/LCD/LCD.c: 63:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3017     0268  3001               	movlw	1
  3018     0269  00A0               	movwf	??_LCD_Out
  3019     026A  0C38               	rrf	_lcd+4,w
  3020     026B  00A1               	movwf	??_LCD_Out+1
  3021     026C  0CA1               	rrf	??_LCD_Out+1,f
  3022     026D  0C21               	rrf	??_LCD_Out+1,w
  3023     026E  3907               	andlw	7
  3024     026F  3E01               	addlw	1
  3025     0270  2A73               	goto	u1014
  3026     0271                     u1015:
  3027     0271  1003               	clrc
  3028     0272  0DA0               	rlf	??_LCD_Out,f
  3029     0273                     u1014:
  3030     0273  3EFF               	addlw	-1
  3031     0274  1D03               	skipz
  3032     0275  2A71               	goto	u1015
  3033     0276  0820               	movf	??_LCD_Out,w
  3034     0277  3AFF               	xorlw	255
  3035     0278  00FF               	movwf	127
  3036     0279  0834               	movf	_lcd,w
  3037     027A  0084               	movwf	4
  3038     027B  1783               	bsf	3,7
  3039     027C  1C35               	btfss	_lcd+1,0
  3040     027D  1383               	bcf	3,7
  3041     027E  087F               	movf	127,w
  3042     027F  0580               	andwf	0,f
  3043     0280  0008               	return
  3044     0281                     __end_of_LCD_Out:
  3045                           
  3046                           	psect	text13
  3047     04AF                     __ptext13:	
  3048 ;; *************** function _DIO_setPinValue *****************
  3049 ;; Defined at:
  3050 ;;		line 146 in file "source/DIO/DIO.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  port            1    wreg     enum E1232
  3053 ;;  pin             1    0[BANK0 ] enum E1237
  3054 ;;  value           1    1[BANK0 ] unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  port            1    4[BANK0 ] enum E1232
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3061 ;; Tracked objects:
  3062 ;;		On entry : 300/0
  3063 ;;		On exit  : 300/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1
  3066 ;;      Params:         0       2       0
  3067 ;;      Locals:         0       1       0
  3068 ;;      Temps:          0       2       0
  3069 ;;      Totals:         0       5       0
  3070 ;;Total ram usage:        5 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_VM_Init
  3077 ;;		_VM_Mode_DispenseDrink
  3078 ;;		_VM_Mode_DispenseChange
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082     04AF                     _DIO_setPinValue:	
  3083                           ;psect for function _DIO_setPinValue
  3084                           
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _DIO_setPinValue: [wreg-fsr0h+status,2+status,0+btemp+1]
  3088                           ;DIO_setPinValue@port stored from wreg
  3089     04AF  00A4               	movwf	DIO_setPinValue@port
  3090                           
  3091                           ;source/DIO/DIO.c: 146: void DIO_setPinValue(DIO_port_e port, DIO_pin_e pin, unsigned ch
      +                          ar value);source/DIO/DIO.c: 147: {;source/DIO/DIO.c: 149:     switch(port)
  3092     04B0  2D11               	goto	l2172
  3093     04B1                     l2152:
  3094                           
  3095                           ;source/DIO/DIO.c: 152:             if(value == 0)
  3096     04B1  0821               	movf	DIO_setPinValue@value,w
  3097     04B2  1D03               	btfss	3,2
  3098     04B3  2CC3               	goto	l2156
  3099                           
  3100                           ;source/DIO/DIO.c: 153:                 PORTA &= ~(1 << pin);
  3101     04B4  3001               	movlw	1
  3102     04B5  00A2               	movwf	??_DIO_setPinValue
  3103     04B6  0A20               	incf	DIO_setPinValue@pin,w
  3104     04B7  2CBA               	goto	u1354
  3105     04B8                     u1355:
  3106     04B8  1003               	clrc
  3107     04B9  0DA2               	rlf	??_DIO_setPinValue,f
  3108     04BA                     u1354:
  3109     04BA  3EFF               	addlw	-1
  3110     04BB  1D03               	skipz
  3111     04BC  2CB8               	goto	u1355
  3112     04BD  0822               	movf	??_DIO_setPinValue,w
  3113     04BE  3AFF               	xorlw	255
  3114     04BF  00FF               	movwf	127
  3115     04C0  087F               	movf	127,w
  3116     04C1  0585               	andwf	5,f	;volatile
  3117     04C2  0008               	return
  3118     04C3                     l2156:
  3119                           
  3120                           ;source/DIO/DIO.c: 155:                 PORTA |= (1 << pin);
  3121     04C3  3001               	movlw	1
  3122     04C4  00A2               	movwf	??_DIO_setPinValue
  3123     04C5  0A20               	incf	DIO_setPinValue@pin,w
  3124     04C6  2CC9               	goto	u1364
  3125     04C7                     u1365:
  3126     04C7  1003               	clrc
  3127     04C8  0DA2               	rlf	??_DIO_setPinValue,f
  3128     04C9                     u1364:
  3129     04C9  3EFF               	addlw	-1
  3130     04CA  1D03               	skipz
  3131     04CB  2CC7               	goto	u1365
  3132     04CC  0822               	movf	??_DIO_setPinValue,w
  3133     04CD  00FF               	movwf	127
  3134     04CE  087F               	movf	127,w
  3135     04CF  0485               	iorwf	5,f	;volatile
  3136     04D0  0008               	return
  3137     04D1                     l2158:
  3138                           
  3139                           ;source/DIO/DIO.c: 158:             if(value == 0)
  3140     04D1  0821               	movf	DIO_setPinValue@value,w
  3141     04D2  1D03               	btfss	3,2
  3142     04D3  2CE3               	goto	l2162
  3143                           
  3144                           ;source/DIO/DIO.c: 159:                 PORTB &= ~(1 << pin);
  3145     04D4  3001               	movlw	1
  3146     04D5  00A2               	movwf	??_DIO_setPinValue
  3147     04D6  0A20               	incf	DIO_setPinValue@pin,w
  3148     04D7  2CDA               	goto	u1384
  3149     04D8                     u1385:
  3150     04D8  1003               	clrc
  3151     04D9  0DA2               	rlf	??_DIO_setPinValue,f
  3152     04DA                     u1384:
  3153     04DA  3EFF               	addlw	-1
  3154     04DB  1D03               	skipz
  3155     04DC  2CD8               	goto	u1385
  3156     04DD  0822               	movf	??_DIO_setPinValue,w
  3157     04DE  3AFF               	xorlw	255
  3158     04DF  00FF               	movwf	127
  3159     04E0  087F               	movf	127,w
  3160     04E1  0586               	andwf	6,f	;volatile
  3161     04E2  0008               	return
  3162     04E3                     l2162:
  3163                           
  3164                           ;source/DIO/DIO.c: 161:                 PORTB |= (1 << pin);
  3165     04E3  3001               	movlw	1
  3166     04E4  00A2               	movwf	??_DIO_setPinValue
  3167     04E5  0A20               	incf	DIO_setPinValue@pin,w
  3168     04E6  2CE9               	goto	u1394
  3169     04E7                     u1395:
  3170     04E7  1003               	clrc
  3171     04E8  0DA2               	rlf	??_DIO_setPinValue,f
  3172     04E9                     u1394:
  3173     04E9  3EFF               	addlw	-1
  3174     04EA  1D03               	skipz
  3175     04EB  2CE7               	goto	u1395
  3176     04EC  0822               	movf	??_DIO_setPinValue,w
  3177     04ED  00FF               	movwf	127
  3178     04EE  087F               	movf	127,w
  3179     04EF  0486               	iorwf	6,f	;volatile
  3180     04F0  0008               	return
  3181     04F1                     l2164:
  3182                           
  3183                           ;source/DIO/DIO.c: 164:             if(value == 0)
  3184     04F1  0821               	movf	DIO_setPinValue@value,w
  3185     04F2  1D03               	btfss	3,2
  3186     04F3  2D03               	goto	l2168
  3187                           
  3188                           ;source/DIO/DIO.c: 165:                 PORTC &= ~(1 << pin);
  3189     04F4  3001               	movlw	1
  3190     04F5  00A2               	movwf	??_DIO_setPinValue
  3191     04F6  0A20               	incf	DIO_setPinValue@pin,w
  3192     04F7  2CFA               	goto	u1414
  3193     04F8                     u1415:
  3194     04F8  1003               	clrc
  3195     04F9  0DA2               	rlf	??_DIO_setPinValue,f
  3196     04FA                     u1414:
  3197     04FA  3EFF               	addlw	-1
  3198     04FB  1D03               	skipz
  3199     04FC  2CF8               	goto	u1415
  3200     04FD  0822               	movf	??_DIO_setPinValue,w
  3201     04FE  3AFF               	xorlw	255
  3202     04FF  00FF               	movwf	127
  3203     0500  087F               	movf	127,w
  3204     0501  0587               	andwf	7,f	;volatile
  3205     0502  0008               	return
  3206     0503                     l2168:
  3207                           
  3208                           ;source/DIO/DIO.c: 167:                 PORTC |= (1 << pin);
  3209     0503  3001               	movlw	1
  3210     0504  00A2               	movwf	??_DIO_setPinValue
  3211     0505  0A20               	incf	DIO_setPinValue@pin,w
  3212     0506  2D09               	goto	u1424
  3213     0507                     u1425:
  3214     0507  1003               	clrc
  3215     0508  0DA2               	rlf	??_DIO_setPinValue,f
  3216     0509                     u1424:
  3217     0509  3EFF               	addlw	-1
  3218     050A  1D03               	skipz
  3219     050B  2D07               	goto	u1425
  3220     050C  0822               	movf	??_DIO_setPinValue,w
  3221     050D  00FF               	movwf	127
  3222     050E  087F               	movf	127,w
  3223     050F  0487               	iorwf	7,f	;volatile
  3224     0510  0008               	return
  3225     0511                     l2172:
  3226     0511  0824               	movf	DIO_setPinValue@port,w
  3227     0512  00A2               	movwf	??_DIO_setPinValue
  3228     0513  01A3               	clrf	??_DIO_setPinValue+1
  3229                           
  3230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3231                           ; Switch size 1, requested type "simple"
  3232                           ; Number of cases is 1, Range of values is 0 to 0
  3233                           ; switch strategies available:
  3234                           ; Name         Instructions Cycles
  3235                           ; simple_byte            4     3 (average)
  3236                           ; direct_byte            7     6 (fixed)
  3237                           ; jumptable            260     6 (fixed)
  3238                           ;	Chosen strategy is simple_byte
  3239     0514  0823               	movf	??_DIO_setPinValue+1,w
  3240     0515  3A00               	xorlw	0	; case 0
  3241     0516  1903               	skipnz
  3242     0517  2D19               	goto	l2844
  3243     0518  2D24               	goto	l144
  3244     0519                     l2844:
  3245                           
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 3, Range of values is 0 to 2
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; direct_byte            9     6 (fixed)
  3251                           ; simple_byte           10     6 (average)
  3252                           ; jumptable            260     6 (fixed)
  3253                           ;	Chosen strategy is simple_byte
  3254     0519  0822               	movf	??_DIO_setPinValue,w
  3255     051A  3A00               	xorlw	0	; case 0
  3256     051B  1903               	skipnz
  3257     051C  2CB1               	goto	l2152
  3258     051D  3A01               	xorlw	1	; case 1
  3259     051E  1903               	skipnz
  3260     051F  2CD1               	goto	l2158
  3261     0520  3A03               	xorlw	3	; case 2
  3262     0521  1903               	skipnz
  3263     0522  2CF1               	goto	l2164
  3264     0523  2D24               	goto	l144
  3265     0524                     l144:
  3266     0524  0008               	return
  3267     0525                     __end_of_DIO_setPinValue:
  3268                           
  3269                           	psect	text14
  3270     0029                     __ptext14:	
  3271 ;; *************** function _DIO_setPinMode *****************
  3272 ;; Defined at:
  3273 ;;		line 73 in file "source/DIO/DIO.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  port            1    wreg     enum E1232
  3276 ;;  pin             1    5[BANK0 ] enum E1237
  3277 ;;  mode            1    6[BANK0 ] enum E1247
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  port            1    9[BANK0 ] enum E1232
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 300/0
  3286 ;;		On exit  : 200/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1
  3289 ;;      Params:         0       2       0
  3290 ;;      Locals:         0       1       0
  3291 ;;      Temps:          0       2       0
  3292 ;;      Totals:         0       5       0
  3293 ;;Total ram usage:        5 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 3
  3296 ;; This function calls:
  3297 ;;		_DIO_setPinDir
  3298 ;; This function is called by:
  3299 ;;		_VM_Init
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     0029                     _DIO_setPinMode:	
  3304                           ;psect for function _DIO_setPinMode
  3305                           
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _DIO_setPinMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3309                           ;DIO_setPinMode@port stored from wreg
  3310     0029  00A9               	movwf	DIO_setPinMode@port
  3311                           
  3312                           ;source/DIO/DIO.c: 73: void DIO_setPinMode(DIO_port_e port, DIO_pin_e pin, DIO_mode_e mo
      +                          de);source/DIO/DIO.c: 74: {;source/DIO/DIO.c: 76:     switch(port)
  3313     002A  28D9               	goto	l2132
  3314     002B                     l2072:
  3315                           
  3316                           ;source/DIO/DIO.c: 79:                 ANSEL &= ~(1<<pin);
  3317     002B  3001               	movlw	1
  3318     002C  00A7               	movwf	??_DIO_setPinMode
  3319     002D  0A25               	incf	DIO_setPinMode@pin,w
  3320     002E  2831               	goto	u1264
  3321     002F                     u1265:
  3322     002F  1003               	clrc
  3323     0030  0DA7               	rlf	??_DIO_setPinMode,f
  3324     0031                     u1264:
  3325     0031  3EFF               	addlw	-1
  3326     0032  1D03               	skipz
  3327     0033  282F               	goto	u1265
  3328     0034  0827               	movf	??_DIO_setPinMode,w
  3329     0035  3AFF               	xorlw	255
  3330     0036  00FF               	movwf	127
  3331     0037  087F               	movf	127,w
  3332     0038  1683               	bsf	3,5	;RP0=1, select bank3
  3333     0039  1703               	bsf	3,6	;RP1=1, select bank3
  3334     003A  0588               	andwf	8,f	;volatile
  3335                           
  3336                           ;source/DIO/DIO.c: 80:             switch(mode)
  3337     003B  2849               	goto	l2080
  3338     003C                     l2074:
  3339                           
  3340                           ;source/DIO/DIO.c: 83:                     DIO_setPinDir(port, pin, 0);
  3341     003C  0825               	movf	DIO_setPinMode@pin,w
  3342     003D  00A0               	movwf	DIO_setPinDir@pin
  3343     003E  01A1               	clrf	DIO_setPinDir@direction
  3344     003F  0829               	movf	DIO_setPinMode@port,w
  3345     0040  2433               	fcall	_DIO_setPinDir
  3346                           
  3347                           ;source/DIO/DIO.c: 84:                     break;
  3348     0041  0008               	return
  3349     0042                     l2076:
  3350                           
  3351                           ;source/DIO/DIO.c: 86:                     DIO_setPinDir(port, pin, 1);
  3352     0042  0825               	movf	DIO_setPinMode@pin,w
  3353     0043  00A0               	movwf	DIO_setPinDir@pin
  3354     0044  01A1               	clrf	DIO_setPinDir@direction
  3355     0045  0AA1               	incf	DIO_setPinDir@direction,f
  3356     0046  0829               	movf	DIO_setPinMode@port,w
  3357     0047  2433               	fcall	_DIO_setPinDir
  3358                           
  3359                           ;source/DIO/DIO.c: 87:                     break;
  3360     0048  0008               	return
  3361     0049                     l2080:
  3362     0049  1283               	bcf	3,5	;RP0=0, select bank0
  3363     004A  1303               	bcf	3,6	;RP1=0, select bank0
  3364     004B  0826               	movf	DIO_setPinMode@mode,w
  3365     004C  00A7               	movwf	??_DIO_setPinMode
  3366     004D  01A8               	clrf	??_DIO_setPinMode+1
  3367                           
  3368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3369                           ; Switch size 1, requested type "simple"
  3370                           ; Number of cases is 1, Range of values is 0 to 0
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte            4     3 (average)
  3374                           ; direct_byte            7     6 (fixed)
  3375                           ; jumptable            260     6 (fixed)
  3376                           ;	Chosen strategy is simple_byte
  3377     004E  0828               	movf	??_DIO_setPinMode+1,w
  3378     004F  3A00               	xorlw	0	; case 0
  3379     0050  1903               	skipnz
  3380     0051  2853               	goto	l2846
  3381     0052  28EC               	goto	l129
  3382     0053                     l2846:
  3383                           
  3384                           ; Switch size 1, requested type "simple"
  3385                           ; Number of cases is 2, Range of values is 10 to 11
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte            7     4 (average)
  3389                           ; direct_byte           11     9 (fixed)
  3390                           ; jumptable            263     9 (fixed)
  3391                           ;	Chosen strategy is simple_byte
  3392     0053  0827               	movf	??_DIO_setPinMode,w
  3393     0054  3A0A               	xorlw	10	; case 10
  3394     0055  1903               	skipnz
  3395     0056  283C               	goto	l2074
  3396     0057  3A01               	xorlw	1	; case 11
  3397     0058  1903               	skipnz
  3398     0059  2842               	goto	l2076
  3399     005A  28EC               	goto	l129
  3400     005B                     l2082:
  3401                           
  3402                           ;source/DIO/DIO.c: 94:             if(pin == 0)
  3403     005B  0825               	movf	DIO_setPinMode@pin,w
  3404     005C  1D03               	btfss	3,2
  3405     005D  2860               	goto	l2086
  3406                           
  3407                           ;source/DIO/DIO.c: 95:                 ANSELH &= ~(1<<4);
  3408     005E  30EF               	movlw	239
  3409     005F  287C               	goto	L5
  3410     0060                     l2086:
  3411     0060  0325               	decf	DIO_setPinMode@pin,w
  3412     0061  1D03               	btfss	3,2
  3413     0062  2865               	goto	l2090
  3414                           
  3415                           ;source/DIO/DIO.c: 97:                 ANSELH &= ~(1<<2);
  3416     0063  30FB               	movlw	251
  3417     0064  287C               	goto	L5
  3418     0065                     l2090:
  3419     0065  3002               	movlw	2
  3420     0066  0625               	xorwf	DIO_setPinMode@pin,w
  3421     0067  1D03               	btfss	3,2
  3422     0068  286B               	goto	l2094
  3423                           
  3424                           ;source/DIO/DIO.c: 99:                 ANSELH &= ~(1<<0);
  3425     0069  30FE               	movlw	254
  3426     006A  287C               	goto	L5
  3427     006B                     l2094:
  3428     006B  3003               	movlw	3
  3429     006C  0625               	xorwf	DIO_setPinMode@pin,w
  3430     006D  1D03               	btfss	3,2
  3431     006E  2871               	goto	l2098
  3432                           
  3433                           ;source/DIO/DIO.c: 101:                 ANSELH &= ~(1<<1);
  3434     006F  30FD               	movlw	253
  3435     0070  287C               	goto	L5
  3436     0071                     l2098:
  3437     0071  3004               	movlw	4
  3438     0072  0625               	xorwf	DIO_setPinMode@pin,w
  3439     0073  1D03               	btfss	3,2
  3440     0074  2877               	goto	l2102
  3441                           
  3442                           ;source/DIO/DIO.c: 103:                 ANSELH &= ~(1<<3);
  3443     0075  30F7               	movlw	247
  3444     0076  287C               	goto	L5
  3445     0077                     l2102:
  3446     0077  3005               	movlw	5
  3447     0078  0625               	xorwf	DIO_setPinMode@pin,w
  3448     0079  1D03               	btfss	3,2
  3449     007A  28A7               	goto	l2120
  3450                           
  3451                           ;source/DIO/DIO.c: 105:                 ANSELH &= ~(1<<5);
  3452     007B  30DF               	movlw	223
  3453     007C                     L5:
  3454     007C  00FF               	movwf	127
  3455     007D  087F               	movf	127,w
  3456     007E  1683               	bsf	3,5	;RP0=1, select bank3
  3457     007F  1703               	bsf	3,6	;RP1=1, select bank3
  3458     0080  0589               	andwf	9,f	;volatile
  3459     0081  28A7               	goto	l2120
  3460     0082                     l2106:
  3461                           
  3462                           ;source/DIO/DIO.c: 110:                     DIO_setPinDir(port, pin, 0);
  3463     0082  0825               	movf	DIO_setPinMode@pin,w
  3464     0083  00A0               	movwf	DIO_setPinDir@pin
  3465     0084  01A1               	clrf	DIO_setPinDir@direction
  3466     0085  0829               	movf	DIO_setPinMode@port,w
  3467     0086  2433               	fcall	_DIO_setPinDir
  3468                           
  3469                           ;source/DIO/DIO.c: 111:                     break;
  3470     0087  0008               	return
  3471     0088                     l2108:
  3472                           
  3473                           ;source/DIO/DIO.c: 113:                     DIO_setPinDir(port, pin, 1);
  3474     0088  0825               	movf	DIO_setPinMode@pin,w
  3475     0089  00A0               	movwf	DIO_setPinDir@pin
  3476     008A  01A1               	clrf	DIO_setPinDir@direction
  3477     008B  0AA1               	incf	DIO_setPinDir@direction,f
  3478     008C  0829               	movf	DIO_setPinMode@port,w
  3479     008D  2433               	fcall	_DIO_setPinDir
  3480                           
  3481                           ;source/DIO/DIO.c: 114:                     break;
  3482     008E  0008               	return
  3483     008F                     l2110:
  3484                           
  3485                           ;source/DIO/DIO.c: 117:                     DIO_setPinDir(port, pin, 1);
  3486     008F  0825               	movf	DIO_setPinMode@pin,w
  3487     0090  00A0               	movwf	DIO_setPinDir@pin
  3488     0091  01A1               	clrf	DIO_setPinDir@direction
  3489     0092  0AA1               	incf	DIO_setPinDir@direction,f
  3490     0093  0829               	movf	DIO_setPinMode@port,w
  3491     0094  2433               	fcall	_DIO_setPinDir
  3492                           
  3493                           ;source/DIO/DIO.c: 118:                     IOCB |= 1<<pin;
  3494     0095  3001               	movlw	1
  3495     0096  1283               	bcf	3,5	;RP0=0, select bank0
  3496     0097  00A7               	movwf	??_DIO_setPinMode
  3497     0098  0A25               	incf	DIO_setPinMode@pin,w
  3498     0099  289C               	goto	u1334
  3499     009A                     u1335:
  3500     009A  1003               	clrc
  3501     009B  0DA7               	rlf	??_DIO_setPinMode,f
  3502     009C                     u1334:
  3503     009C  3EFF               	addlw	-1
  3504     009D  1D03               	skipz
  3505     009E  289A               	goto	u1335
  3506     009F  0827               	movf	??_DIO_setPinMode,w
  3507     00A0  00FF               	movwf	127
  3508     00A1  087F               	movf	127,w
  3509     00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3510     00A3  0496               	iorwf	22,f	;volatile
  3511                           
  3512                           ;source/DIO/DIO.c: 119:                     INTCONbits.RBIF = 0;
  3513     00A4  100B               	bcf	11,0	;volatile
  3514                           
  3515                           ;source/DIO/DIO.c: 120:                     INTCONbits.RBIE = 1;
  3516     00A5  158B               	bsf	11,3	;volatile
  3517                           
  3518                           ;source/DIO/DIO.c: 121:                     break;
  3519     00A6  0008               	return
  3520     00A7                     l2120:
  3521     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  3522     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  3523     00A9  0826               	movf	DIO_setPinMode@mode,w
  3524     00AA  00A7               	movwf	??_DIO_setPinMode
  3525     00AB  01A8               	clrf	??_DIO_setPinMode+1
  3526                           
  3527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3528                           ; Switch size 1, requested type "simple"
  3529                           ; Number of cases is 1, Range of values is 0 to 0
  3530                           ; switch strategies available:
  3531                           ; Name         Instructions Cycles
  3532                           ; simple_byte            4     3 (average)
  3533                           ; direct_byte            7     6 (fixed)
  3534                           ; jumptable            260     6 (fixed)
  3535                           ;	Chosen strategy is simple_byte
  3536     00AC  0828               	movf	??_DIO_setPinMode+1,w
  3537     00AD  3A00               	xorlw	0	; case 0
  3538     00AE  1903               	skipnz
  3539     00AF  28B1               	goto	l2848
  3540     00B0  28EC               	goto	l129
  3541     00B1                     l2848:
  3542                           
  3543                           ; Switch size 1, requested type "simple"
  3544                           ; Number of cases is 3, Range of values is 10 to 12
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; simple_byte           10     6 (average)
  3548                           ; direct_byte           12     9 (fixed)
  3549                           ; jumptable            263     9 (fixed)
  3550                           ;	Chosen strategy is simple_byte
  3551     00B1  0827               	movf	??_DIO_setPinMode,w
  3552     00B2  3A0A               	xorlw	10	; case 10
  3553     00B3  1903               	skipnz
  3554     00B4  2882               	goto	l2106
  3555     00B5  3A01               	xorlw	1	; case 11
  3556     00B6  1903               	skipnz
  3557     00B7  2888               	goto	l2108
  3558     00B8  3A07               	xorlw	7	; case 12
  3559     00B9  1903               	skipnz
  3560     00BA  288F               	goto	l2110
  3561     00BB  28EC               	goto	l129
  3562     00BC                     l2122:
  3563                           
  3564                           ;source/DIO/DIO.c: 130:                     DIO_setPinDir(port, pin, 0);
  3565     00BC  0825               	movf	DIO_setPinMode@pin,w
  3566     00BD  00A0               	movwf	DIO_setPinDir@pin
  3567     00BE  01A1               	clrf	DIO_setPinDir@direction
  3568     00BF  0829               	movf	DIO_setPinMode@port,w
  3569     00C0  2433               	fcall	_DIO_setPinDir
  3570                           
  3571                           ;source/DIO/DIO.c: 131:                     break;
  3572     00C1  0008               	return
  3573     00C2                     l2124:
  3574                           
  3575                           ;source/DIO/DIO.c: 133:                     DIO_setPinDir(port, pin, 1);
  3576     00C2  0825               	movf	DIO_setPinMode@pin,w
  3577     00C3  00A0               	movwf	DIO_setPinDir@pin
  3578     00C4  01A1               	clrf	DIO_setPinDir@direction
  3579     00C5  0AA1               	incf	DIO_setPinDir@direction,f
  3580     00C6  0829               	movf	DIO_setPinMode@port,w
  3581     00C7  2433               	fcall	_DIO_setPinDir
  3582                           
  3583                           ;source/DIO/DIO.c: 134:                     break;
  3584     00C8  0008               	return
  3585     00C9                     l2128:
  3586     00C9  0826               	movf	DIO_setPinMode@mode,w
  3587     00CA  00A7               	movwf	??_DIO_setPinMode
  3588     00CB  01A8               	clrf	??_DIO_setPinMode+1
  3589                           
  3590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3591                           ; Switch size 1, requested type "simple"
  3592                           ; Number of cases is 1, Range of values is 0 to 0
  3593                           ; switch strategies available:
  3594                           ; Name         Instructions Cycles
  3595                           ; simple_byte            4     3 (average)
  3596                           ; direct_byte            7     6 (fixed)
  3597                           ; jumptable            260     6 (fixed)
  3598                           ;	Chosen strategy is simple_byte
  3599     00CC  0828               	movf	??_DIO_setPinMode+1,w
  3600     00CD  3A00               	xorlw	0	; case 0
  3601     00CE  1903               	skipnz
  3602     00CF  28D1               	goto	l2850
  3603     00D0  28EC               	goto	l129
  3604     00D1                     l2850:
  3605                           
  3606                           ; Switch size 1, requested type "simple"
  3607                           ; Number of cases is 2, Range of values is 10 to 11
  3608                           ; switch strategies available:
  3609                           ; Name         Instructions Cycles
  3610                           ; simple_byte            7     4 (average)
  3611                           ; direct_byte           11     9 (fixed)
  3612                           ; jumptable            263     9 (fixed)
  3613                           ;	Chosen strategy is simple_byte
  3614     00D1  0827               	movf	??_DIO_setPinMode,w
  3615     00D2  3A0A               	xorlw	10	; case 10
  3616     00D3  1903               	skipnz
  3617     00D4  28BC               	goto	l2122
  3618     00D5  3A01               	xorlw	1	; case 11
  3619     00D6  1903               	skipnz
  3620     00D7  28C2               	goto	l2124
  3621     00D8  28EC               	goto	l129
  3622     00D9                     l2132:
  3623     00D9  0829               	movf	DIO_setPinMode@port,w
  3624     00DA  00A7               	movwf	??_DIO_setPinMode
  3625     00DB  01A8               	clrf	??_DIO_setPinMode+1
  3626                           
  3627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3628                           ; Switch size 1, requested type "simple"
  3629                           ; Number of cases is 1, Range of values is 0 to 0
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte            4     3 (average)
  3633                           ; direct_byte            7     6 (fixed)
  3634                           ; jumptable            260     6 (fixed)
  3635                           ;	Chosen strategy is simple_byte
  3636     00DC  0828               	movf	??_DIO_setPinMode+1,w
  3637     00DD  3A00               	xorlw	0	; case 0
  3638     00DE  1903               	skipnz
  3639     00DF  28E1               	goto	l2852
  3640     00E0  28EC               	goto	l129
  3641     00E1                     l2852:
  3642                           
  3643                           ; Switch size 1, requested type "simple"
  3644                           ; Number of cases is 3, Range of values is 0 to 2
  3645                           ; switch strategies available:
  3646                           ; Name         Instructions Cycles
  3647                           ; direct_byte            9     6 (fixed)
  3648                           ; simple_byte           10     6 (average)
  3649                           ; jumptable            260     6 (fixed)
  3650                           ;	Chosen strategy is simple_byte
  3651     00E1  0827               	movf	??_DIO_setPinMode,w
  3652     00E2  3A00               	xorlw	0	; case 0
  3653     00E3  1903               	skipnz
  3654     00E4  282B               	goto	l2072
  3655     00E5  3A01               	xorlw	1	; case 1
  3656     00E6  1903               	skipnz
  3657     00E7  285B               	goto	l2082
  3658     00E8  3A03               	xorlw	3	; case 2
  3659     00E9  1903               	skipnz
  3660     00EA  28C9               	goto	l2128
  3661     00EB  28EC               	goto	l129
  3662     00EC                     l129:
  3663     00EC  0008               	return
  3664     00ED                     __end_of_DIO_setPinMode:
  3665                           
  3666                           	psect	text15
  3667     0433                     __ptext15:	
  3668 ;; *************** function _DIO_setPinDir *****************
  3669 ;; Defined at:
  3670 ;;		line 40 in file "source/DIO/DIO.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  port            1    wreg     enum E1232
  3673 ;;  pin             1    0[BANK0 ] enum E1237
  3674 ;;  direction       1    1[BANK0 ] unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  port            1    4[BANK0 ] enum E1232
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3681 ;; Tracked objects:
  3682 ;;		On entry : 300/0
  3683 ;;		On exit  : 200/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1
  3686 ;;      Params:         0       2       0
  3687 ;;      Locals:         0       1       0
  3688 ;;      Temps:          0       2       0
  3689 ;;      Totals:         0       5       0
  3690 ;;Total ram usage:        5 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 2
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_DIO_setPinMode
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700     0433                     _DIO_setPinDir:	
  3701                           ;psect for function _DIO_setPinDir
  3702                           
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _DIO_setPinDir: [wreg-fsr0h+status,2+status,0+btemp+1]
  3706                           ;DIO_setPinDir@port stored from wreg
  3707     0433  00A4               	movwf	DIO_setPinDir@port
  3708                           
  3709                           ;source/DIO/DIO.c: 40: static void DIO_setPinDir(DIO_port_e port, DIO_pin_e pin, unsigne
      +                          d char direction);source/DIO/DIO.c: 41: {;source/DIO/DIO.c: 43:     switch(port)
  3710     0434  2C9B               	goto	l2016
  3711     0435                     l1996:
  3712                           
  3713                           ;source/DIO/DIO.c: 46:             if(direction == 0)
  3714     0435  0821               	movf	DIO_setPinDir@direction,w
  3715     0436  1D03               	btfss	3,2
  3716     0437  2C48               	goto	l2000
  3717                           
  3718                           ;source/DIO/DIO.c: 47:                 TRISA &= ~(1 << pin);
  3719     0438  3001               	movlw	1
  3720     0439  00A2               	movwf	??_DIO_setPinDir
  3721     043A  0A20               	incf	DIO_setPinDir@pin,w
  3722     043B  2C3E               	goto	u1124
  3723     043C                     u1125:
  3724     043C  1003               	clrc
  3725     043D  0DA2               	rlf	??_DIO_setPinDir,f
  3726     043E                     u1124:
  3727     043E  3EFF               	addlw	-1
  3728     043F  1D03               	skipz
  3729     0440  2C3C               	goto	u1125
  3730     0441  0822               	movf	??_DIO_setPinDir,w
  3731     0442  3AFF               	xorlw	255
  3732     0443  00FF               	movwf	127
  3733     0444  087F               	movf	127,w
  3734     0445  1683               	bsf	3,5	;RP0=1, select bank1
  3735     0446  0585               	andwf	5,f	;volatile
  3736     0447  0008               	return
  3737     0448                     l2000:
  3738                           
  3739                           ;source/DIO/DIO.c: 49:                 TRISA |= (1 << pin);
  3740     0448  3001               	movlw	1
  3741     0449  00A2               	movwf	??_DIO_setPinDir
  3742     044A  0A20               	incf	DIO_setPinDir@pin,w
  3743     044B  2C4E               	goto	u1134
  3744     044C                     u1135:
  3745     044C  1003               	clrc
  3746     044D  0DA2               	rlf	??_DIO_setPinDir,f
  3747     044E                     u1134:
  3748     044E  3EFF               	addlw	-1
  3749     044F  1D03               	skipz
  3750     0450  2C4C               	goto	u1135
  3751     0451  0822               	movf	??_DIO_setPinDir,w
  3752     0452  00FF               	movwf	127
  3753     0453  087F               	movf	127,w
  3754     0454  1683               	bsf	3,5	;RP0=1, select bank1
  3755     0455  0485               	iorwf	5,f	;volatile
  3756     0456  0008               	return
  3757     0457                     l2002:
  3758                           
  3759                           ;source/DIO/DIO.c: 52:             if(direction == 0)
  3760     0457  0821               	movf	DIO_setPinDir@direction,w
  3761     0458  1D03               	btfss	3,2
  3762     0459  2C6A               	goto	l2006
  3763                           
  3764                           ;source/DIO/DIO.c: 53:                 TRISB &= ~(1 << pin);
  3765     045A  3001               	movlw	1
  3766     045B  00A2               	movwf	??_DIO_setPinDir
  3767     045C  0A20               	incf	DIO_setPinDir@pin,w
  3768     045D  2C60               	goto	u1154
  3769     045E                     u1155:
  3770     045E  1003               	clrc
  3771     045F  0DA2               	rlf	??_DIO_setPinDir,f
  3772     0460                     u1154:
  3773     0460  3EFF               	addlw	-1
  3774     0461  1D03               	skipz
  3775     0462  2C5E               	goto	u1155
  3776     0463  0822               	movf	??_DIO_setPinDir,w
  3777     0464  3AFF               	xorlw	255
  3778     0465  00FF               	movwf	127
  3779     0466  087F               	movf	127,w
  3780     0467  1683               	bsf	3,5	;RP0=1, select bank1
  3781     0468  0586               	andwf	6,f	;volatile
  3782     0469  0008               	return
  3783     046A                     l2006:
  3784                           
  3785                           ;source/DIO/DIO.c: 55:                 TRISB |= (1 << pin);
  3786     046A  3001               	movlw	1
  3787     046B  00A2               	movwf	??_DIO_setPinDir
  3788     046C  0A20               	incf	DIO_setPinDir@pin,w
  3789     046D  2C70               	goto	u1164
  3790     046E                     u1165:
  3791     046E  1003               	clrc
  3792     046F  0DA2               	rlf	??_DIO_setPinDir,f
  3793     0470                     u1164:
  3794     0470  3EFF               	addlw	-1
  3795     0471  1D03               	skipz
  3796     0472  2C6E               	goto	u1165
  3797     0473  0822               	movf	??_DIO_setPinDir,w
  3798     0474  00FF               	movwf	127
  3799     0475  087F               	movf	127,w
  3800     0476  1683               	bsf	3,5	;RP0=1, select bank1
  3801     0477  0486               	iorwf	6,f	;volatile
  3802     0478  0008               	return
  3803     0479                     l2008:
  3804                           
  3805                           ;source/DIO/DIO.c: 58:             if(direction == 0)
  3806     0479  0821               	movf	DIO_setPinDir@direction,w
  3807     047A  1D03               	btfss	3,2
  3808     047B  2C8C               	goto	l2012
  3809                           
  3810                           ;source/DIO/DIO.c: 59:                 TRISC &= ~(1 << pin);
  3811     047C  3001               	movlw	1
  3812     047D  00A2               	movwf	??_DIO_setPinDir
  3813     047E  0A20               	incf	DIO_setPinDir@pin,w
  3814     047F  2C82               	goto	u1184
  3815     0480                     u1185:
  3816     0480  1003               	clrc
  3817     0481  0DA2               	rlf	??_DIO_setPinDir,f
  3818     0482                     u1184:
  3819     0482  3EFF               	addlw	-1
  3820     0483  1D03               	skipz
  3821     0484  2C80               	goto	u1185
  3822     0485  0822               	movf	??_DIO_setPinDir,w
  3823     0486  3AFF               	xorlw	255
  3824     0487  00FF               	movwf	127
  3825     0488  087F               	movf	127,w
  3826     0489  1683               	bsf	3,5	;RP0=1, select bank1
  3827     048A  0587               	andwf	7,f	;volatile
  3828     048B  0008               	return
  3829     048C                     l2012:
  3830                           
  3831                           ;source/DIO/DIO.c: 61:                 TRISC |= (1 << pin);
  3832     048C  3001               	movlw	1
  3833     048D  00A2               	movwf	??_DIO_setPinDir
  3834     048E  0A20               	incf	DIO_setPinDir@pin,w
  3835     048F  2C92               	goto	u1194
  3836     0490                     u1195:
  3837     0490  1003               	clrc
  3838     0491  0DA2               	rlf	??_DIO_setPinDir,f
  3839     0492                     u1194:
  3840     0492  3EFF               	addlw	-1
  3841     0493  1D03               	skipz
  3842     0494  2C90               	goto	u1195
  3843     0495  0822               	movf	??_DIO_setPinDir,w
  3844     0496  00FF               	movwf	127
  3845     0497  087F               	movf	127,w
  3846     0498  1683               	bsf	3,5	;RP0=1, select bank1
  3847     0499  0487               	iorwf	7,f	;volatile
  3848     049A  0008               	return
  3849     049B                     l2016:
  3850     049B  0824               	movf	DIO_setPinDir@port,w
  3851     049C  00A2               	movwf	??_DIO_setPinDir
  3852     049D  01A3               	clrf	??_DIO_setPinDir+1
  3853                           
  3854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3855                           ; Switch size 1, requested type "simple"
  3856                           ; Number of cases is 1, Range of values is 0 to 0
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte            4     3 (average)
  3860                           ; direct_byte            7     6 (fixed)
  3861                           ; jumptable            260     6 (fixed)
  3862                           ;	Chosen strategy is simple_byte
  3863     049E  0823               	movf	??_DIO_setPinDir+1,w
  3864     049F  3A00               	xorlw	0	; case 0
  3865     04A0  1903               	skipnz
  3866     04A1  2CA3               	goto	l2854
  3867     04A2  2CAE               	goto	l94
  3868     04A3                     l2854:
  3869                           
  3870                           ; Switch size 1, requested type "simple"
  3871                           ; Number of cases is 3, Range of values is 0 to 2
  3872                           ; switch strategies available:
  3873                           ; Name         Instructions Cycles
  3874                           ; direct_byte            9     6 (fixed)
  3875                           ; simple_byte           10     6 (average)
  3876                           ; jumptable            260     6 (fixed)
  3877                           ;	Chosen strategy is simple_byte
  3878     04A3  0822               	movf	??_DIO_setPinDir,w
  3879     04A4  3A00               	xorlw	0	; case 0
  3880     04A5  1903               	skipnz
  3881     04A6  2C35               	goto	l1996
  3882     04A7  3A01               	xorlw	1	; case 1
  3883     04A8  1903               	skipnz
  3884     04A9  2C57               	goto	l2002
  3885     04AA  3A03               	xorlw	3	; case 2
  3886     04AB  1903               	skipnz
  3887     04AC  2C79               	goto	l2008
  3888     04AD  2CAE               	goto	l94
  3889     04AE                     l94:
  3890     04AE  0008               	return
  3891     04AF                     __end_of_DIO_setPinDir:
  3892                           
  3893                           	psect	text16
  3894     00ED                     __ptext16:	
  3895 ;; *************** function _ADC_Init *****************
  3896 ;; Defined at:
  3897 ;;		line 26 in file "source/ADC/ADC.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, btemp+1
  3906 ;; Tracked objects:
  3907 ;;		On entry : 200/0
  3908 ;;		On exit  : 300/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1
  3911 ;;      Params:         0       0       0
  3912 ;;      Locals:         0       0       0
  3913 ;;      Temps:          0       0       0
  3914 ;;      Totals:         0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used: 1
  3917 ;; Hardware stack levels required when called: 2
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_VM_Init
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     00ED                     _ADC_Init:	
  3926                           ;psect for function _ADC_Init
  3927                           
  3928                           
  3929                           ;source/ADC/ADC.c: 28:     ADCON0 &= ~(1 << 6);
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+btemp+1]
  3933     00ED  30BF               	movlw	191
  3934     00EE  00FF               	movwf	127
  3935     00EF  087F               	movf	127,w
  3936     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3937     00F1  059F               	andwf	31,f	;volatile
  3938                           
  3939                           ;source/ADC/ADC.c: 29:     ADCON0 |= (1 << 6);
  3940     00F2  171F               	bsf	31,6	;volatile
  3941                           
  3942                           ;source/ADC/ADC.c: 34:     ADCON1 = 0x80;
  3943     00F3  3080               	movlw	128
  3944     00F4  1683               	bsf	3,5	;RP0=1, select bank1
  3945     00F5  009F               	movwf	31	;volatile
  3946                           
  3947                           ;source/ADC/ADC.c: 39:     ADCON0 |= 0x01;
  3948     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3949     00F7  141F               	bsf	31,0	;volatile
  3950     00F8  0008               	return
  3951     00F9                     __end_of_ADC_Init:
  3952                           
  3953                           	psect	text17
  3954     0281                     __ptext17:	
  3955 ;; *************** function _myISR *****************
  3956 ;; Defined at:
  3957 ;;		line 298 in file "source/VendingMachine/VM.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 300/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1
  3971 ;;      Params:         0       0       0
  3972 ;;      Locals:         0       0       0
  3973 ;;      Temps:          6       0       0
  3974 ;;      Totals:         6       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 1
  3978 ;; This function calls:
  3979 ;;		_ADC_Read
  3980 ;;		i1_DIO_setPinValue
  3981 ;; This function is called by:
  3982 ;;		Interrupt level 1
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986     0281                     _myISR:	
  3987                           ;psect for function _myISR
  3988                           
  3989                           
  3990                           ;source/VendingMachine/VM.c: 300:     static volatile unsigned char timer_count = 0;;sou
      +                          rce/VendingMachine/VM.c: 302:     if (INTCONbits.RBIF)
  3991     0281  1C0B               	btfss	11,0	;volatile
  3992     0282  2AF1               	goto	i1l394
  3993                           
  3994                           ;source/VendingMachine/VM.c: 303:     {;source/VendingMachine/VM.c: 304:         if (POR
      +                          TBbits.RB0 == 0)
  3995     0283  1283               	bcf	3,5	;RP0=0, select bank0
  3996     0284  1303               	bcf	3,6	;RP1=0, select bank0
  3997     0285  1C06               	btfss	6,0	;volatile
  3998     0286  2A95               	goto	i1l2514
  3999     0287  2AA5               	goto	i1l395
  4000     0288                     i1l2504:
  4001                           
  4002                           ;source/VendingMachine/VM.c: 309:                     if(gCurrentDrink < VM_DRINK_WATER)
  4003     0288  3003               	movlw	3
  4004     0289  023C               	subwf	_gCurrentDrink,w	;volatile
  4005     028A  1803               	skipnc
  4006     028B  2A91               	goto	i1l2508
  4007                           
  4008                           ;source/VendingMachine/VM.c: 310:                         gCurrentDrink++;
  4009     028C  3001               	movlw	1
  4010     028D  00FF               	movwf	127
  4011     028E  087F               	movf	127,w
  4012     028F  07BC               	addwf	_gCurrentDrink,f	;volatile
  4013     0290  2AEF               	goto	i1l402
  4014     0291                     i1l2508:
  4015                           
  4016                           ;source/VendingMachine/VM.c: 312:                         gCurrentDrink = VM_DRINK_COLA;
  4017     0291  01BC               	clrf	_gCurrentDrink	;volatile
  4018     0292  2AEF               	goto	i1l402
  4019     0293                     i1l2510:
  4020                           
  4021                           ;source/VendingMachine/VM.c: 316:                     gCurrentDrinkPrice -= 1;
  4022     0293  30FF               	movlw	255
  4023     0294  2ADE               	goto	L9
  4024     0295                     i1l2514:	
  4025                           ;source/VendingMachine/VM.c: 317:                     break;
  4026                           
  4027     0295  0844               	movf	_gCurrentState,w	;volatile
  4028     0296  00F6               	movwf	??_myISR
  4029     0297  01F7               	clrf	??_myISR+1
  4030                           
  4031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 1, Range of values is 0 to 0
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            4     3 (average)
  4037                           ; direct_byte            7     6 (fixed)
  4038                           ; jumptable            260     6 (fixed)
  4039                           ;	Chosen strategy is simple_byte
  4040     0298  0877               	movf	??_myISR+1,w
  4041     0299  3A00               	xorlw	0	; case 0
  4042     029A  1903               	skipnz
  4043     029B  2A9D               	goto	i1l2856
  4044     029C  2AEF               	goto	i1l402
  4045     029D                     i1l2856:
  4046                           
  4047                           ; Switch size 1, requested type "simple"
  4048                           ; Number of cases is 2, Range of values is 201 to 202
  4049                           ; switch strategies available:
  4050                           ; Name         Instructions Cycles
  4051                           ; simple_byte            7     4 (average)
  4052                           ; direct_byte           11     9 (fixed)
  4053                           ; jumptable            263     9 (fixed)
  4054                           ;	Chosen strategy is simple_byte
  4055     029D  0876               	movf	??_myISR,w
  4056     029E  3AC9               	xorlw	201	; case 201
  4057     029F  1903               	skipnz
  4058     02A0  2A88               	goto	i1l2504
  4059     02A1  3A03               	xorlw	3	; case 202
  4060     02A2  1903               	skipnz
  4061     02A3  2A93               	goto	i1l2510
  4062     02A4  2AEF               	goto	i1l402
  4063     02A5                     i1l395:	
  4064                           ;source/VendingMachine/VM.c: 320:         else if (PORTBbits.RB1 == 0)
  4065                           
  4066     02A5  1C86               	btfss	6,1	;volatile
  4067     02A6  2ACA               	goto	i1l2536
  4068     02A7  2ADA               	goto	i1l403
  4069     02A8                     i1l2518:
  4070                           
  4071                           ;source/VendingMachine/VM.c: 325:                     gCurrentState = VM_STATE_COIN_INSE
      +                          RTION;
  4072     02A8  30CA               	movlw	202
  4073     02A9  00C4               	movwf	_gCurrentState	;volatile
  4074                           
  4075                           ;source/VendingMachine/VM.c: 326:                     switch (gCurrentDrink)
  4076     02AA  2AB2               	goto	i1l2530
  4077     02AB                     i1l2520:
  4078                           
  4079                           ;source/VendingMachine/VM.c: 329:                             gCurrentDrinkPrice = VM_CO
      +                          IN_COLA_80;
  4080     02AB  3008               	movlw	8
  4081     02AC  2AB0               	goto	L8
  4082     02AD                     i1l2524:	
  4083                           ;source/VendingMachine/VM.c: 330:                             break;
  4084                           
  4085                           
  4086                           ;source/VendingMachine/VM.c: 335:                             gCurrentDrinkPrice = VM_CO
      +                          IN_ORANGE_60;
  4087     02AD  3006               	movlw	6
  4088     02AE  2AB0               	goto	L8
  4089     02AF                     i1l2526:	
  4090                           ;source/VendingMachine/VM.c: 336:                             break;
  4091                           
  4092                           
  4093                           ;source/VendingMachine/VM.c: 338:                             gCurrentDrinkPrice = VM_CO
      +                          IN_WATER_50;
  4094     02AF  3005               	movlw	5
  4095     02B0                     L8:
  4096     02B0  00BB               	movwf	_gCurrentDrinkPrice	;volatile
  4097                           
  4098                           ;source/VendingMachine/VM.c: 339:                             break;
  4099     02B1  2AEF               	goto	i1l402
  4100     02B2                     i1l2530:
  4101     02B2  083C               	movf	_gCurrentDrink,w	;volatile
  4102     02B3  00F6               	movwf	??_myISR
  4103     02B4  01F7               	clrf	??_myISR+1
  4104                           
  4105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4106                           ; Switch size 1, requested type "simple"
  4107                           ; Number of cases is 1, Range of values is 0 to 0
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte            4     3 (average)
  4111                           ; direct_byte            7     6 (fixed)
  4112                           ; jumptable            260     6 (fixed)
  4113                           ;	Chosen strategy is simple_byte
  4114     02B5  0877               	movf	??_myISR+1,w
  4115     02B6  3A00               	xorlw	0	; case 0
  4116     02B7  1903               	skipnz
  4117     02B8  2ABA               	goto	i1l2858
  4118     02B9  2AEF               	goto	i1l402
  4119     02BA                     i1l2858:
  4120                           
  4121                           ; Switch size 1, requested type "simple"
  4122                           ; Number of cases is 4, Range of values is 0 to 3
  4123                           ; switch strategies available:
  4124                           ; Name         Instructions Cycles
  4125                           ; direct_byte           10     6 (fixed)
  4126                           ; simple_byte           13     7 (average)
  4127                           ; jumptable            260     6 (fixed)
  4128                           ;	Chosen strategy is simple_byte
  4129     02BA  0876               	movf	??_myISR,w
  4130     02BB  3A00               	xorlw	0	; case 0
  4131     02BC  1903               	skipnz
  4132     02BD  2AAB               	goto	i1l2520
  4133     02BE  3A01               	xorlw	1	; case 1
  4134     02BF  1903               	skipnz
  4135     02C0  2AAB               	goto	i1l2520
  4136     02C1  3A03               	xorlw	3	; case 2
  4137     02C2  1903               	skipnz
  4138     02C3  2AAD               	goto	i1l2524
  4139     02C4  3A01               	xorlw	1	; case 3
  4140     02C5  1903               	skipnz
  4141     02C6  2AAF               	goto	i1l2526
  4142     02C7  2AEF               	goto	i1l402
  4143     02C8                     i1l2532:
  4144                           
  4145                           ;source/VendingMachine/VM.c: 344:                     gCurrentDrinkPrice -= 2;
  4146     02C8  30FE               	movlw	254
  4147     02C9  2ADE               	goto	L9
  4148     02CA                     i1l2536:	
  4149                           ;source/VendingMachine/VM.c: 345:                     break;
  4150                           
  4151     02CA  0844               	movf	_gCurrentState,w	;volatile
  4152     02CB  00F6               	movwf	??_myISR
  4153     02CC  01F7               	clrf	??_myISR+1
  4154                           
  4155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4156                           ; Switch size 1, requested type "simple"
  4157                           ; Number of cases is 1, Range of values is 0 to 0
  4158                           ; switch strategies available:
  4159                           ; Name         Instructions Cycles
  4160                           ; simple_byte            4     3 (average)
  4161                           ; direct_byte            7     6 (fixed)
  4162                           ; jumptable            260     6 (fixed)
  4163                           ;	Chosen strategy is simple_byte
  4164     02CD  0877               	movf	??_myISR+1,w
  4165     02CE  3A00               	xorlw	0	; case 0
  4166     02CF  1903               	skipnz
  4167     02D0  2AD2               	goto	i1l2860
  4168     02D1  2AEF               	goto	i1l402
  4169     02D2                     i1l2860:
  4170                           
  4171                           ; Switch size 1, requested type "simple"
  4172                           ; Number of cases is 2, Range of values is 201 to 202
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte            7     4 (average)
  4176                           ; direct_byte           11     9 (fixed)
  4177                           ; jumptable            263     9 (fixed)
  4178                           ;	Chosen strategy is simple_byte
  4179     02D2  0876               	movf	??_myISR,w
  4180     02D3  3AC9               	xorlw	201	; case 201
  4181     02D4  1903               	skipnz
  4182     02D5  2AA8               	goto	i1l2518
  4183     02D6  3A03               	xorlw	3	; case 202
  4184     02D7  1903               	skipnz
  4185     02D8  2AC8               	goto	i1l2532
  4186     02D9  2AEF               	goto	i1l402
  4187     02DA                     i1l403:	
  4188                           ;source/VendingMachine/VM.c: 348:         else if (PORTBbits.RB2 == 0)
  4189                           
  4190     02DA  1D06               	btfss	6,2	;volatile
  4191     02DB  2AE2               	goto	i1l2544
  4192     02DC  2AEF               	goto	i1l402
  4193     02DD                     i1l2540:
  4194                           
  4195                           ;source/VendingMachine/VM.c: 354:                     gCurrentDrinkPrice -= 5;
  4196     02DD  30FB               	movlw	251
  4197     02DE                     L9:
  4198     02DE  00FF               	movwf	127
  4199     02DF  087F               	movf	127,w
  4200     02E0  07BB               	addwf	_gCurrentDrinkPrice,f	;volatile
  4201                           
  4202                           ;source/VendingMachine/VM.c: 355:                     break;
  4203     02E1  2AEF               	goto	i1l402
  4204     02E2                     i1l2544:
  4205     02E2  0844               	movf	_gCurrentState,w	;volatile
  4206     02E3  00F6               	movwf	??_myISR
  4207     02E4  01F7               	clrf	??_myISR+1
  4208                           
  4209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4210                           ; Switch size 1, requested type "simple"
  4211                           ; Number of cases is 1, Range of values is 0 to 0
  4212                           ; switch strategies available:
  4213                           ; Name         Instructions Cycles
  4214                           ; simple_byte            4     3 (average)
  4215                           ; direct_byte            7     6 (fixed)
  4216                           ; jumptable            260     6 (fixed)
  4217                           ;	Chosen strategy is simple_byte
  4218     02E5  0877               	movf	??_myISR+1,w
  4219     02E6  3A00               	xorlw	0	; case 0
  4220     02E7  1903               	skipnz
  4221     02E8  2AEA               	goto	i1l2862
  4222     02E9  2AEF               	goto	i1l402
  4223     02EA                     i1l2862:
  4224                           
  4225                           ; Switch size 1, requested type "simple"
  4226                           ; Number of cases is 1, Range of values is 202 to 202
  4227                           ; switch strategies available:
  4228                           ; Name         Instructions Cycles
  4229                           ; simple_byte            4     3 (average)
  4230                           ; direct_byte           10     9 (fixed)
  4231                           ; jumptable            263     9 (fixed)
  4232                           ;	Chosen strategy is simple_byte
  4233     02EA  0876               	movf	??_myISR,w
  4234     02EB  3ACA               	xorlw	202	; case 202
  4235     02EC  1903               	skipnz
  4236     02ED  2ADD               	goto	i1l2540
  4237     02EE  2AEF               	goto	i1l402
  4238     02EF                     i1l402:
  4239                           
  4240                           ;source/VendingMachine/VM.c: 358:         INTCONbits.RBIF = 0;
  4241     02EF  100B               	bcf	11,0	;volatile
  4242                           
  4243                           ;source/VendingMachine/VM.c: 359:         return;
  4244     02F0  2B17               	goto	i1l419
  4245     02F1                     i1l394:	
  4246                           ;source/VendingMachine/VM.c: 360:     }
  4247                           
  4248                           
  4249                           ;source/VendingMachine/VM.c: 361:     if (PIR1bits.TMR2IF)
  4250     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  4251     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  4252     02F3  1C8C               	btfss	12,1	;volatile
  4253     02F4  2B17               	goto	i1l419
  4254                           
  4255                           ;source/VendingMachine/VM.c: 362:     {;source/VendingMachine/VM.c: 363:         timer_c
      +                          ount++;
  4256     02F5  3001               	movlw	1
  4257     02F6  00FF               	movwf	127
  4258     02F7  087F               	movf	127,w
  4259     02F8  07FC               	addwf	myISR@timer_count,f	;volatile
  4260                           
  4261                           ;source/VendingMachine/VM.c: 365:         if(timer_count == (unsigned char) 22)
  4262     02F9  3016               	movlw	22
  4263     02FA  067C               	xorwf	myISR@timer_count,w	;volatile
  4264     02FB  1D03               	btfss	3,2
  4265     02FC  2B16               	goto	i1l2560
  4266                           
  4267                           ;source/VendingMachine/VM.c: 366:         {;source/VendingMachine/VM.c: 367:            
      +                           timer_count = 0;
  4268     02FD  01FC               	clrf	myISR@timer_count	;volatile
  4269                           
  4270                           ;source/VendingMachine/VM.c: 368:             adc_val = ADC_Read(ADC9);
  4271     02FE  3009               	movlw	9
  4272     02FF  26A2               	fcall	_ADC_Read
  4273     0300  0871               	movf	?_ADC_Read+1,w
  4274     0301  1283               	bcf	3,5	;RP0=0, select bank0
  4275     0302  00BA               	movwf	_adc_val+1
  4276     0303  0870               	movf	?_ADC_Read,w
  4277     0304  00B9               	movwf	_adc_val
  4278                           
  4279                           ;source/VendingMachine/VM.c: 369:             if(adc_val > 0x199)
  4280     0305  3001               	movlw	1
  4281     0306  023A               	subwf	_adc_val+1,w
  4282     0307  309A               	movlw	154
  4283     0308  1903               	skipnz
  4284     0309  0239               	subwf	_adc_val,w
  4285     030A  1C03               	skipc
  4286     030B  2B11               	goto	i1l2558
  4287                           
  4288                           ;source/VendingMachine/VM.c: 370:                 DIO_setPinValue(DIO_PORTA, DIO_PIN2, 1
      +                          );
  4289     030C  3002               	movlw	2
  4290     030D  00F0               	movwf	i1DIO_setPinValue@pin
  4291     030E  01F1               	clrf	i1DIO_setPinValue@value
  4292     030F  0AF1               	incf	i1DIO_setPinValue@value,f
  4293     0310  2B14               	goto	L11
  4294     0311                     i1l2558:
  4295                           
  4296                           ;source/VendingMachine/VM.c: 372:                 DIO_setPinValue(DIO_PORTA, DIO_PIN2, 0
      +                          );
  4297     0311  3002               	movlw	2
  4298     0312  00F0               	movwf	i1DIO_setPinValue@pin
  4299     0313  01F1               	clrf	i1DIO_setPinValue@value
  4300     0314                     L11:
  4301     0314  3000               	movlw	0
  4302     0315  2525               	fcall	i1_DIO_setPinValue
  4303     0316                     i1l2560:
  4304                           
  4305                           ;source/VendingMachine/VM.c: 374:         PIR1bits.TMR2IF = 0;
  4306     0316  108C               	bcf	12,1	;volatile
  4307     0317                     i1l419:
  4308     0317  087B               	movf	??_myISR+5,w
  4309     0318  00FF               	movwf	127
  4310     0319  087A               	movf	??_myISR+4,w
  4311     031A  008A               	movwf	10
  4312     031B  0879               	movf	??_myISR+3,w
  4313     031C  0084               	movwf	4
  4314     031D  0E78               	swapf	??_myISR+2,w
  4315     031E  0083               	movwf	3
  4316     031F  0EFE               	swapf	126,f
  4317     0320  0E7E               	swapf	126,w
  4318     0321  0009               	retfie
  4319     0322                     __end_of_myISR:
  4320                           
  4321                           	psect	intentry
  4322     0004                     __pintentry:	
  4323                           ;incstack = 0
  4324                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4325                           
  4326     0004                     interrupt_function:
  4327     007E                     saved_w	set	btemp
  4328     0004  00FE               	movwf	btemp
  4329     0005  0E03               	swapf	3,w
  4330     0006  00F8               	movwf	??_myISR+2
  4331     0007  0804               	movf	4,w
  4332     0008  00F9               	movwf	??_myISR+3
  4333     0009  080A               	movf	10,w
  4334     000A  00FA               	movwf	??_myISR+4
  4335     000B  087F               	movf	btemp+1,w
  4336     000C  00FB               	movwf	??_myISR+5
  4337     000D  2A81               	ljmp	_myISR
  4338                           
  4339                           	psect	text18
  4340     0525                     __ptext18:	
  4341 ;; *************** function i1_DIO_setPinValue *****************
  4342 ;; Defined at:
  4343 ;;		line 146 in file "source/DIO/DIO.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  port            1    wreg     enum E1232
  4346 ;;  pin             1    0[COMMON] enum E1237
  4347 ;;  value           1    1[COMMON] unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  port            1    4[COMMON] enum E1232
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4354 ;; Tracked objects:
  4355 ;;		On entry : 300/0
  4356 ;;		On exit  : 300/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1
  4359 ;;      Params:         2       0       0
  4360 ;;      Locals:         1       0       0
  4361 ;;      Temps:          2       0       0
  4362 ;;      Totals:         5       0       0
  4363 ;;Total ram usage:        5 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_myISR
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372     0525                     i1_DIO_setPinValue:	
  4373                           ;psect for function i1_DIO_setPinValue
  4374                           
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in i1_DIO_setPinValue: [wreg-fsr0h+status,2+status,0+btemp+1]
  4378                           ;i1DIO_setPinValue@port stored from wreg
  4379     0525  00F4               	movwf	i1DIO_setPinValue@port
  4380                           
  4381                           ;source/DIO/DIO.c: 146: void DIO_setPinValue(DIO_port_e port, DIO_pin_e pin, unsigned ch
      +                          ar value);source/DIO/DIO.c: 147: {;source/DIO/DIO.c: 149:     switch(port)
  4382     0526  2D87               	goto	i1l2490
  4383     0527                     i1l2470:
  4384                           
  4385                           ;source/DIO/DIO.c: 152:             if(value == 0)
  4386     0527  0871               	movf	i1DIO_setPinValue@value,w
  4387     0528  1D03               	btfss	3,2
  4388     0529  2D39               	goto	i1l2474
  4389                           
  4390                           ;source/DIO/DIO.c: 153:                 PORTA &= ~(1 << pin);
  4391     052A  3001               	movlw	1
  4392     052B  00F2               	movwf	??i1_DIO_setPinValue
  4393     052C  0A70               	incf	i1DIO_setPinValue@pin,w
  4394     052D  2D30               	goto	u163_24
  4395     052E                     u163_25:
  4396     052E  1003               	clrc
  4397     052F  0DF2               	rlf	??i1_DIO_setPinValue,f
  4398     0530                     u163_24:
  4399     0530  3EFF               	addlw	-1
  4400     0531  1D03               	skipz
  4401     0532  2D2E               	goto	u163_25
  4402     0533  0872               	movf	??i1_DIO_setPinValue,w
  4403     0534  3AFF               	xorlw	255
  4404     0535  00FF               	movwf	127
  4405     0536  087F               	movf	127,w
  4406     0537  0585               	andwf	5,f	;volatile
  4407     0538  0008               	return
  4408     0539                     i1l2474:
  4409                           
  4410                           ;source/DIO/DIO.c: 155:                 PORTA |= (1 << pin);
  4411     0539  3001               	movlw	1
  4412     053A  00F2               	movwf	??i1_DIO_setPinValue
  4413     053B  0A70               	incf	i1DIO_setPinValue@pin,w
  4414     053C  2D3F               	goto	u164_24
  4415     053D                     u164_25:
  4416     053D  1003               	clrc
  4417     053E  0DF2               	rlf	??i1_DIO_setPinValue,f
  4418     053F                     u164_24:
  4419     053F  3EFF               	addlw	-1
  4420     0540  1D03               	skipz
  4421     0541  2D3D               	goto	u164_25
  4422     0542  0872               	movf	??i1_DIO_setPinValue,w
  4423     0543  00FF               	movwf	127
  4424     0544  087F               	movf	127,w
  4425     0545  0485               	iorwf	5,f	;volatile
  4426     0546  0008               	return
  4427     0547                     i1l2476:
  4428                           
  4429                           ;source/DIO/DIO.c: 158:             if(value == 0)
  4430     0547  0871               	movf	i1DIO_setPinValue@value,w
  4431     0548  1D03               	btfss	3,2
  4432     0549  2D59               	goto	i1l2480
  4433                           
  4434                           ;source/DIO/DIO.c: 159:                 PORTB &= ~(1 << pin);
  4435     054A  3001               	movlw	1
  4436     054B  00F2               	movwf	??i1_DIO_setPinValue
  4437     054C  0A70               	incf	i1DIO_setPinValue@pin,w
  4438     054D  2D50               	goto	u166_24
  4439     054E                     u166_25:
  4440     054E  1003               	clrc
  4441     054F  0DF2               	rlf	??i1_DIO_setPinValue,f
  4442     0550                     u166_24:
  4443     0550  3EFF               	addlw	-1
  4444     0551  1D03               	skipz
  4445     0552  2D4E               	goto	u166_25
  4446     0553  0872               	movf	??i1_DIO_setPinValue,w
  4447     0554  3AFF               	xorlw	255
  4448     0555  00FF               	movwf	127
  4449     0556  087F               	movf	127,w
  4450     0557  0586               	andwf	6,f	;volatile
  4451     0558  0008               	return
  4452     0559                     i1l2480:
  4453                           
  4454                           ;source/DIO/DIO.c: 161:                 PORTB |= (1 << pin);
  4455     0559  3001               	movlw	1
  4456     055A  00F2               	movwf	??i1_DIO_setPinValue
  4457     055B  0A70               	incf	i1DIO_setPinValue@pin,w
  4458     055C  2D5F               	goto	u167_24
  4459     055D                     u167_25:
  4460     055D  1003               	clrc
  4461     055E  0DF2               	rlf	??i1_DIO_setPinValue,f
  4462     055F                     u167_24:
  4463     055F  3EFF               	addlw	-1
  4464     0560  1D03               	skipz
  4465     0561  2D5D               	goto	u167_25
  4466     0562  0872               	movf	??i1_DIO_setPinValue,w
  4467     0563  00FF               	movwf	127
  4468     0564  087F               	movf	127,w
  4469     0565  0486               	iorwf	6,f	;volatile
  4470     0566  0008               	return
  4471     0567                     i1l2482:
  4472                           
  4473                           ;source/DIO/DIO.c: 164:             if(value == 0)
  4474     0567  0871               	movf	i1DIO_setPinValue@value,w
  4475     0568  1D03               	btfss	3,2
  4476     0569  2D79               	goto	i1l2486
  4477                           
  4478                           ;source/DIO/DIO.c: 165:                 PORTC &= ~(1 << pin);
  4479     056A  3001               	movlw	1
  4480     056B  00F2               	movwf	??i1_DIO_setPinValue
  4481     056C  0A70               	incf	i1DIO_setPinValue@pin,w
  4482     056D  2D70               	goto	u169_24
  4483     056E                     u169_25:
  4484     056E  1003               	clrc
  4485     056F  0DF2               	rlf	??i1_DIO_setPinValue,f
  4486     0570                     u169_24:
  4487     0570  3EFF               	addlw	-1
  4488     0571  1D03               	skipz
  4489     0572  2D6E               	goto	u169_25
  4490     0573  0872               	movf	??i1_DIO_setPinValue,w
  4491     0574  3AFF               	xorlw	255
  4492     0575  00FF               	movwf	127
  4493     0576  087F               	movf	127,w
  4494     0577  0587               	andwf	7,f	;volatile
  4495     0578  0008               	return
  4496     0579                     i1l2486:
  4497                           
  4498                           ;source/DIO/DIO.c: 167:                 PORTC |= (1 << pin);
  4499     0579  3001               	movlw	1
  4500     057A  00F2               	movwf	??i1_DIO_setPinValue
  4501     057B  0A70               	incf	i1DIO_setPinValue@pin,w
  4502     057C  2D7F               	goto	u170_24
  4503     057D                     u170_25:
  4504     057D  1003               	clrc
  4505     057E  0DF2               	rlf	??i1_DIO_setPinValue,f
  4506     057F                     u170_24:
  4507     057F  3EFF               	addlw	-1
  4508     0580  1D03               	skipz
  4509     0581  2D7D               	goto	u170_25
  4510     0582  0872               	movf	??i1_DIO_setPinValue,w
  4511     0583  00FF               	movwf	127
  4512     0584  087F               	movf	127,w
  4513     0585  0487               	iorwf	7,f	;volatile
  4514     0586  0008               	return
  4515     0587                     i1l2490:
  4516     0587  0874               	movf	i1DIO_setPinValue@port,w
  4517     0588  00F2               	movwf	??i1_DIO_setPinValue
  4518     0589  01F3               	clrf	??i1_DIO_setPinValue+1
  4519                           
  4520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4521                           ; Switch size 1, requested type "simple"
  4522                           ; Number of cases is 1, Range of values is 0 to 0
  4523                           ; switch strategies available:
  4524                           ; Name         Instructions Cycles
  4525                           ; simple_byte            4     3 (average)
  4526                           ; direct_byte            7     6 (fixed)
  4527                           ; jumptable            260     6 (fixed)
  4528                           ;	Chosen strategy is simple_byte
  4529     058A  0873               	movf	??i1_DIO_setPinValue+1,w
  4530     058B  3A00               	xorlw	0	; case 0
  4531     058C  1903               	skipnz
  4532     058D  2D8F               	goto	i1l2864
  4533     058E  2D9A               	goto	i1l144
  4534     058F                     i1l2864:
  4535                           
  4536                           ; Switch size 1, requested type "simple"
  4537                           ; Number of cases is 3, Range of values is 0 to 2
  4538                           ; switch strategies available:
  4539                           ; Name         Instructions Cycles
  4540                           ; direct_byte            9     6 (fixed)
  4541                           ; simple_byte           10     6 (average)
  4542                           ; jumptable            260     6 (fixed)
  4543                           ;	Chosen strategy is simple_byte
  4544     058F  0872               	movf	??i1_DIO_setPinValue,w
  4545     0590  3A00               	xorlw	0	; case 0
  4546     0591  1903               	skipnz
  4547     0592  2D27               	goto	i1l2470
  4548     0593  3A01               	xorlw	1	; case 1
  4549     0594  1903               	skipnz
  4550     0595  2D47               	goto	i1l2476
  4551     0596  3A03               	xorlw	3	; case 2
  4552     0597  1903               	skipnz
  4553     0598  2D67               	goto	i1l2482
  4554     0599  2D9A               	goto	i1l144
  4555     059A                     i1l144:
  4556     059A  0008               	return
  4557     059B                     __end_ofi1_DIO_setPinValue:
  4558                           
  4559                           	psect	text19
  4560     06A2                     __ptext19:	
  4561 ;; *************** function _ADC_Read *****************
  4562 ;; Defined at:
  4563 ;;		line 46 in file "source/ADC/ADC.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  channel         1    wreg     enum E1232
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  channel         1    5[COMMON] enum E1232
  4568 ;;  result          2    3[COMMON] unsigned int 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  2    0[COMMON] unsigned int 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0, btemp+1
  4573 ;; Tracked objects:
  4574 ;;		On entry : 300/0
  4575 ;;		On exit  : 300/100
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1
  4578 ;;      Params:         2       0       0
  4579 ;;      Locals:         3       0       0
  4580 ;;      Temps:          1       0       0
  4581 ;;      Totals:         6       0       0
  4582 ;;Total ram usage:        6 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_myISR
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591     06A2                     _ADC_Read:	
  4592                           ;psect for function _ADC_Read
  4593                           
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  4597                           ;ADC_Read@channel stored from wreg
  4598     06A2  00F5               	movwf	ADC_Read@channel
  4599                           
  4600                           ;source/ADC/ADC.c: 46: unsigned int ADC_Read(ADC_channel_t channel);source/ADC/ADC.c: 47
      +                          : {;source/ADC/ADC.c: 48:     unsigned int result;;source/ADC/ADC.c: 51:     if(channel 
      +                          < 5)
  4601     06A3  3005               	movlw	5
  4602     06A4  0275               	subwf	ADC_Read@channel,w
  4603     06A5  1803               	skipnc
  4604     06A6  2EBF               	goto	i1l2460
  4605                           
  4606                           ;source/ADC/ADC.c: 52:     {;source/ADC/ADC.c: 53:         ANSEL |= (1 << channel);
  4607     06A7  3001               	movlw	1
  4608     06A8  00F2               	movwf	??_ADC_Read
  4609     06A9  0A75               	incf	ADC_Read@channel,w
  4610     06AA  2EAD               	goto	u157_24
  4611     06AB                     u157_25:
  4612     06AB  1003               	clrc
  4613     06AC  0DF2               	rlf	??_ADC_Read,f
  4614     06AD                     u157_24:
  4615     06AD  3EFF               	addlw	-1
  4616     06AE  1D03               	skipz
  4617     06AF  2EAB               	goto	u157_25
  4618     06B0  0872               	movf	??_ADC_Read,w
  4619     06B1  00FF               	movwf	127
  4620     06B2  087F               	movf	127,w
  4621     06B3  1683               	bsf	3,5	;RP0=1, select bank3
  4622     06B4  1703               	bsf	3,6	;RP1=1, select bank3
  4623     06B5  0488               	iorwf	8,f	;volatile
  4624                           
  4625                           ;source/ADC/ADC.c: 55:         ADCON0 |= (channel << 2);
  4626     06B6  0875               	movf	ADC_Read@channel,w	;volatile
  4627     06B7  00F2               	movwf	??_ADC_Read
  4628     06B8  3001               	movlw	1
  4629     06B9                     u158_25:
  4630     06B9  1003               	clrc
  4631     06BA  0DF2               	rlf	??_ADC_Read,f
  4632     06BB  3EFF               	addlw	-1
  4633     06BC  1D03               	skipz
  4634     06BD  2EB9               	goto	u158_25
  4635     06BE  2ED8               	goto	L12
  4636     06BF                     i1l2460:	
  4637                           ;source/ADC/ADC.c: 56:     }
  4638                           
  4639                           
  4640                           ;source/ADC/ADC.c: 58:     {;source/ADC/ADC.c: 60:             ANSELH |= ( 1<< (channel-
      +                          8) );
  4641     06BF  3001               	movlw	1
  4642     06C0  00F2               	movwf	??_ADC_Read
  4643     06C1  0875               	movf	ADC_Read@channel,w
  4644     06C2  3EF8               	addlw	248
  4645     06C3  3E01               	addlw	1
  4646     06C4  2EC7               	goto	u159_24
  4647     06C5                     u159_25:
  4648     06C5  1003               	clrc
  4649     06C6  0DF2               	rlf	??_ADC_Read,f
  4650     06C7                     u159_24:
  4651     06C7  3EFF               	addlw	-1
  4652     06C8  1D03               	skipz
  4653     06C9  2EC5               	goto	u159_25
  4654     06CA  0872               	movf	??_ADC_Read,w
  4655     06CB  00FF               	movwf	127
  4656     06CC  087F               	movf	127,w
  4657     06CD  1683               	bsf	3,5	;RP0=1, select bank3
  4658     06CE  1703               	bsf	3,6	;RP1=1, select bank3
  4659     06CF  0489               	iorwf	9,f	;volatile
  4660                           
  4661                           ;source/ADC/ADC.c: 62:             ADCON0 |= (channel << 2);
  4662     06D0  0875               	movf	ADC_Read@channel,w	;volatile
  4663     06D1  00F2               	movwf	??_ADC_Read
  4664     06D2  3001               	movlw	1
  4665     06D3                     u160_25:
  4666     06D3  1003               	clrc
  4667     06D4  0DF2               	rlf	??_ADC_Read,f
  4668     06D5  3EFF               	addlw	-1
  4669     06D6  1D03               	skipz
  4670     06D7  2ED3               	goto	u160_25
  4671     06D8                     L12:
  4672     06D8  1003               	clrc
  4673     06D9  0D72               	rlf	??_ADC_Read,w
  4674     06DA  00FF               	movwf	127
  4675     06DB  087F               	movf	127,w
  4676     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  4677     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  4678     06DE  049F               	iorwf	31,f	;volatile
  4679                           
  4680                           ;source/ADC/ADC.c: 64:     ADCON0bits.GO = 1;
  4681     06DF  149F               	bsf	31,1	;volatile
  4682     06E0                     i1l166:	
  4683                           ;source/ADC/ADC.c: 65:     while(ADCON0bits.GO==1);
  4684                           
  4685     06E0  189F               	btfsc	31,1	;volatile
  4686     06E1  2EE0               	goto	i1l166
  4687                           
  4688                           ;source/ADC/ADC.c: 68:     result =(ADRESH<<8)+ADRESL;
  4689     06E2  081E               	movf	30,w	;volatile
  4690     06E3  00F4               	movwf	ADC_Read@result+1
  4691     06E4  1683               	bsf	3,5	;RP0=1, select bank1
  4692     06E5  081E               	movf	30,w	;volatile
  4693     06E6  00F3               	movwf	ADC_Read@result
  4694                           
  4695                           ;source/ADC/ADC.c: 72:     return result;
  4696     06E7  0874               	movf	ADC_Read@result+1,w
  4697     06E8  00F1               	movwf	?_ADC_Read+1
  4698     06E9  0873               	movf	ADC_Read@result,w
  4699     06EA  00F0               	movwf	?_ADC_Read
  4700     06EB  0008               	return
  4701     06EC                     __end_of_ADC_Read:
  4702     007E                     btemp	set	126	;btemp
  4703     007E                     wtemp0	set	126
  4704                           
  4705                           	psect	idloc
  4706                           
  4707                           ;Config register IDLOC0 @ 0x2000
  4708                           ;	unspecified, using default values
  4709     2000                     	org	8192
  4710     2000  3FFF               	dw	16383
  4711                           
  4712                           ;Config register IDLOC1 @ 0x2001
  4713                           ;	unspecified, using default values
  4714     2001                     	org	8193
  4715     2001  3FFF               	dw	16383
  4716                           
  4717                           ;Config register IDLOC2 @ 0x2002
  4718                           ;	unspecified, using default values
  4719     2002                     	org	8194
  4720     2002  3FFF               	dw	16383
  4721                           
  4722                           ;Config register IDLOC3 @ 0x2003
  4723                           ;	unspecified, using default values
  4724     2003                     	org	8195
  4725     2003  3FFF               	dw	16383
  4726                           
  4727                           	psect	config
  4728                           
  4729                           ;Config register CONFIG1 @ 0x2007
  4730                           ;	Oscillator Selection bits
  4731                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  4732                           ;	Watchdog Timer Enable bit
  4733                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4734                           ;	Power-up Timer Enable bit
  4735                           ;	PWRTE = OFF, PWRT disabled
  4736                           ;	RE3/MCLR pin function select bit
  4737                           ;	MCLRE = 0x1, unprogrammed default
  4738                           ;	Code Protection bit
  4739                           ;	CP = OFF, Program memory code protection is disabled
  4740                           ;	Data Code Protection bit
  4741                           ;	CPD = OFF, Data memory code protection is disabled
  4742                           ;	Brown Out Reset Selection bits
  4743                           ;	BOREN = OFF, BOR disabled
  4744                           ;	Internal External Switchover bit
  4745                           ;	IESO = 0x1, unprogrammed default
  4746                           ;	Fail-Safe Clock Monitor Enabled bit
  4747                           ;	FCMEN = 0x1, unprogrammed default
  4748                           ;	Low Voltage Programming Enable bit
  4749                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4750                           ;	In-Circuit Debugger Mode bit
  4751                           ;	DEBUG = 0x1, unprogrammed default
  4752     2007                     	org	8199
  4753     2007  2CF2               	dw	11506
  4754                           
  4755                           ;Config register CONFIG2 @ 0x2008
  4756                           ;	Brown-out Reset Selection bit
  4757                           ;	BOR4V = 0x1, unprogrammed default
  4758                           ;	Flash Program Memory Self Write Enable bits
  4759                           ;	WRT = OFF, Write protection off
  4760     2008                     	org	8200
  4761     2008  3FFF               	dw	16383

Data Sizes:
    Strings     179
    Constant    0
    Data        6
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     20      37
    BANK1            32      0       0

Pointer List with Targets:

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    F1329.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_PutString@a	PTR unsigned char  size(2) Largest target is 19
		 -> STR_17(CODE[16]), STR_16(CODE[17]), STR_15(CODE[5]), STR_14(CODE[5]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[11]), STR_10(CODE[17]), 
		 -> STR_9(CODE[16]), STR_8(CODE[16]), temp(BANK0[2]), STR_7(CODE[15]), 
		 -> STR_6(CODE[15]), STR_5(CODE[13]), STR_4(CODE[15]), STR_3(CODE[17]), 
		 -> STR_2(CODE[19]), STR_1(CODE[14]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S35$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _myISR->_ADC_Read

Critical Paths under _main in BANK0

    _main->_VM_Running
    _VM_Running->_VM_Init
    _VM_Mode_DrinkSelection->_LCD_PutString
    _VM_Mode_DispenseDrink->_LCD_PutString
    _VM_Mode_DispenseChange->_LCD_PutString
    _VM_Mode_CoinInsertion->_LCD_PutString
    _VM_Init->_LCD_Init
    _VM_Init->_LCD_PutString
    _LCD_PutString->_LCD_PutChar
    _LCD_PutChar->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out
    _DIO_setPinMode->_DIO_setPinDir

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18659
                            _VM_Init
                         _VM_Running
 ---------------------------------------------------------------------------------
 (1) _VM_Running                                           2     2      0   13872
                                             18 BANK0      2     2      0
                      _LCD_PutString
                          _LCD_Write
                      _TIMR1_Delay5s
                            _VM_Init
              _VM_Mode_CoinInsertion
             _VM_Mode_DispenseChange
              _VM_Mode_DispenseDrink
             _VM_Mode_DrinkSelection
 ---------------------------------------------------------------------------------
 (2) _VM_Mode_DrinkSelection                               2     2      0    1339
                                             13 BANK0      2     2      0
                      _LCD_PutString
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _VM_Mode_DispenseDrink                                1     1      0    2543
                                             13 BANK0      1     1      0
                    _DIO_setPinValue
                      _LCD_PutString
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _VM_Mode_DispenseChange                               1     1      0    2479
                                             13 BANK0      1     1      0
                    _DIO_setPinValue
                      _LCD_PutString
                          _LCD_Write
                      _TIMR1_Delay5s
 ---------------------------------------------------------------------------------
 (3) _TIMR1_Delay5s                                        1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _VM_Mode_CoinInsertion                                0     0      0    1339
                      _LCD_PutString
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _VM_Init                                              5     5      0    4787
                                             13 BANK0      5     5      0
                           _ADC_Init
                     _DIO_setPinMode
                    _DIO_setPinValue
                           _LCD_Init
                      _LCD_PutString
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_PutString                                        7     5      2    1229
                                              6 BANK0      7     5      2
                        _LCD_PutChar
 ---------------------------------------------------------------------------------
 (4) _LCD_PutChar                                          3     3      0     132
                                              3 BANK0      3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Init                                             7     2      5     185
                                              6 BANK0      7     2      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            3     3      0     110
                                              3 BANK0      3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0      88
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _DIO_setPinValue                                      5     3      2    1070
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DIO_setPinMode                                       5     3      2    2170
                                              5 BANK0      5     3      2
                      _DIO_setPinDir
 ---------------------------------------------------------------------------------
 (4) _DIO_setPinDir                                        5     3      2     962
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myISR                                                6     6      0     457
                                              6 COMMON     6     6      0
                           _ADC_Read
                  i1_DIO_setPinValue
 ---------------------------------------------------------------------------------
 (7) i1_DIO_setPinValue                                    5     3      2     324
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _ADC_Read                                             6     4      2     133
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VM_Init
     _ADC_Init
     _DIO_setPinMode
       _DIO_setPinDir
     _DIO_setPinValue
     _LCD_Init
       _LCD_Write
         _LCD_Out
     _LCD_PutString
       _LCD_PutChar
         _LCD_Out
     _LCD_Write
   _VM_Running
     _LCD_PutString
     _LCD_Write
     _TIMR1_Delay5s
     _VM_Init
     _VM_Mode_CoinInsertion
       _LCD_PutString
       _LCD_Write
     _VM_Mode_DispenseChange
       _DIO_setPinValue
       _LCD_PutString
       _LCD_Write
       _TIMR1_Delay5s
     _VM_Mode_DispenseDrink
       _DIO_setPinValue
       _LCD_PutString
       _LCD_Write
     _VM_Mode_DrinkSelection
       _LCD_PutString
       _LCD_Write

 _myISR (ROOT)
   _ADC_Read
   i1_DIO_setPinValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      25       4       46.2%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32       8        0.0%
ABS                  0      0      32       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 09 22:00:32 2023

                    _DIO_setPinMode 0029                                   l9 0002  
                                 pc 0002                     _DIO_setPinValue 04AF  
                                l94 04AE                                  fsr 0004  
                               l144 0524                                 l129 00EC  
                               l343 0676                                 l269 0729  
                               l287 0793                                 l384 07F4  
                               _PR2 0092                                 u914 01CE  
                               u915 01CC                                 u924 01E3  
                               u925 01E1                                 u944 01FD  
                               u945 01FB                                 u954 0215  
                               u955 0213                                 u974 022C  
                               u975 022A                                 u984 0241  
                               u985 023F                        ?_LCD_PutChar 0070  
                   LCD_Init@display 0026                                 _lcd 0034  
                               fsr0 0004                                 indf 0000  
             i1DIO_setPinValue@port 0074  VM_Mode_DispenseChange@change_count 002D  
                   __end_of_LCD_Out 0281                                l2000 0448  
                              l2002 0457                                l2012 048C  
                              l2006 046A                                l2110 008F  
                              l2102 0077                                l2008 0479  
                              l2016 049B                                l2120 00A7  
                              l2032 05C1                                l2122 00BC  
                              l2106 0082                                l2124 00C2  
                              l2108 0088                                l2132 00D9  
                              l2036 05CA                                l2028 05B6  
                              l2128 00C9                                l2080 0049  
                              l2072 002B                                l2152 04B1  
                              l2312 07E5                                l2090 0065  
                              l2082 005B                                l2074 003C  
                              l2162 04E3                                l2076 0042  
                              l2164 04F1                                l2156 04C3  
                              l2172 0511                                l2068 0796  
                              l2420 06F2                                l2094 006B  
                              l2086 0060                                l2158 04D1  
                              l2422 06F4                                l2168 0503  
                              l2280 0777                                l2424 06F6  
                              l2098 0071                                l2274 0765  
                              l2426 06F8                                l2450 0710  
                              l2380 069F                                l2276 076B  
                              l2284 077D                                l2366 0687  
                              l2278 0771                                l2446 070E  
                              l2368 068C                                l2386 072B  
                              l2388 0737                                l1950 01F0  
                              l1960 0239                                l2840 0718  
                              l2850 00D1                                l1962 024E  
                              l1954 020A                                l2842 0785  
                              l2852 00E1                                l2844 0519  
                              l1956 0222                                l1948 01DB  
                              l2854 04A3                                l2846 0053  
                              l1966 0268                                l2848 00B1  
                              l1996 0435                                STR_1 01A3  
                              STR_2 0110                                STR_3 0123  
                              STR_4 0176                                STR_5 01B1  
                              STR_6 0194                                STR_7 0185  
                              STR_8 0166                                STR_9 0156  
                              u1004 025B                                u1005 0259  
                              u1014 0273                                u1015 0271  
                              u1024 0609                                u1104 03A8  
                              u1025 0607                                u1105 03A6  
                              u1034 0623                                u1035 0621  
                              u1124 043E                                u1044 0646  
                              u1125 043C                                u1045 0644  
                              u1205 05B1                                u1134 044E  
                              u1054 032B                                u1135 044C  
                              u1215 05BC                                u1055 0329  
                              u1225 05C7                                u1065 033A  
                              u1154 0460                                u1074 034D  
                              u1155 045E                                u1075 034B  
                              u1164 0470                                u1084 036D  
                              _IOCB 0096                                u1165 046E  
                              u1085 036B                                u1334 009C  
                              u1414 04FA                                u1094 0388  
                              u1335 009A                                u1415 04F8  
                              u1095 0386                                u1184 0482  
                              u1264 0031                                u1424 0509  
                              u1185 0480                                u1265 002F  
                              u1425 0507                                u1194 0492  
                              u1354 04BA                                u1195 0490  
                              u1355 04B8                                u1364 04C9  
                              u1365 04C7                                u1384 04DA  
                              u1385 04D8                                u1394 04E9  
                              u1395 04E7                                u1807 0398  
                              u1817 05D0                                u1827 05DC  
                              u1837 05E9                                u1847 0635  
                              u1797 035D                                _TMR1 000E  
                              _TMR2 0011                       _LCD_PutString 0794  
                              _main 0001                                _temp 003D  
                              btemp 007E                    __end_of_ADC_Init 00F9  
                  __end_of_ADC_Read 06EC                                start 000E  
            i1DIO_setPinValue@value 0071                     __end_of_VM_Init 0433  
            __end_of_DIO_setPinMode 00ED                      ?_DIO_setPinDir 0020  
                        _VM_Running 06EC                    __end_of_LCD_Init 05FE  
                             ?_main 0070                               STR_10 0145  
                             STR_11 015B                               STR_12 01BE  
                             STR_13 01BE                               STR_14 01BE  
                             STR_15 01BE                               STR_16 0134  
                             STR_17 0156       __end_of_VM_Mode_CoinInsertion 07ED  
                             _ANSEL 0188                               _T1CON 0010  
                             i1l144 059A                               i1l402 02EF  
                             i1l403 02DA                               i1l166 06E0  
                             i1l419 0317                               i1l394 02F1  
                             i1l395 02A5                               _PORTA 0005  
                             _PORTB 0006                               _PORTC 0007  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _myISR 0281  
          ??_VM_Mode_DrinkSelection 002D                      ?_LCD_PutString 0026  
                             pclath 000A                    myISR@timer_count 007C  
                             status 0003                               wtemp0 007E  
           __end_of_DIO_setPinValue 0525                     ?_DIO_setPinMode 0025  
              DIO_setPinValue@value 0021                     __initialization 000F  
                      __end_of_main 0004               __end_of_TIMR1_Delay5s 0800  
                            ??_main 0034                  _gCurrentDrinkPrice 003B  
                         ??_LCD_Out 0020                   __end_of_LCD_Write 0654  
                      LCD_PutChar@c 0025              _VM_Mode_DispenseChange 072A  
                            _ADCON0 001F                              _ADCON1 009F  
                            ?_myISR 0070                              _ADRESH 001E  
                            _ADRESL 009E                              _ANSELH 0189  
                  DIO_setPinDir@pin 0020                              i1l2510 0293  
                            i1l2520 02AB                              i1l2504 0288  
                            i1l2530 02B2                              i1l2514 0295  
                            i1l2460 06BF                              i1l2540 02DD  
                            i1l2532 02C8                              i1l2524 02AD  
                            i1l2508 0291                              i1l2470 0527  
                            i1l2526 02AF                              i1l2518 02A8  
                            i1l2480 0559                              i1l2560 0316  
                            i1l2544 02E2                              i1l2536 02CA  
                            i1l2482 0567                              i1l2474 0539  
                            i1l2490 0587                              i1l2476 0547  
                            i1l2486 0579                              i1l2558 0311  
                            i1l2860 02D2                              i1l2862 02EA  
                            i1l2864 058F                              i1l2856 029D  
                            i1l2858 02BA                              u160_25 06D3  
                            u170_24 057F                              u170_25 057D  
                            u163_24 0530                              u163_25 052E  
                            u164_24 053F                              u164_25 053D  
                            u157_24 06AD                              u157_25 06AB  
                            u166_24 0550                              u158_25 06B9  
                            u166_25 054E                           ??_VM_Init 002D  
                            u159_24 06C7                              u167_24 055F  
                            u159_25 06C5                              u167_25 055D  
                            u169_24 0570                              u169_25 056E  
                   ??_DIO_setPinDir 0022                         ?_VM_Running 0070  
                   ADC_Read@channel 0075                           ?_ADC_Init 0070  
                         ?_ADC_Read 0070                              saved_w 007E  
                   ??_LCD_PutString 0028       __end_of_VM_Mode_DispenseDrink 06A2  
           __end_of__initialization 0027                           ?_LCD_Init 0026  
                  ?_DIO_setPinValue 0020                      __pcstackCOMMON 0070  
                      __pidataBANK0 00F9                       __end_of_myISR 0322  
                    _OPTION_REGbits 0081                          ??_ADC_Init 0020  
                        ??_ADC_Read 0072                             ??_myISR 0076  
            DIO_setPinDir@direction 0021                          __pbssBANK0 0034  
                        ??_LCD_Init 002B                          __pmaintext 0001  
            _VM_Mode_DrinkSelection 0760                          __pintentry 0004  
                 DIO_setPinDir@port 0024                             _LCD_Out 01C3  
                 DIO_setPinMode@pin 0025                          __stringtab 0100  
                  ??_DIO_setPinMode 0027                             _VM_Init 03B6  
                           _adc_val 0039                             __ptext1 06EC  
                           __ptext2 0760                             __ptext3 0654  
                           __ptext4 072A                             __ptext5 07ED  
                           __ptext6 07C5                             __ptext7 03B6  
                           __ptext8 0794                             __ptext9 0322  
                         _T2CONbits 0012             ?_VM_Mode_DispenseChange 0070  
             _VM_Mode_CoinInsertion 07C5                           _LCD_Write 05FE  
              end_of_initialization 0027                        ??_VM_Running 0032  
                         _PORTBbits 0006      __end_of_VM_Mode_DispenseChange 0760  
                        ?_LCD_Write 0070                  __end_of_VM_Running 072A  
              i1DIO_setPinValue@pin 0070               __end_of_DIO_setPinDir 04AF  
                      VM_Init@F1329 003F                          LCD_Write@c 0025  
                     ??_LCD_PutChar 0023              ?_VM_Mode_CoinInsertion 0070  
               start_initialization 000F                 DIO_setPinValue@port 0024  
             __end_of_LCD_PutString 07C5               _VM_Mode_DispenseDrink 0654  
           ?_VM_Mode_DrinkSelection 0070                   i1_DIO_setPinValue 0525  
                ?i1_DIO_setPinValue 0070                       _TIMR1_Delay5s 07ED  
                       __pdataBANK0 003F                      ADC_Read@result 0073  
               ??i1_DIO_setPinValue 0072                            ?_LCD_Out 0070  
                       __pbssCOMMON 007C              VM_Mode_DispenseDrink@i 002D  
                         ___latbits 0000                       __pcstackBANK0 0020  
                          LCD_Out@c 0022                 __end_of_LCD_PutChar 03B6  
                       ??_LCD_Write 0023                            ?_VM_Init 0070  
    __end_of_VM_Mode_DrinkSelection 0794           __end_ofi1_DIO_setPinValue 059B  
                    ?_TIMR1_Delay5s 0070                           __pstrings 0100  
                          _ADC_Init 00ED                            _ADC_Read 06A2  
            ?_VM_Mode_DispenseDrink 0070                   interrupt_function 0004  
                          _LCD_Init 059B                            _PIE1bits 008C  
                    LCD_PutString@a 0026                      LCD_PutString@i 002B  
                          _PIR1bits 000C                          _ADCON0bits 001F  
                       __stringbase 010F                  DIO_setPinMode@mode 0026  
                DIO_setPinMode@port 0029                         _LCD_PutChar 0322  
                 ??_DIO_setPinValue 0022                  DIO_setPinValue@pin 0020  
                   ??_TIMR1_Delay5s 0020             ??_VM_Mode_CoinInsertion 002D  
                __end_of__stringtab 0110                            __ptext10 059B  
                          __ptext11 05FE                            __ptext12 01C3  
                          __ptext13 04AF                            __ptext14 0029  
                          __ptext15 0433                            __ptext16 00ED  
                          __ptext17 0281                            __ptext18 0525  
                          __ptext19 06A2                          VM_Init@lcd 002D  
                        _INTCONbits 000B                            intlevel1 0000  
                         stringcode 010A            ??_VM_Mode_DispenseChange 002D  
                          stringdir 010A                            stringtab 0100  
           ??_VM_Mode_DispenseDrink 002D                       _gCurrentDrink 003C  
                     _gCurrentState 0044                      TIMR1_Delay5s@i 0020  
                     _DIO_setPinDir 0433  
